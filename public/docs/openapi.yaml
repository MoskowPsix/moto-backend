openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 12|CVkjRt9Qn9ZJkRTgydVYJYJS4NGuiP0YinEFNZPaac041138
                  token_type: Bearer
                  user:
                    name: 'Олеся Фёдоровна Миронова'
                    email: artem42@example.net
                    email_verified_at: '2025-01-23T05:02:24.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 12|CVkjRt9Qn9ZJkRTgydVYJYJS4NGuiP0YinEFNZPaac041138
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Олеся Фёдоровна Миронова'
                      email:
                        type: string
                        example: artem42@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-23T05:02:24.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: kenna50@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: "Z]IX.`n'`Xxxl)v"
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 13|pvoWAbvnHySFEvCFWjJpgzVQY7F1890oZXjYzO91e0e12ed9
                  token_type: Bearer
                  user:
                    name: 'Кононова Зоя Андреевна'
                    email: stanislav15@example.net
                    email_verified_at: '2025-01-23T05:02:25.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 13|pvoWAbvnHySFEvCFWjJpgzVQY7F1890oZXjYzO91e0e12ed9
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Кононова Зоя Андреевна'
                      email:
                        type: string
                        example: stanislav15@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-23T05:02:25.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: iix
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: maymie79@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '?NxCh]nr+'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: et
                  nullable: false
                avatar:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: accusantium
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: false
                data:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["quae","vel"]'
                  nullable: false
              required:
                - type
                - file
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Dr.
                    surname: Mr.
                    patronymic: Ms.
                    date_of_birth: null
                    city: Талдом
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(495) 647-6609'
                    start_number: '499'
                    group: Водолаз
                    rank_number: '99999'
                    rank: Столяр
                    community: 'МФО СеверРосМотор'
                    coach: 'Котов Игнат Алексеевич'
                    moto_stamp: Mr.
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Талдом
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(495) 647-6609'
                      start_number:
                        type: string
                        example: '499'
                      group:
                        type: string
                        example: Водолаз
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Столяр
                      community:
                        type: string
                        example: 'МФО СеверРосМотор'
                      coach:
                        type: string
                        example: 'Котов Игнат Алексеевич'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Mr.
      tags:
        - PersonalInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: false
                surname:
                  type: string
                  description: ''
                  example: corporis
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: eius
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-23T05:02:25'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: similique
                  nullable: false
                inn:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
                snils:
                  type: integer
                  description: ''
                  example: 2
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: false
                startNumber:
                  type: integer
                  description: ''
                  example: 12
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: false
                community:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: officia
                  nullable: false
                engine:
                  type: string
                  description: ''
                  example: ab
                  nullable: false
              required:
                - name
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - rankNumber
                - motoStamp
                - engine
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 27
                      name: 'Тихонов Иван Евгеньевич'
                      desc: 'Iusto et qui et et. Temporibus distinctio ipsam nemo dicta quibusdam expedita beatae. Vero laudantium quis illum est. Deserunt quasi possimus soluta ratione.'
                      is_work: false
                      date_start: null
                      images: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 28
                      name: 'Устинов Ананий Львович'
                      desc: 'Beatae ad eaque nobis error non reiciendis. Optio est repellat blanditiis fugiat odit quos. Quia molestiae qui ducimus aperiam culpa. Dolore ut sint nostrum neque eligendi expedita vel.'
                      is_work: false
                      date_start: null
                      images: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 2
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 30
                    name: 'Геннадий Дмитриевич Цветков'
                    desc: 'Accusantium enim sequi minima omnis. Aperiam temporibus est alias corporis corrupti. Soluta quia id commodi dolores odit quam.'
                    is_work: true
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 30
                      name:
                        type: string
                        example: 'Геннадий Дмитриевич Цветков'
                      desc:
                        type: string
                        example: 'Accusantium enim sequi minima omnis. Aperiam temporibus est alias corporis corrupti. Soluta quia id commodi dolores odit quam.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: lttvgdejpsbjbdrlmygzoidgpretbnnubjpzdqnlnexitzmqzazuyubmjlwqnjweuvtrmgcvideqshz
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-23T05:02:25'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 9
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением. Размер файла в поле value не может быть больше 2048 Кб.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 29
                    name: 'Никифорова Клавдия Фёдоровна'
                    desc: 'Ipsam aut a voluptatem asperiores aliquam eius ut. Et magni adipisci sunt quasi expedita in omnis. Qui reiciendis dolorem est quia itaque quo. Autem corporis facilis sint est debitis odio.'
                    is_work: false
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: 'Никифорова Клавдия Фёдоровна'
                      desc:
                        type: string
                        example: 'Ipsam aut a voluptatem asperiores aliquam eius ut. Et magni adipisci sunt quasi expedita in omnis. Qui reiciendis dolorem est quia itaque quo. Autem corporis facilis sint est debitis odio.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    name: 'Лилия Алексеевна Кулагина'
                    email: borisova.ananii@example.org
                    email_verified_at: '2025-01-23T05:02:25.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Лилия Алексеевна Кулагина'
                      email:
                        type: string
                        example: borisova.ananii@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-23T05:02:25.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 6
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 27
                      name: Экономист
                      address: '883704, Тверская область, город Сергиев Посад, наб. Косиора, 24'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Nostrum illum eum ut. Consequuntur maiores beatae exercitationem tenetur. Ut eum placeat minus aspernatur facilis odio. Rerum dolores impedit voluptatem doloribus quidem iure. Dicta velit vel quod dolore similique blanditiis ea aut. Est est dolor recusandae occaecati sequi. Saepe libero soluta laudantium aut eos eum. Cum sequi eligendi dolorem cumque. Dicta et aliquam qui aspernatur ut.'
                      length: 904
                      turns: 13
                      free: false
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 28
                      name: Бармен
                      address: '183330, Вологодская область, город Орехово-Зуево, спуск Косиора, 26'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Optio quia repudiandae provident commodi alias amet saepe ut. Labore ducimus omnis doloremque. Aut natus et officia fugiat libero. Fugiat sint velit labore quis facilis. Ipsa sed exercitationem fuga molestiae. Aperiam officiis dignissimos dolore laudantium qui velit magni. Quia ut laboriosam et. Excepturi consectetur repellat quia. Laboriosam quae fuga cum et sapiente et. Ad ut sit omnis consequatur. Et architecto qui officia esse.'
                      length: 426
                      turns: 29
                      free: true
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 10
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 30
                    name: Машинист
                    address: '299913, Томская область, город Пушкино, пл. 1905 года, 35'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Perspiciatis non est voluptatum saepe tenetur sint. Quo aut commodi voluptate itaque magni ut. Adipisci illo est quia corporis voluptas. Quo labore ad dolor deserunt qui voluptate et. Et quibusdam pariatur iste sed earum repudiandae. Deleniti enim est quibusdam accusamus fugit consequatur est sed. Modi et hic velit et consequuntur magnam. Eaque est nobis eos fugiat nihil iste repellendus. Assumenda enim error labore impedit ipsam. Quia in quidem quaerat numquam in. Iure sit dolore ab molestias.'
                    length: 778
                    turns: 28
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 30
                      name:
                        type: string
                        example: Машинист
                      address:
                        type: string
                        example: '299913, Томская область, город Пушкино, пл. 1905 года, 35'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Perspiciatis non est voluptatum saepe tenetur sint. Quo aut commodi voluptate itaque magni ut. Adipisci illo est quia corporis voluptas. Quo labore ad dolor deserunt qui voluptate et. Et quibusdam pariatur iste sed earum repudiandae. Deleniti enim est quibusdam accusamus fugit consequatur est sed. Modi et hic velit et consequuntur magnam. Eaque est nobis eos fugiat nihil iste repellendus. Assumenda enim error labore impedit ipsam. Quia in quidem quaerat numquam in. Iure sit dolore ab molestias.'
                      length:
                        type: integer
                        example: 778
                      turns:
                        type: integer
                        example: 28
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: nemsqjyuhldcooccgvwzxzkhlqwtkbsmvi
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: ea
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением. Размер файла в поле value не может быть больше 2048 Кб.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 11
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["nobis","error"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 29
                    name: Абразивоструйщик
                    address: '426363, Вологодская область, город Дорохово, пр. Гоголя, 67'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Dolore et consectetur autem placeat doloribus quidem. Eum blanditiis mollitia nam quos. Ratione aut tempore aliquam adipisci sint dolores voluptatibus. Nihil vel quos ratione. Est veniam fugiat rerum quisquam saepe soluta debitis molestiae. Et sunt sint vel veniam similique facere dolore. Vel sit iure non et modi ullam sed.'
                    length: 978
                    turns: 47
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: Абразивоструйщик
                      address:
                        type: string
                        example: '426363, Вологодская область, город Дорохово, пр. Гоголя, 67'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Dolore et consectetur autem placeat doloribus quidem. Eum blanditiis mollitia nam quos. Ratione aut tempore aliquam adipisci sint dolores voluptatibus. Nihil vel quos ratione. Est veniam fugiat rerum quisquam saepe soluta debitis molestiae. Et sunt sint vel veniam similique facere dolore. Vel sit iure non et modi ullam sed.'
                      length:
                        type: integer
                        example: 978
                      turns:
                        type: integer
                        example: 47
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    name: 'Большакова Жанна Владимировна'
                    email: ruslan.silin@example.net
                    email_verified_at: '2025-01-23T05:02:25.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Большакова Жанна Владимировна'
                      email:
                        type: string
                        example: ruslan.silin@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-23T05:02:25.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
