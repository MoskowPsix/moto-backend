openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: nam
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: sit
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:52'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
                snils:
                  type: integer
                  description: ''
                  example: 19
                  nullable: false
                phoneNumber:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 20
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: ex
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: numquam
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: tenetur
                  nullable: false
                coach:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: dolores
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: sunt
                  nullable: false
                numberAndSeria:
                  type: string
                  description: ''
                  example: non
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 11
                  items:
                    type: integer
                    nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - community
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 154
                      name: null
                      email: schumm.davin@example.org
                      email_verified_at: '2025-03-17T07:13:52.000000Z'
                      created_at: '2025-03-17T07:13:52.000000Z'
                      updated_at: '2025-03-17T07:13:52.000000Z'
                      avatar: null
                      personal_info: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 155
                      name: null
                      email: mittie.collins@example.org
                      email_verified_at: '2025-03-17T07:13:52.000000Z'
                      created_at: '2025-03-17T07:13:52.000000Z'
                      updated_at: '2025-03-17T07:13:52.000000Z'
                      avatar: null
                      personal_info: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 1
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 55
                    name: 'Antonina Botsford'
                    desc: 'Sunt culpa inventore qui earum eum esse. Ab non enim itaque qui qui optio officiis. Molestiae ut autem id.'
                    price: '239'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 55
                      name:
                        type: string
                        example: 'Antonina Botsford'
                      desc:
                        type: string
                        example: 'Sunt culpa inventore qui earum eum esse. Ab non enim itaque qui qui optio officiis. Molestiae ut autem id.'
                      price:
                        type: string
                        example: '239'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vbscozymqxticmtcc
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tjgwrjjdoxxhncfooefld
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 7858031.937161
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 56
                    name: 'Mrs. Raina Bartell PhD'
                    desc: 'Saepe repellendus rem id quia dolorem sed fuga. Quis dolorem asperiores explicabo aut. Eligendi quia delectus numquam architecto.'
                    price: '7.830246e+08'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 56
                      name:
                        type: string
                        example: 'Mrs. Raina Bartell PhD'
                      desc:
                        type: string
                        example: 'Saepe repellendus rem id quia dolorem sed fuga. Quis dolorem asperiores explicabo aut. Eligendi quia delectus numquam architecto.'
                      price:
                        type: string
                        example: '7.830246e+08'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: x
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qsmkburwbjgyovm
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 0.889
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 9
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 57
                    name: 'Bartholome Franecki'
                    desc: 'Et excepturi sunt enim adipisci expedita ducimus vitae consequatur. Voluptatem quam reiciendis ut itaque. Qui ad molestiae numquam quo in non. At sit rem quisquam quia repellat asperiores.'
                    price: '52995'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 57
                      name:
                        type: string
                        example: 'Bartholome Franecki'
                      desc:
                        type: string
                        example: 'Et excepturi sunt enim adipisci expedita ducimus vitae consequatur. Voluptatem quam reiciendis ut itaque. Qui ad molestiae numquam quo in non. At sit rem quisquam quia repellat asperiores.'
                      price:
                        type: string
                        example: '52995'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 6
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 13|TXuq4N12AMHFZTQD0unfp1ModbBzSIryRKO1S5IE969a30fc
                  token_type: Bearer
                  user:
                    id: 147
                    name: null
                    email: merlin79@example.com
                    email_verified_at: '2025-03-17T07:13:49.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 13|TXuq4N12AMHFZTQD0unfp1ModbBzSIryRKO1S5IE969a30fc
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 147
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: merlin79@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:13:49.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table. Must be at least 3 characters.'
                  example: yazmin94@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: '04,gJ>#bMJW>(R97<x'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 14|cHfmcKhusJ8QWkvGnAV9yXViLwPIzvhBRYQuJPD91c947bb7
                  token_type: Bearer
                  user:
                    id: 148
                    name: null
                    email: mmosciski@example.net
                    email_verified_at: '2025-03-17T07:13:50.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 14|cHfmcKhusJ8QWkvGnAV9yXViLwPIzvhBRYQuJPD91c947bb7
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 148
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: mmosciski@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:13:50.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: cftysqcomi
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: prosacco.bernice@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: "1KU@17!KY_&zE;'e2ev"
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: distinctio
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 48
                      name: 'Prof. Isac Keeling MD'
                      fullname: null
                      coach: null
                      city: Hartmannfort
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 49
                      name: 'Miss Adrienne Robel'
                      fullname: null
                      coach: null
                      city: Schulistport
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 11
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                fullname:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 51
                    name: 'Raquel Glover'
                    fullname: null
                    coach: null
                    city: 'South Javonte'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 51
                      name:
                        type: string
                        example: 'Raquel Glover'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'South Javonte'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: l
                  nullable: false
                fullname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ujoloofrdudnhjdu
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vmjokbonsb
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: false
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eytewnmznzxv
                  nullable: false
              required:
                - name
                - locationId
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 50
                    name: 'Paula Jakubowski'
                    fullname: null
                    coach: null
                    city: Justenfort
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 50
                      name:
                        type: string
                        example: 'Paula Jakubowski'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Justenfort
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 13
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: true
                fullname:
                  type: string
                  description: ''
                  example: illo
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
              required:
                - id
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 52
                    name: 'Fay Zulauf'
                    fullname: null
                    coach: null
                    city: Rhiannamouth
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 52
                      name:
                        type: string
                        example: 'Fay Zulauf'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Rhiannamouth
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cxvlwsoljyfcesiglrrzngb
                  nullable: true
                fullname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: drtncl
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tfdjnvgntgktfnbd
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: izyxvfozud
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 5
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 10
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wxoynziicw
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rvyeesxreteqmnsfp
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 14
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: voluptatem
        required: true
        schema:
          type: string
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kpabfakliprskaku
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 13
                  nullable: false
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eyvswe
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
              required:
                - name
                - year
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 177
                    name: file_67d7cbb048d02
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 177
                      name:
                        type: string
                        example: file_67d7cbb048d02
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: licenses
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://erdman.biz/'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: delectus
                  nullable: true
                itWorksDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:52'
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 178
                      name: file_67d7cbb054f56
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 179
                      name: file_67d7cbb05aa8e
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 180
                    name: file_67d7cbb069479
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 180
                      name:
                        type: string
                        example: file_67d7cbb069479
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 181
                    name: file_67d7cbb0787a4
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 181
                      name:
                        type: string
                        example: file_67d7cbb0787a4
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: minus
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                itWorksDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:52'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 64
                    status: false
                    desc: 'Транзакция создана'
                    count: 5
                    date: '2025-03-07 09:57:33'
                    user:
                      id: 1
                      name: Dr.
                      email: bolshe.kivi@gmail.com
                      email_verified_at: '2025-02-20T07:28:21.000000Z'
                      avatar: null
                      personal:
                        name: Dr.
                        surname: Mr.
                        patronymic: Dr.
                        date_of_birth: '2014-11-23'
                        city: 'East Charleneview'
                        inn: '99999999999'
                        snils: '10000000000'
                        phone_number: +1-352-550-1434
                        start_number: '560'
                        group: 'Engine Assembler'
                        rank_number: '99999'
                        rank: 'Pressing Machine Operator'
                        community: Jacobs-Walter
                        coach: 'Allen Littel'
                        moto_stamp: Prof.
                        engine: Prof.
                        number_and_seria: '10000000000'
                        region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 64
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: 'Транзакция создана'
                      count:
                        type: integer
                        example: 5
                      date:
                        type: string
                        example: '2025-03-07 09:57:33'
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Dr.
                          email:
                            type: string
                            example: bolshe.kivi@gmail.com
                          email_verified_at:
                            type: string
                            example: '2025-02-20T07:28:21.000000Z'
                          avatar:
                            type: string
                            example: null
                          personal:
                            type: object
                            properties:
                              name:
                                type: string
                                example: Dr.
                              surname:
                                type: string
                                example: Mr.
                              patronymic:
                                type: string
                                example: Dr.
                              date_of_birth:
                                type: string
                                example: '2014-11-23'
                              city:
                                type: string
                                example: 'East Charleneview'
                              inn:
                                type: string
                                example: '99999999999'
                              snils:
                                type: string
                                example: '10000000000'
                              phone_number:
                                type: string
                                example: +1-352-550-1434
                              start_number:
                                type: string
                                example: '560'
                              group:
                                type: string
                                example: 'Engine Assembler'
                              rank_number:
                                type: string
                                example: '99999'
                              rank:
                                type: string
                                example: 'Pressing Machine Operator'
                              community:
                                type: string
                                example: Jacobs-Walter
                              coach:
                                type: string
                                example: 'Allen Littel'
                              moto_stamp:
                                type: string
                                example: Prof.
                              engine:
                                type: string
                                example: Prof.
                              number_and_seria:
                                type: string
                                example: '10000000000'
                              region:
                                type: string
                                example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 12
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:51'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 64
                  status: false
                  desc: 'Транзакция создана'
                  count: 5
                  date: '2025-03-07 09:57:33'
                  user:
                    id: 1
                    name: Dr.
                    email: bolshe.kivi@gmail.com
                    email_verified_at: '2025-02-20T07:28:21.000000Z'
                    avatar: null
                    personal:
                      name: Dr.
                      surname: Mr.
                      patronymic: Dr.
                      date_of_birth: '2014-11-23'
                      city: 'East Charleneview'
                      inn: '99999999999'
                      snils: '10000000000'
                      phone_number: +1-352-550-1434
                      start_number: '560'
                      group: 'Engine Assembler'
                      rank_number: '99999'
                      rank: 'Pressing Machine Operator'
                      community: Jacobs-Walter
                      coach: 'Allen Littel'
                      moto_stamp: Prof.
                      engine: Prof.
                      number_and_seria: '10000000000'
                      region: null
                properties:
                  id:
                    type: integer
                    example: 64
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: 'Транзакция создана'
                  count:
                    type: integer
                    example: 5
                  date:
                    type: string
                    example: '2025-03-07 09:57:33'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Dr.
                      email:
                        type: string
                        example: bolshe.kivi@gmail.com
                      email_verified_at:
                        type: string
                        example: '2025-02-20T07:28:21.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Dr.
                          surname:
                            type: string
                            example: Mr.
                          patronymic:
                            type: string
                            example: Dr.
                          date_of_birth:
                            type: string
                            example: '2014-11-23'
                          city:
                            type: string
                            example: 'East Charleneview'
                          inn:
                            type: string
                            example: '99999999999'
                          snils:
                            type: string
                            example: '10000000000'
                          phone_number:
                            type: string
                            example: +1-352-550-1434
                          start_number:
                            type: string
                            example: '560'
                          group:
                            type: string
                            example: 'Engine Assembler'
                          rank_number:
                            type: string
                            example: '99999'
                          rank:
                            type: string
                            example: 'Pressing Machine Operator'
                          community:
                            type: string
                            example: Jacobs-Walter
                          coach:
                            type: string
                            example: 'Allen Littel'
                          moto_stamp:
                            type: string
                            example: Prof.
                          engine:
                            type: string
                            example: Prof.
                          number_and_seria:
                            type: string
                            example: '10000000000'
                          region:
                            type: string
                            example: null
      tags:
        - Endpoints
      security: []
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 27
                      name: 'Mr. Johnpaul Abshire II'
                      description: 'Sunt mollitia similique in omnis adipisci non. Ducimus doloremque doloribus libero sit. Ex quo dolorum ducimus minus eos culpa fuga.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 28
                      name: 'Holly Hermiston'
                      description: 'Ut nisi quis sed deleniti perspiciatis consequatur vel. Harum et sit totam at. Dolorum eum mollitia dolores id ea vel molestiae.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quam
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 22
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 30
                    name: 'Brice Smith MD'
                    description: 'Sed perferendis libero officia neque animi et. Ex et similique nemo aut. Iste dolores ducimus provident sed natus facilis.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 30
                      name:
                        type: string
                        example: 'Brice Smith MD'
                      description:
                        type: string
                        example: 'Sed perferendis libero officia neque animi et. Ex et similique nemo aut. Iste dolores ducimus provident sed natus facilis.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: aczkfylchirzh
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Voluptatibus repellendus repellat inventore et illo eius sed amet.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 29
                    name: 'Dr. Luella Huels III'
                    description: 'Beatae unde quae nisi at. Natus pariatur iusto impedit quaerat modi aut. Ipsam suscipit molestias explicabo ullam itaque. Maiores id assumenda minima sunt excepturi quia et veritatis.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: 'Dr. Luella Huels III'
                      description:
                        type: string
                        example: 'Beatae unde quae nisi at. Natus pariatur iusto impedit quaerat modi aut. Ipsam suscipit molestias explicabo ullam itaque. Maiores id assumenda minima sunt excepturi quia et veritatis.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 8
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 31
                    name: 'Mrs. Reba Davis'
                    description: 'Est et rerum est similique consequatur beatae tenetur. Voluptates dolor facere earum quos et autem. Exercitationem ullam quia aut facere repellendus et voluptate hic.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 31
                      name:
                        type: string
                        example: 'Mrs. Reba Davis'
                      description:
                        type: string
                        example: 'Est et rerum est similique consequatur beatae tenetur. Voluptates dolor facere earum quos et autem. Exercitationem ullam quia aut facere repellendus et voluptate hic.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cvuehrxrxomupko
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Eos earum et praesentium magnam.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 14
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 24
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: dolorum
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Mr.
                    surname: Mr.
                    patronymic: Mrs.
                    date_of_birth: '1984-01-19'
                    city: 'Port Christopburgh'
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '+1 (352) 815-1575'
                    start_number: '961'
                    group: 'Materials Inspector'
                    rank_number: '100000'
                    rank: 'Building Inspector'
                    community: 'Borer, Stroman and Lind'
                    coach: 'Rhea Schinner'
                    moto_stamp: Mr.
                    engine: Prof.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1984-01-19'
                      city:
                        type: string
                        example: 'Port Christopburgh'
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+1 (352) 815-1575'
                      start_number:
                        type: string
                        example: '961'
                      group:
                        type: string
                        example: 'Materials Inspector'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Building Inspector'
                      community:
                        type: string
                        example: 'Borer, Stroman and Lind'
                      coach:
                        type: string
                        example: 'Rhea Schinner'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:52'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: provident
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 8
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: ullam
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quidem
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: corrupti
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Mr.
                    surname: Prof.
                    patronymic: Mrs.
                    date_of_birth: '2007-05-03'
                    city: Weissnatburgh
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: 857.831.9283
                    start_number: '840'
                    group: 'Operating Engineer'
                    rank_number: '99999'
                    rank: 'Funeral Director'
                    community: "Price, O'Keefe and DuBuque"
                    coach: 'Pearline Fisher'
                    moto_stamp: Dr.
                    engine: Ms.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '2007-05-03'
                      city:
                        type: string
                        example: Weissnatburgh
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 857.831.9283
                      start_number:
                        type: string
                        example: '840'
                      group:
                        type: string
                        example: 'Operating Engineer'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Funeral Director'
                      community:
                        type: string
                        example: "Price, O'Keefe and DuBuque"
                      coach:
                        type: string
                        example: 'Pearline Fisher'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Ms.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: iure
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:52'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: impedit
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: numquam
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: numquam
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: error
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: corporis
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: minus
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 42
                      name: 'Mrs. Heloise Murray III'
                      desc: 'Illo quam nemo omnis est reprehenderit eius fuga. Illum molestiae omnis illum enim. Quia quae odio rerum et. Enim non praesentium quidem esse. Ipsa maxime omnis enim voluptatem et.'
                      is_work: false
                      date_start: '2025-03-17T18:39:12.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 43
                      name: 'Dario Bernier'
                      desc: 'Autem non soluta voluptatibus qui nulla dolor et. Enim assumenda et quis voluptas molestiae aut ut. Neque rem consectetur quas vel et magni accusantium eius.'
                      is_work: true
                      date_start: '2025-03-17T09:12:57.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 18
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 19
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 6
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:51'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:51'
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 45
                    name: 'Kaci Quigley'
                    desc: 'Illo dolores assumenda perspiciatis ut. A doloremque quia praesentium esse qui corrupti fugiat. Laboriosam accusantium vero sunt quibusdam magni velit nihil. Soluta quas autem ab laborum quas omnis.'
                    is_work: false
                    date_start: '2025-03-17T10:38:08.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 45
                      name:
                        type: string
                        example: 'Kaci Quigley'
                      desc:
                        type: string
                        example: 'Illo dolores assumenda perspiciatis ut. A doloremque quia praesentium esse qui corrupti fugiat. Laboriosam accusantium vero sunt quibusdam magni velit nihil. Soluta quas autem ab laborum quas omnis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T10:38:08.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: uwpiwnsegjqsbvrdsujpcyceyst
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:51'
                  nullable: false
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:51'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 14
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 18
                  items:
                    type: integer
                    nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 44
                    name: 'Mr. Gayle Hagenes IV'
                    desc: 'Eos praesentium qui et omnis eos asperiores rerum. Dolor nemo minus explicabo.'
                    is_work: true
                    date_start: '2025-03-17T04:25:45.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 44
                      name:
                        type: string
                        example: 'Mr. Gayle Hagenes IV'
                      desc:
                        type: string
                        example: 'Eos praesentium qui et omnis eos asperiores rerum. Dolor nemo minus explicabo.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-17T04:25:45.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 11
                  items:
                    type: integer
                    nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 46
                    name: 'Amir Kris MD'
                    desc: 'Occaecati repudiandae recusandae inventore voluptas labore repellat sed. Voluptate sed nihil facilis autem rerum quaerat. Asperiores dolorem quis numquam quis et enim.'
                    is_work: true
                    date_start: '2025-03-17T07:33:38.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 46
                      name:
                        type: string
                        example: 'Amir Kris MD'
                      desc:
                        type: string
                        example: 'Occaecati repudiandae recusandae inventore voluptas labore repellat sed. Voluptate sed nihil facilis autem rerum quaerat. Asperiores dolorem quis numquam quis et enim.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-17T07:33:38.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: xutrsybsklbnggdwxvfwgqdnhhbhagcweetgrhfaypnzravrozpyduhozdagknbkyf
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:51'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T07:13:51'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 18
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - voluptatem
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 3
                  items:
                    type: integer
                    nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 16
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 10
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 47
                    name: 'Kaylah McKenzie'
                    desc: 'Dolores voluptatem et maiores ea aliquam cum. Soluta porro incidunt magnam tempora. Laboriosam optio laudantium magni.'
                    is_work: false
                    date_start: '2025-03-17T14:22:05.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 47
                      name:
                        type: string
                        example: 'Kaylah McKenzie'
                      desc:
                        type: string
                        example: 'Dolores voluptatem et maiores ea aliquam cum. Soluta porro incidunt magnam tempora. Laboriosam optio laudantium magni.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T14:22:05.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: frank.leuschke@example.com
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://hettinger.com/et-odio-et-quasi-ut.html'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '8cU!ZSwg_*/rIN'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: qui
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 153
                    name: null
                    email: rnolan@example.org
                    email_verified_at: '2025-03-17T07:13:51.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 153
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: rnolan@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:13:51.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 1
                  nullable: false
              required:
                - roleId
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 1
                    login: shakalik
                    password_1: fdsfgwergtwretgwrtgrtg
                    password_2: gregweghgfjyjytkjtjffh
                    token: test
                    user:
                      id: 1
                      name: Dr.
                      email: bolshe.kivi@gmail.com
                      email_verified_at: '2025-02-20T07:28:21.000000Z'
                      avatar: null
                      personal:
                        name: Dr.
                        surname: Mr.
                        patronymic: Dr.
                        date_of_birth: '2014-11-23'
                        city: 'East Charleneview'
                        inn: '99999999999'
                        snils: '10000000000'
                        phone_number: +1-352-550-1434
                        start_number: '560'
                        group: 'Engine Assembler'
                        rank_number: '99999'
                        rank: 'Pressing Machine Operator'
                        community: Jacobs-Walter
                        coach: 'Allen Littel'
                        moto_stamp: Prof.
                        engine: Prof.
                        number_and_seria: '10000000000'
                        region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      login:
                        type: string
                        example: shakalik
                      password_1:
                        type: string
                        example: fdsfgwergtwretgwrtgrtg
                      password_2:
                        type: string
                        example: gregweghgfjyjytkjtjffh
                      token:
                        type: string
                        example: test
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Dr.
                          email:
                            type: string
                            example: bolshe.kivi@gmail.com
                          email_verified_at:
                            type: string
                            example: '2025-02-20T07:28:21.000000Z'
                          avatar:
                            type: string
                            example: null
                          personal:
                            type: object
                            properties:
                              name:
                                type: string
                                example: Dr.
                              surname:
                                type: string
                                example: Mr.
                              patronymic:
                                type: string
                                example: Dr.
                              date_of_birth:
                                type: string
                                example: '2014-11-23'
                              city:
                                type: string
                                example: 'East Charleneview'
                              inn:
                                type: string
                                example: '99999999999'
                              snils:
                                type: string
                                example: '10000000000'
                              phone_number:
                                type: string
                                example: +1-352-550-1434
                              start_number:
                                type: string
                                example: '560'
                              group:
                                type: string
                                example: 'Engine Assembler'
                              rank_number:
                                type: string
                                example: '99999'
                              rank:
                                type: string
                                example: 'Pressing Machine Operator'
                              community:
                                type: string
                                example: Jacobs-Walter
                              coach:
                                type: string
                                example: 'Allen Littel'
                              moto_stamp:
                                type: string
                                example: Prof.
                              engine:
                                type: string
                                example: Prof.
                              number_and_seria:
                                type: string
                                example: '10000000000'
                              region:
                                type: string
                                example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fkmwgcnvwuywwxpnrow
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lwyjsyphelgnnuqrooix
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ogsuhnlfejlpu
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sorqjznszfjbcqkqdlqzvpugx
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 40
                      name: Assembler
                      address: "900 Schulist Ramp\nBobbiehaven, MI 74202-9559"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Laudantium quis fugit ut fugit sapiente. Vel quae quo expedita ut aliquam vel. Consectetur aut aut odit veniam aut. Error nesciunt esse itaque fuga itaque molestiae illum. Culpa quia aperiam et quisquam dolores. Et ad qui soluta et distinctio et. Quas nihil eveniet accusamus magni. Ipsum laboriosam voluptatem animi dolore illo recusandae. Ratione amet autem commodi ducimus et est excepturi impedit. Qui sed commodi fugiat qui et. Tempore mollitia aspernatur sit maxime neque quo corporis.'
                      length: 39
                      turns: 0
                      free: true
                      is_work: false
                      spec: null
                      location:
                        id: 45
                        name: Ненецкий
                        type: 'автономный округ'
                      store: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 41
                      name: Bookbinder
                      address: "2550 Woodrow Glens\nTremblayhaven, OK 94499-9399"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Laboriosam labore amet officiis dolor voluptas. Dolore provident voluptatem atque ratione distinctio consequatur possimus. Iure aut sunt nobis recusandae explicabo. Qui est nihil necessitatibus sit atque beatae magnam autem. Dolor quia est est rerum. Est eum quia omnis unde vero. Et omnis et a et temporibus eos asperiores. Cumque sequi officiis id et est quo qui. Dicta a sunt maxime provident iusto esse perferendis. Nemo enim numquam nemo sit dolorem beatae veritatis sed.'
                      length: 68
                      turns: 83
                      free: false
                      is_work: false
                      spec: null
                      location:
                        id: 46
                        name: Нижегородская
                        type: область
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 20
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 43
                    name: 'Bicycle Repairer'
                    address: "786 Labadie Islands Apt. 258\nEast Meda, NJ 41264-7466"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Quaerat optio consectetur rerum incidunt. Quidem error consectetur vitae dolor quia et suscipit. Aperiam at debitis et nihil sunt. Et et et nemo. Et suscipit modi voluptatum omnis nihil reiciendis. Numquam dolorum quae minima aperiam nihil. Dolor omnis optio non qui ut quidem odio. Deserunt ratione quae quis possimus ratione. Et commodi qui nisi voluptatem repellendus doloremque repellendus. Pariatur quibusdam omnis incidunt a.'
                    length: 128
                    turns: 2
                    free: false
                    is_work: false
                    spec: null
                    location:
                      id: 41
                      name: Мордовия
                      type: республика
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 43
                      name:
                        type: string
                        example: 'Bicycle Repairer'
                      address:
                        type: string
                        example: "786 Labadie Islands Apt. 258\nEast Meda, NJ 41264-7466"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Quaerat optio consectetur rerum incidunt. Quidem error consectetur vitae dolor quia et suscipit. Aperiam at debitis et nihil sunt. Et et et nemo. Et suscipit modi voluptatum omnis nihil reiciendis. Numquam dolorum quae minima aperiam nihil. Dolor omnis optio non qui ut quidem odio. Deserunt ratione quae quis possimus ratione. Et commodi qui nisi voluptatem repellendus doloremque repellendus. Pariatur quibusdam omnis incidunt a.'
                      length:
                        type: integer
                        example: 128
                      turns:
                        type: integer
                        example: 2
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 41
                          name:
                            type: string
                            example: Мордовия
                          type:
                            type: string
                            example: республика
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: rhajlybkkphtfycecpdekeqmfmlcddtdoszisugnbeacdcm
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: corporis
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 13
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["voluptatem","ut"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["earum","et"]'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 16
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 8
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 42
                    name: Welder
                    address: "85889 Ferry Summit Suite 696\nHeidenreichstad, OK 87801"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Omnis culpa numquam deleniti cumque repellendus praesentium. Nihil in id sunt sequi dolor odit reiciendis ut. Provident sed voluptatem perferendis est in. Ratione nobis dolorem eum. Temporibus sint dolore tempore nostrum beatae nemo assumenda saepe. Ut qui esse ratione repellendus sapiente itaque iste. Itaque et nulla doloremque saepe.'
                    length: 920
                    turns: 84
                    free: false
                    is_work: false
                    spec: null
                    location:
                      id: 10
                      name: Бурятия
                      type: республика
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                      name:
                        type: string
                        example: Welder
                      address:
                        type: string
                        example: "85889 Ferry Summit Suite 696\nHeidenreichstad, OK 87801"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Omnis culpa numquam deleniti cumque repellendus praesentium. Nihil in id sunt sequi dolor odit reiciendis ut. Provident sed voluptatem perferendis est in. Ratione nobis dolorem eum. Temporibus sint dolore tempore nostrum beatae nemo assumenda saepe. Ut qui esse ratione repellendus sapiente itaque iste. Itaque et nulla doloremque saepe.'
                      length:
                        type: integer
                        example: 920
                      turns:
                        type: integer
                        example: 84
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 10
                          name:
                            type: string
                            example: Бурятия
                          type:
                            type: string
                            example: республика
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 44
                    name: 'Production Planning'
                    address: "2008 Hayes Plaza\nNew Bridie, SD 79387-6280"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Saepe voluptate assumenda dignissimos et voluptates delectus quod. Consequuntur eligendi libero provident dignissimos et. Quis sint commodi nam eum rem amet placeat sit. Aut corporis molestiae non corporis. Possimus praesentium nemo harum non in et. Tempora est consequatur facilis minima. Consequatur dolorem magni ipsum minima iste. Sunt veniam dolore quia laudantium qui.'
                    length: 821
                    turns: 40
                    free: true
                    is_work: false
                    spec: null
                    location:
                      id: 59
                      name: Санкт-Петербург
                      type: город
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 44
                      name:
                        type: string
                        example: 'Production Planning'
                      address:
                        type: string
                        example: "2008 Hayes Plaza\nNew Bridie, SD 79387-6280"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Saepe voluptate assumenda dignissimos et voluptates delectus quod. Consequuntur eligendi libero provident dignissimos et. Quis sint commodi nam eum rem amet placeat sit. Aut corporis molestiae non corporis. Possimus praesentium nemo harum non in et. Tempora est consequatur facilis minima. Consequatur dolorem magni ipsum minima iste. Sunt veniam dolore quia laudantium qui.'
                      length:
                        type: integer
                        example: 821
                      turns:
                        type: integer
                        example: 40
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 59
                          name:
                            type: string
                            example: Санкт-Петербург
                          type:
                            type: string
                            example: город
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: kyiuhvuwexkhegwzxwrfusbiurihqdrhpspfrhhtfgmiaoebhempqiirqlililevjnbwstdhifycrha
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - aut
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 2
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["ea","similique"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["eum","molestiae"]'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 13
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 7
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 150
                    name: null
                    email: zmorar@example.com
                    email_verified_at: '2025-03-17T07:13:50.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 150
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: zmorar@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:13:50.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 151
                    name: null
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 151
                      name:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 152
                    name: null
                    email: ratke.dennis@example.com
                    email_verified_at: '2025-03-17T07:13:50.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 152
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: ratke.dennis@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:13:50.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: zp
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: osinski.emerson@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 3
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
