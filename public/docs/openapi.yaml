openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:16'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: nihil
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 9
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: pariatur
                  nullable: false
                phoneNumber:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 11
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: itaque
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: veniam
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: iure
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: aut
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: quam
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 178
                      name: null
                      email: myrtis.kautzer@example.org
                      email_verified_at: '2025-03-17T10:26:16.000000Z'
                      created_at: '2025-03-17T10:26:16.000000Z'
                      updated_at: '2025-03-17T10:26:16.000000Z'
                      avatar: null
                      personal_info: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 179
                      name: null
                      email: jacey59@example.com
                      email_verified_at: '2025-03-17T10:26:16.000000Z'
                      created_at: '2025-03-17T10:26:16.000000Z'
                      updated_at: '2025-03-17T10:26:16.000000Z'
                      avatar: null
                      personal_info: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: dolore
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 4
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 63
                    name: 'Ewald Frami'
                    desc: 'Quas architecto hic totam reprehenderit voluptas. Tempora consequuntur consectetur et et voluptas doloremque. Sed sed possimus at illo dolorem.'
                    price: '0'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 63
                      name:
                        type: string
                        example: 'Ewald Frami'
                      desc:
                        type: string
                        example: 'Quas architecto hic totam reprehenderit voluptas. Tempora consequuntur consectetur et et voluptas doloremque. Sed sed possimus at illo dolorem.'
                      price:
                        type: string
                        example: '0'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: okv
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zhyvzal
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 7154511.2773968
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 64
                    name: 'Dr. Julius Gusikowski'
                    desc: 'Blanditiis magni eum similique. Dolores facere quisquam possimus fugit qui consequatur ut.'
                    price: '62'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 64
                      name:
                        type: string
                        example: 'Dr. Julius Gusikowski'
                      desc:
                        type: string
                        example: 'Blanditiis magni eum similique. Dolores facere quisquam possimus fugit qui consequatur ut.'
                      price:
                        type: string
                        example: '62'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: u
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: aegs
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 3941.73458965
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 12
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 65
                    name: 'Peggie Jerde II'
                    desc: 'Est cupiditate delectus et alias error. Tenetur hic corporis iusto laborum. Natus culpa at odit ut est et. Ipsam est quo natus quo. Quis qui quis eius autem dolorem nihil magnam.'
                    price: '8.190182e+08'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 65
                      name:
                        type: string
                        example: 'Peggie Jerde II'
                      desc:
                        type: string
                        example: 'Est cupiditate delectus et alias error. Tenetur hic corporis iusto laborum. Natus culpa at odit ut est et. Ipsam est quo natus quo. Quis qui quis eius autem dolorem nihil magnam.'
                      price:
                        type: string
                        example: '8.190182e+08'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 12
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 18|LvUSjxnRChQJhVJm7S9AhT0jNWsgwfjuPBUnUkWl56994618
                  token_type: Bearer
                  user:
                    id: 168
                    name: null
                    email: carli.green@example.net
                    email_verified_at: '2025-03-17T10:26:12.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 18|LvUSjxnRChQJhVJm7S9AhT0jNWsgwfjuPBUnUkWl56994618
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 168
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: carli.green@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T10:26:12.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters.'
                  example: zgerhold@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: "Ogqi;Zi/x<c'TuMQ+}"
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 19|I7ySSCVyKnslEUsA2yFCHBgHChQY6WpREwSXXO047c35eda4
                  token_type: Bearer
                  user:
                    id: 169
                    name: null
                    email: filomena96@example.net
                    email_verified_at: '2025-03-17T10:26:13.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 19|I7ySSCVyKnslEUsA2yFCHBgHChQY6WpREwSXXO047c35eda4
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 169
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: filomena96@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T10:26:13.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: dghdgrhennlnfsosq
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: tlabadie@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'eCZulM;^pO-,z3zG[E'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: mollitia
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: ygnrdtevfkqp
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: vhvvpdr
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 20|LkOS9z5W5MEPiAKlQDMiPj9k0SswhZV4h8wwIet1a19dd0a6
                  token_type: Bearer
                  user:
                    id: 171
                    name: null
                    email: aufderhar.malcolm@example.net
                    email_verified_at: '2025-03-17T10:26:13.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 20|LkOS9z5W5MEPiAKlQDMiPj9k0SswhZV4h8wwIet1a19dd0a6
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 171
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: aufderhar.malcolm@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T10:26:13.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 4 characters.'
                  example: cc
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: hojcyukcnam
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: hic
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: iusto
                  nullable: false
              required:
                - key
                - phone
      security: []
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 58
                      name: 'Fiona Franecki'
                      full_name: null
                      coach: null
                      city: Angelicaville
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 59
                      name: 'Floyd Kohler'
                      full_name: null
                      coach: null
                      city: Hillsshire
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: minima
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: vitae
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: illum
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 61
                    name: 'Joesph Runolfsdottir'
                    full_name: null
                    coach: null
                    city: 'Lake Hiltonburgh'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 61
                      name:
                        type: string
                        example: 'Joesph Runolfsdottir'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'Lake Hiltonburgh'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fvgupeyasbvmmkikjekqw
                  nullable: false
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: exgjrqzxilkhs
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: x
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 14
                  nullable: false
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fo
                  nullable: false
              required:
                - name
                - locationId
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 60
                    name: 'Raven Ortiz'
                    full_name: null
                    coach: null
                    city: Sadyemouth
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 60
                      name:
                        type: string
                        example: 'Raven Ortiz'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Sadyemouth
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: sequi
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 62
                    name: 'Ms. Amber Howe PhD'
                    full_name: null
                    coach: null
                    city: 'New Sigmund'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 62
                      name:
                        type: string
                        example: 'Ms. Amber Howe PhD'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'New Sigmund'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wcbvnguu
                  nullable: true
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rudilltqurdqx
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nzcsebz
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zytcigjeagmpqix
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 4
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 25
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: afn
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dtybym
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: assumenda
        required: true
        schema:
          type: string
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: av
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: yytwqstko
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
              required:
                - name
                - year
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 187
                    name: file_67d7f8c7b29d1
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 187
                      name:
                        type: string
                        example: file_67d7f8c7b29d1
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: licenses
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://www.cremin.com/ullam-vel-quas-soluta.html'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: delectus
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: at
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 188
                      name: file_67d7f8c7be866
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 189
                      name: file_67d7f8c7c47a2
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 190
                    name: file_67d7f8c7d529d
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 190
                      name:
                        type: string
                        example: file_67d7f8c7d529d
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 191
                    name: file_67d7f8c7e3c9e
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 191
                      name:
                        type: string
                        example: file_67d7f8c7e3c9e
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 114
                    status: false
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 114
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 12
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:14'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 115
                  status: false
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 115
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 37
                      name: 'America Feest'
                      description: 'Mollitia quae minima doloribus ipsum eius architecto. Rerum atque enim et debitis et aut dolorum. Voluptate expedita occaecati perferendis.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 38
                      name: 'Prof. Felicita Monahan'
                      description: 'Eligendi deleniti porro eaque non. Doloribus nemo dolore dolores nulla voluptate. Placeat rerum ea amet commodi magni voluptates nesciunt.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 23
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 40
                    name: 'Mariana Shields'
                    description: 'Aut nisi est ea est. Ea harum incidunt corrupti. Laudantium corporis autem et facilis rem velit voluptatem.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 40
                      name:
                        type: string
                        example: 'Mariana Shields'
                      description:
                        type: string
                        example: 'Aut nisi est ea est. Ea harum incidunt corrupti. Laudantium corporis autem et facilis rem velit voluptatem.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: egbefpqldeguxbji
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Sit in quaerat saepe dignissimos fugit.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 39
                    name: 'Asa Kautzer'
                    description: 'Eum nobis voluptatem unde quam et error. Exercitationem aperiam ea laudantium delectus. Necessitatibus veniam consequatur rem minima ducimus perferendis molestias.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 39
                      name:
                        type: string
                        example: 'Asa Kautzer'
                      description:
                        type: string
                        example: 'Eum nobis voluptatem unde quam et error. Exercitationem aperiam ea laudantium delectus. Necessitatibus veniam consequatur rem minima ducimus perferendis molestias.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 18
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 41
                    name: 'Aliya Reynolds V'
                    description: 'Doloribus ab recusandae architecto. Cum voluptatum nostrum possimus est. Error dolorem ipsam earum.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 41
                      name:
                        type: string
                        example: 'Aliya Reynolds V'
                      description:
                        type: string
                        example: 'Doloribus ab recusandae architecto. Cum voluptatum nostrum possimus est. Error dolorem ipsam earum.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bsc
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Voluptatum inventore eveniet quia optio iusto nihil tempore qui.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 14
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: '1994-07-07'
                    city: Akeemberg
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: 480.336.7403
                    start_number: '447'
                    group: 'Office Clerk'
                    rank_number: '99999'
                    rank: Boilermaker
                    community: 'Towne, Jones and Dickens'
                    coach: 'Ollie Runolfsdottir I'
                    moto_stamp: Mr.
                    engine: Mr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '1994-07-07'
                      city:
                        type: string
                        example: Akeemberg
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 480.336.7403
                      start_number:
                        type: string
                        example: '447'
                      group:
                        type: string
                        example: 'Office Clerk'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Boilermaker
                      community:
                        type: string
                        example: 'Towne, Jones and Dickens'
                      coach:
                        type: string
                        example: 'Ollie Runolfsdottir I'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Mr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:15'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 23
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: vero
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: vero
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: vitae
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 3
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Mrs.
                    surname: Mr.
                    patronymic: Ms.
                    date_of_birth: '2023-04-06'
                    city: Carlishire
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: '+14028856015'
                    start_number: '351'
                    group: Announcer
                    rank_number: '99999'
                    rank: 'Numerical Tool Programmer OR Process Control Programmer'
                    community: 'Welch Ltd'
                    coach: 'Ezekiel Bode V'
                    moto_stamp: Prof.
                    engine: Mrs.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '2023-04-06'
                      city:
                        type: string
                        example: Carlishire
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '+14028856015'
                      start_number:
                        type: string
                        example: '351'
                      group:
                        type: string
                        example: Announcer
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Numerical Tool Programmer OR Process Control Programmer'
                      community:
                        type: string
                        example: 'Welch Ltd'
                      coach:
                        type: string
                        example: 'Ezekiel Bode V'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Mrs.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: impedit
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: numquam
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: minus
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:15'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: repellat
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: repellat
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: maxime
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: suscipit
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: quam
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: impedit
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 3
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 3
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 55
                      name: 'Wilhelmine Lind'
                      desc: 'Et expedita veritatis quos eum nobis eum nostrum. Qui fugit ex in illum est voluptatibus. Cum error atque magnam fugit neque maxime.'
                      is_work: true
                      date_start: '2025-03-17T08:36:30.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 56
                      name: 'Dr. Buddy Fisher'
                      desc: 'Omnis harum reiciendis odio eligendi beatae. Porro necessitatibus consequuntur inventore ducimus. Aut quasi voluptates non eligendi.'
                      is_work: false
                      date_start: '2025-03-17T03:33:23.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 17
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 15
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:14'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:14'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 10
                  items:
                    type: integer
                    nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 58
                    name: 'Weston Terry'
                    desc: 'Ea aut mollitia ut quisquam in cupiditate. Ab quidem omnis aut distinctio qui praesentium architecto. Voluptatem fugit expedita vitae accusantium id asperiores dolorem. Ducimus fugit velit quis in.'
                    is_work: false
                    date_start: '2025-03-17T11:57:38.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 58
                      name:
                        type: string
                        example: 'Weston Terry'
                      desc:
                        type: string
                        example: 'Ea aut mollitia ut quisquam in cupiditate. Ab quidem omnis aut distinctio qui praesentium architecto. Voluptatem fugit expedita vitae accusantium id asperiores dolorem. Ducimus fugit velit quis in.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T11:57:38.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: urctkivloohiekuh
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: veniam
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:14'
                  nullable: false
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:14'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 6
                  nullable: true
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 4
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 12
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 57
                    name: 'Isabell Doyle'
                    desc: 'Tempora quia autem similique consequatur. Qui architecto vel officiis voluptate officia. Quia commodi ad voluptas nisi totam nulla.'
                    is_work: false
                    date_start: '2025-03-17T13:52:26.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 57
                      name:
                        type: string
                        example: 'Isabell Doyle'
                      desc:
                        type: string
                        example: 'Tempora quia autem similique consequatur. Qui architecto vel officiis voluptate officia. Quia commodi ad voluptas nisi totam nulla.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T13:52:26.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 6
                  items:
                    type: integer
                    nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 59
                    name: 'Brody Volkman'
                    desc: 'Illum numquam eveniet sunt minus libero esse blanditiis. A et in eaque ut. Accusantium aut facere facilis eius ex nostrum.'
                    is_work: true
                    date_start: '2025-03-17T03:44:54.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 59
                      name:
                        type: string
                        example: 'Brody Volkman'
                      desc:
                        type: string
                        example: 'Illum numquam eveniet sunt minus libero esse blanditiis. A et in eaque ut. Accusantium aut facere facilis eius ex nostrum.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-17T03:44:54.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: ssvrnfgeiyrajkhmvrfczyskpgriqkkkstzonamtrqlnnnbcomlakiw
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:15'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T10:26:15'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 11
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - consequuntur
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 4
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 10
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 4
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 60
                    name: 'Mrs. Lillian Gerlach DVM'
                    desc: 'Et ut corrupti architecto et est. Omnis consequatur provident reiciendis non dolores qui. Suscipit qui voluptatibus aut mollitia at explicabo et.'
                    is_work: true
                    date_start: '2025-03-17T23:44:00.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 60
                      name:
                        type: string
                        example: 'Mrs. Lillian Gerlach DVM'
                      desc:
                        type: string
                        example: 'Et ut corrupti architecto et est. Omnis consequatur provident reiciendis non dolores qui. Suscipit qui voluptatibus aut mollitia at explicabo et.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-17T23:44:00.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_allowed
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_allowed
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 13
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: legros.trever@example.com
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.hegmann.net/repellendus-incidunt-similique-sed-repudiandae.html'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 9gp!WY
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: quae
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 177
                    name: null
                    email: david61@example.org
                    email_verified_at: '2025-03-17T10:26:14.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 177
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: david61@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-17T10:26:14.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 19
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      name: null
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      name: null
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 17
                    login: 'Excepturi id dolorum ex et adipisci in. Aut officia blanditiis iste aliquam minus. Eligendi velit quisquam voluptas officiis tempora commodi quia. Quisquam aut et aliquid laborum non ex inventore.'
                    password_1: '@n~iY8Jn'
                    password_2: nEB\AFiZ
                    token: 'Magnam et quia distinctio quas quia adipisci dolores dolorum. Et magnam dolores quidem. Qui molestiae iusto temporibus iusto.'
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 17
                      login:
                        type: string
                        example: 'Excepturi id dolorum ex et adipisci in. Aut officia blanditiis iste aliquam minus. Eligendi velit quisquam voluptas officiis tempora commodi quia. Quisquam aut et aliquid laborum non ex inventore.'
                      password_1:
                        type: string
                        example: '@n~iY8Jn'
                      password_2:
                        type: string
                        example: nEB\AFiZ
                      token:
                        type: string
                        example: 'Magnam et quia distinctio quas quia adipisci dolores dolorum. Et magnam dolores quidem. Qui molestiae iusto temporibus iusto.'
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ckjnmktbywxxlseeukdru
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vminao
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xogckcbkz
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: yvphalmjixniqgwpeiqx
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 50
                      name: 'Hoist and Winch Operator'
                      address: "3879 Lester Bypass Suite 921\nNew Rexfurt, HI 18216-8615"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Numquam ipsum beatae incidunt rerum et unde voluptate et. Non voluptatum quasi voluptatibus voluptatem animi aut praesentium. Nulla dolores voluptatum quo et non voluptas. Ipsa sit id non mollitia. Alias et aut dicta inventore illum neque ipsum. Nam deleniti vitae incidunt facere enim veritatis eligendi et. Corporis adipisci sit et voluptas. Quia et eaque aliquam. Quis impedit et cum nihil ipsum qui. Rem quo et esse aliquam.'
                      length: 312
                      turns: 4
                      free: false
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 58
                        name: Самарская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 51
                      name: 'Plastic Molding Machine Operator'
                      address: "3694 Jonathon Springs\nWest Melba, DE 98473"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Consequatur eos quasi ipsam expedita perspiciatis eius rerum. Sed enim ut architecto velit molestias sunt. Eaque sit debitis modi soluta aut beatae vitae. Aperiam in maiores impedit tempora eaque labore qui. Rerum reprehenderit laudantium dolorem numquam vel dignissimos. Voluptatem minima accusamus maiores rerum ut et. Ullam et sit alias perferendis vero ea. Quam enim autem aliquam alias a. Est ut voluptatibus porro doloremque mollitia et qui.'
                      length: 935
                      turns: 69
                      free: false
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 67
                        name: Тамбовская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: impedit
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 16
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 3
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 53
                    name: 'Pharmaceutical Sales Representative'
                    address: "446 Luna Plaza Suite 624\nGabrielleville, KY 28269"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Et ut corporis praesentium non nisi sit. Aliquid eum reiciendis pariatur omnis. Fuga magnam praesentium ipsam quam deserunt ipsa. Sunt quaerat rerum vitae nisi sunt. Incidunt omnis sed suscipit consectetur id. Vel ducimus voluptates ut provident ipsam atque est. Enim perferendis debitis nesciunt voluptatibus. Impedit itaque odio id inventore. Odit laborum voluptatibus dolorem ut modi.'
                    length: 100
                    turns: 32
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 79
                      name: Челябинская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 53
                      name:
                        type: string
                        example: 'Pharmaceutical Sales Representative'
                      address:
                        type: string
                        example: "446 Luna Plaza Suite 624\nGabrielleville, KY 28269"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Et ut corporis praesentium non nisi sit. Aliquid eum reiciendis pariatur omnis. Fuga magnam praesentium ipsam quam deserunt ipsa. Sunt quaerat rerum vitae nisi sunt. Incidunt omnis sed suscipit consectetur id. Vel ducimus voluptates ut provident ipsam atque est. Enim perferendis debitis nesciunt voluptatibus. Impedit itaque odio id inventore. Odit laborum voluptatibus dolorem ut modi.'
                      length:
                        type: integer
                        example: 100
                      turns:
                        type: integer
                        example: 32
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 79
                          name:
                            type: string
                            example: Челябинская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: ronxccirhvzjqqjgfmhlqmkxjpitjrffkyjtyyhzvbkpudjqffzmlmhsvscrndnckeoxwpzl
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 18
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 11
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 52
                    name: Pediatricians
                    address: "630 Block Coves\nNew Elyse, NY 22391-8563"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Vitae quasi sed libero et cumque quaerat quae. Ut doloribus suscipit qui perspiciatis. Corrupti nobis cum voluptas debitis. Nihil eaque atque eos laudantium qui voluptates illum fuga. Hic porro quis aut aut doloribus. Expedita optio aut deleniti aut impedit excepturi. Occaecati qui officia reiciendis quo amet ut consequuntur. Corporis explicabo voluptatem odit quasi. Tempore officiis ducimus qui odit nisi autem.'
                    length: 951
                    turns: 64
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 5
                      name: Архангельская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 52
                      name:
                        type: string
                        example: Pediatricians
                      address:
                        type: string
                        example: "630 Block Coves\nNew Elyse, NY 22391-8563"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Vitae quasi sed libero et cumque quaerat quae. Ut doloribus suscipit qui perspiciatis. Corrupti nobis cum voluptas debitis. Nihil eaque atque eos laudantium qui voluptates illum fuga. Hic porro quis aut aut doloribus. Expedita optio aut deleniti aut impedit excepturi. Occaecati qui officia reiciendis quo amet ut consequuntur. Corporis explicabo voluptatem odit quasi. Tempore officiis ducimus qui odit nisi autem.'
                      length:
                        type: integer
                        example: 951
                      turns:
                        type: integer
                        example: 64
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 5
                          name:
                            type: string
                            example: Архангельская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 54
                    name: 'Emergency Medical Technician and Paramedic'
                    address: "29457 Sydnie Mount Suite 472\nMargiefort, HI 60682"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Cum nihil qui quisquam molestiae. Neque delectus temporibus illum consequuntur assumenda aspernatur. Veniam voluptates dolores qui enim omnis est. Veritatis quod in asperiores eveniet minima enim consequatur adipisci. Fuga impedit voluptatum officiis qui. Natus libero ut voluptatem et nesciunt est. Dolor autem nesciunt rerum et quasi ullam ab et. Ipsum itaque repudiandae voluptas veniam. Quo cumque voluptatibus sunt. Nihil voluptas quos nam nulla ut omnis et. Et suscipit veniam voluptas sed.'
                    length: 971
                    turns: 5
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 21
                      name: Кабардино-Балкарская
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 54
                      name:
                        type: string
                        example: 'Emergency Medical Technician and Paramedic'
                      address:
                        type: string
                        example: "29457 Sydnie Mount Suite 472\nMargiefort, HI 60682"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Cum nihil qui quisquam molestiae. Neque delectus temporibus illum consequuntur assumenda aspernatur. Veniam voluptates dolores qui enim omnis est. Veritatis quod in asperiores eveniet minima enim consequatur adipisci. Fuga impedit voluptatum officiis qui. Natus libero ut voluptatem et nesciunt est. Dolor autem nesciunt rerum et quasi ullam ab et. Ipsum itaque repudiandae voluptas veniam. Quo cumque voluptatibus sunt. Nihil voluptas quos nam nulla ut omnis et. Et suscipit veniam voluptas sed.'
                      length:
                        type: integer
                        example: 971
                      turns:
                        type: integer
                        example: 5
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 21
                          name:
                            type: string
                            example: Кабардино-Балкарская
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: rffhazkjytlqidfhulzligcjijurnwtubbngcuojfamtfhrydmbswuqwekfmi
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - eos
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 19
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 11
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 7
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 172
                    name: null
                    email: william97@example.com
                    email_verified_at: '2025-03-17T10:26:13.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 172
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: william97@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-17T10:26:13.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 173
                    name: null
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 173
                      name:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 174
                    name: null
                    email: tremblay.emie@example.org
                    email_verified_at: '2025-03-17T10:26:13.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 174
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: tremblay.emie@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-17T10:26:13.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: htyfaoazhbnezvhyoekxlkr
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: leilani56@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: kdbrrijjx
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 175
                      name: null
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 176
                      name: null
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: deserunt
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 17
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 25
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
