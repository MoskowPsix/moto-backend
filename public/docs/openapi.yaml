openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 18
                      name: 'Воробьёва Ева Ивановна'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 19
                      name: 'Константин Александрович Карпов'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 12
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 2|1qAiFhMdNmnblL32E2fRIMs5P4d9uEHczE6tWS1G83a58bf1
                  token_type: Bearer
                  user:
                    id: 12
                    name: 'Попов Антонин Львович'
                    email: bogdanova.valerii@example.com
                    email_verified_at: '2025-01-30T10:44:16.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 2|1qAiFhMdNmnblL32E2fRIMs5P4d9uEHczE6tWS1G83a58bf1
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12
                      name:
                        type: string
                        example: 'Попов Антонин Львович'
                      email:
                        type: string
                        example: bogdanova.valerii@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:44:16.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: lexie.raynor@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: hO`O5lYz%nk/S%=V
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 3|FTSFij2Wz4FFG8G7hZ4D1b8Zb5G9AGLzXODdtkhDaeb10457
                  token_type: Bearer
                  user:
                    id: 13
                    name: 'Нина Сергеевна Савина'
                    email: ovcinnikov.tamara@example.com
                    email_verified_at: '2025-01-30T10:44:16.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 3|FTSFij2Wz4FFG8G7hZ4D1b8Zb5G9AGLzXODdtkhDaeb10457
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: 'Нина Сергеевна Савина'
                      email:
                        type: string
                        example: ovcinnikov.tamara@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:44:16.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: rcqwvnfugeykibzyq
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: hhomenick@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'H9:/.5e@=XB2kT'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: voluptates
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: enim
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: quasi
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 3
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Prof.
                    surname: Mr.
                    patronymic: Dr.
                    date_of_birth: '1994-07-14'
                    city: Ступино
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: 8-800-858-3755
                    start_number: '885'
                    group: Критик
                    rank_number: '100000'
                    rank: Егерь
                    community: 'ООО Компания ХозСофтЛен'
                    coach: 'Нелли Владимировна Савельева'
                    moto_stamp: Dr.
                    engine: Prof.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '1994-07-14'
                      city:
                        type: string
                        example: Ступино
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 8-800-858-3755
                      start_number:
                        type: string
                        example: '885'
                      group:
                        type: string
                        example: Критик
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Егерь
                      community:
                        type: string
                        example: 'ООО Компания ХозСофтЛен'
                      coach:
                        type: string
                        example: 'Нелли Владимировна Савельева'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Prof.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T10:44:17'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: minima
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: nemo
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: repellat
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Ms.
                    date_of_birth: '1987-04-10'
                    city: Домодедово
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: '(495) 440-9592'
                    start_number: '319'
                    group: Архивист
                    rank_number: '100000'
                    rank: Лингвист
                    community: 'ПАО Дизайн'
                    coach: 'Родион Борисович Моисеев'
                    moto_stamp: Ms.
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '1987-04-10'
                      city:
                        type: string
                        example: Домодедово
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(495) 440-9592'
                      start_number:
                        type: string
                        example: '319'
                      group:
                        type: string
                        example: Архивист
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Лингвист
                      community:
                        type: string
                        example: 'ПАО Дизайн'
                      coach:
                        type: string
                        example: 'Родион Борисович Моисеев'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Mr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T10:44:17'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: veniam
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: tenetur
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: et
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 11
                      name: 'Виктория Андреевна Лаврентьева'
                      desc: 'Cum qui et voluptatibus. Voluptatibus non molestias tempore voluptas. Voluptatem explicabo possimus est ullam nemo odit dolorum.'
                      is_work: true
                      date_start: '2025-01-30T10:44:16.000000Z'
                      images: null
                      contacts: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 12
                      name: 'Люся Александровна Васильева'
                      desc: 'Ex qui tempora nemo velit. Illo adipisci nobis praesentium placeat dolores quas cupiditate molestiae. Quia quo qui accusamus deserunt hic ratione.'
                      is_work: false
                      date_start: '2025-01-30T10:44:16.000000Z'
                      images: null
                      contacts: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 21
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 14
                    name: 'Доронина Ярослава Романовна'
                    desc: 'Sint dolores soluta suscipit sint odit saepe. Sint illum ut sed et voluptatem voluptatem qui. Voluptatem excepturi odio dolores. Error et voluptatem qui quia qui aliquid culpa.'
                    is_work: true
                    date_start: '2025-01-30T10:44:17.000000Z'
                    images: null
                    contacts: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: 'Доронина Ярослава Романовна'
                      desc:
                        type: string
                        example: 'Sint dolores soluta suscipit sint odit saepe. Sint illum ut sed et voluptatem voluptatem qui. Voluptatem excepturi odio dolores. Error et voluptatem qui quia qui aliquid culpa.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-30T10:44:17.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: raboxzuxbqyenieanmvmyc
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T10:44:17'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 8
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 13
                    name: 'Аполлон Иванович Громов'
                    desc: 'Suscipit voluptas facere deserunt odio. Veniam odio rerum necessitatibus amet molestiae totam. Quod magni porro architecto laudantium assumenda. Maxime eos occaecati eveniet quidem.'
                    is_work: false
                    date_start: '2025-01-30T10:44:17.000000Z'
                    images: null
                    contacts: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: 'Аполлон Иванович Громов'
                      desc:
                        type: string
                        example: 'Suscipit voluptas facere deserunt odio. Veniam odio rerum necessitatibus amet molestiae totam. Quod magni porro architecto laudantium assumenda. Maxime eos occaecati eveniet quidem.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-01-30T10:44:17.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 17
                    name: 'Роман Львович Гуляев'
                    email: vil.kondratev@example.net
                    email_verified_at: '2025-01-30T10:44:16.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 17
                      name:
                        type: string
                        example: 'Роман Львович Гуляев'
                      email:
                        type: string
                        example: vil.kondratev@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:44:16.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 7
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 11
                      name: Архивист
                      address: '055339, Воронежская область, город Клин, пер. Космонавтов, 15'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'A reiciendis commodi quos fugit odit beatae earum sint. Earum minima sunt ducimus unde eveniet qui. Et voluptas explicabo sed sint. Ipsam quis et velit voluptatum atque voluptas. Ratione nostrum facere quibusdam ad vel. Omnis minus eum perferendis nihil. Quae quisquam aspernatur voluptas porro et quis. Cupiditate ut qui et aut harum distinctio ducimus. Modi earum excepturi voluptatem. Ut culpa sit aut earum odit. Fuga non eos dicta debitis. Assumenda optio possimus voluptas earum.'
                      length: 21
                      turns: 68
                      free: false
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 12
                      name: Интеллектуал
                      address: '909556, Кировская область, город Домодедово, пл. Гагарина, 12'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Voluptatibus architecto optio commodi aliquid quis vitae. Ut cumque sit sed voluptas inventore. Aut suscipit sunt temporibus iure autem. Natus dolore autem asperiores. Eius fugiat consequatur alias quia. Ab quis iusto dolor voluptatem ut autem voluptatibus. Velit laboriosam nihil repudiandae eum veritatis sequi. Quos fugiat fugiat omnis harum nostrum. Molestiae ea qui eius eos.'
                      length: 228
                      turns: 49
                      free: false
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 3
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 14
                    name: Администратор
                    address: '402088, Курганская область, город Клин, наб. Косиора, 25'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Maiores inventore nostrum exercitationem reiciendis dolorem consequatur. Non quia nisi molestias. Aut inventore soluta dolor ab. Distinctio fugiat qui veritatis necessitatibus voluptatum. Eum pariatur omnis ducimus aut voluptate. Adipisci vero sequi corrupti. Molestiae ad facere aliquam provident rerum id reprehenderit omnis.'
                    length: 844
                    turns: 20
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: Администратор
                      address:
                        type: string
                        example: '402088, Курганская область, город Клин, наб. Косиора, 25'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Maiores inventore nostrum exercitationem reiciendis dolorem consequatur. Non quia nisi molestias. Aut inventore soluta dolor ab. Distinctio fugiat qui veritatis necessitatibus voluptatum. Eum pariatur omnis ducimus aut voluptate. Adipisci vero sequi corrupti. Molestiae ad facere aliquam provident rerum id reprehenderit omnis.'
                      length:
                        type: integer
                        example: 844
                      turns:
                        type: integer
                        example: 20
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: rkzhjwtyoifajuuitntyfqknsordchoalwfexxchgxlufjxntgam
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 8
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: porro
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["et","nisi"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["quidem","corrupti"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 13
                    name: Радист
                    address: '959813, Сахалинская область, город Чехов, пл. Космонавтов, 24'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Sapiente temporibus provident aliquid voluptatibus aperiam. Quo sit laborum saepe corporis eius. Reiciendis illum esse rerum molestias veniam eos. Fugiat nemo dolores aut eos qui ea. Quibusdam iure aut vitae voluptatum. Velit voluptates exercitationem perferendis et quos cum et. Officia voluptas ad laudantium necessitatibus et. Odio optio consequatur voluptate ratione omnis. Omnis sed magnam dicta amet itaque temporibus tempora. Enim consequatur aperiam necessitatibus.'
                    length: 973
                    turns: 33
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: Радист
                      address:
                        type: string
                        example: '959813, Сахалинская область, город Чехов, пл. Космонавтов, 24'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Sapiente temporibus provident aliquid voluptatibus aperiam. Quo sit laborum saepe corporis eius. Reiciendis illum esse rerum molestias veniam eos. Fugiat nemo dolores aut eos qui ea. Quibusdam iure aut vitae voluptatum. Velit voluptates exercitationem perferendis et quos cum et. Officia voluptas ad laudantium necessitatibus et. Odio optio consequatur voluptate ratione omnis. Omnis sed magnam dicta amet itaque temporibus tempora. Enim consequatur aperiam necessitatibus.'
                      length:
                        type: integer
                        example: 973
                      turns:
                        type: integer
                        example: 33
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 15
                    name: 'Лидия Евгеньевна Михеева'
                    email: diana.dmitriev@example.org
                    email_verified_at: '2025-01-30T10:44:16.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Лидия Евгеньевна Михеева'
                      email:
                        type: string
                        example: diana.dmitriev@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:44:16.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 16
                    name: 'Матвей Максимович Гаврилов'
                    email: vladimir65@example.com
                    email_verified_at: '2025-01-30T10:44:16.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Матвей Максимович Гаврилов'
                      email:
                        type: string
                        example: vladimir65@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:44:16.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: srz
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: lavon21@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
