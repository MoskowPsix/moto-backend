openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: messages.appointment_race.create.success
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: messages.appointment_race.create.success
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: messages.appointment_race.delete.success
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: messages.appointment_race.delete.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 24|2bsTvGrZbZgtgcuDReDklNHe1Q0IGRWB4nq7HCyU7e92f6bf
                  token_type: Bearer
                  user:
                    id: 44
                    name: 'Станислав Сергеевич Богданов'
                    email: semen69@example.org
                    email_verified_at: '2025-01-23T13:29:21.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 24|2bsTvGrZbZgtgcuDReDklNHe1Q0IGRWB4nq7HCyU7e92f6bf
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 44
                      name:
                        type: string
                        example: 'Станислав Сергеевич Богданов'
                      email:
                        type: string
                        example: semen69@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-23T13:29:21.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: nienow.juanita@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'mNWu\"q[/Q,@2'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 25|1jEgQToz4svadMBQtbmDTE9kFzID9KFWSBt23Sh894192928
                  token_type: Bearer
                  user:
                    id: 45
                    name: 'Медведев Никодим Фёдорович'
                    email: rmikeev@example.net
                    email_verified_at: '2025-01-23T13:29:21.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 25|1jEgQToz4svadMBQtbmDTE9kFzID9KFWSBt23Sh894192928
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 45
                      name:
                        type: string
                        example: 'Медведев Никодим Фёдорович'
                      email:
                        type: string
                        example: rmikeev@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-23T13:29:21.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: idijleekxd
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: pfannerstill.eliza@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '@58;pa~p2`[@Ch'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: dicta
                  nullable: false
                avatar:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: quidem
                  nullable: false
                data:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["officiis","omnis"]'
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.permission
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.permission
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: file_678f974ca37ac
                  type: фото
                  path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                  data: '{"kkk": "ssss"}'
                  user_id: 13
                  created_at: '2025-01-21T12:47:08.000000Z'
                  updated_at: '2025-01-21T12:47:08.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: file_678f974ca37ac
                  type:
                    type: string
                    example: фото
                  path:
                    type: string
                    example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                  data:
                    type: string
                    example: '{"kkk": "ssss"}'
                  user_id:
                    type: integer
                    example: 13
                  created_at:
                    type: string
                    example: '2025-01-21T12:47:08.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-21T12:47:08.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.permission
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.permission
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["iusto","voluptates"]'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Dr.
                    surname: Dr.
                    patronymic: Prof.
                    date_of_birth: null
                    city: Щёлково
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(35222) 36-7279'
                    start_number: '195'
                    group: Продюсер
                    rank_number: '100000'
                    rank: 'Гитарный мастер'
                    community: 'ОАО Тверь'
                    coach: 'Тимофей Фёдорович Самсонов'
                    moto_stamp: Dr.
                    engine: Ms.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Щёлково
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(35222) 36-7279'
                      start_number:
                        type: string
                        example: '195'
                      group:
                        type: string
                        example: Продюсер
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Гитарный мастер'
                      community:
                        type: string
                        example: 'ОАО Тверь'
                      coach:
                        type: string
                        example: 'Тимофей Фёдорович Самсонов'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Ms.
      tags:
        - PersonalInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolorum
                  nullable: false
                surname:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-23T13:29:22'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: vel
                  nullable: false
                inn:
                  type: integer
                  description: ''
                  example: 6
                  nullable: false
                snils:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: ipsam
                  nullable: false
                startNumber:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: nam
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: alias
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                community:
                  type: string
                  description: ''
                  example: eveniet
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
                engine:
                  type: string
                  description: ''
                  example: ad
                  nullable: false
              required:
                - name
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - rankNumber
                - motoStamp
                - engine
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: null
                    city: Можайск
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '(812) 510-36-84'
                    start_number: '784'
                    group: Водолаз
                    rank_number: '100000'
                    rank: Стилист
                    community: 'ПАО АлмазТелеИнфоЛизинг'
                    coach: 'Назар Сергеевич Рябов'
                    moto_stamp: Miss
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Можайск
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(812) 510-36-84'
                      start_number:
                        type: string
                        example: '784'
                      group:
                        type: string
                        example: Водолаз
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Стилист
                      community:
                        type: string
                        example: 'ПАО АлмазТелеИнфоЛизинг'
                      coach:
                        type: string
                        example: 'Назар Сергеевич Рябов'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Mr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.permission
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.permission
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-23T13:29:22'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: numquam
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: commodi
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 35
                      name: 'Назар Алексеевич Евдокимов'
                      desc: 'Quisquam qui qui cupiditate possimus tempore vel sed. Et necessitatibus quos omnis qui asperiores explicabo voluptatem. Tempore ipsum sunt ullam similique iure id.'
                      is_work: false
                      date_start: null
                      images: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 36
                      name: 'Альбина Андреевна Михеева'
                      desc: 'Optio sunt ut soluta quaerat qui et. Doloremque libero alias dolor. Temporibus blanditiis corrupti dignissimos et. Distinctio maxime commodi aliquam neque libero.'
                      is_work: false
                      date_start: null
                      images: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 7
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 38
                    name: 'Дьячков Аким Евгеньевич'
                    desc: 'Maxime nihil eius consectetur. Debitis non nostrum illum quia quia deserunt. Consectetur voluptates voluptatum sit nobis ut.'
                    is_work: true
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 38
                      name:
                        type: string
                        example: 'Дьячков Аким Евгеньевич'
                      desc:
                        type: string
                        example: 'Maxime nihil eius consectetur. Debitis non nostrum illum quia quia deserunt. Consectetur voluptates voluptatum sit nobis ut.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: sbzhmcmbjzzsivmdedmmeddorfr
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-23T13:29:22'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 1
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 37
                    name: 'Валентина Львовна Гордеева'
                    desc: 'Quam iure molestiae ipsa odio eaque minima. Repudiandae excepturi nihil voluptatem omnis occaecati porro in. Molestiae optio et magni rerum. Fugit ex quaerat iste doloribus.'
                    is_work: true
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 37
                      name:
                        type: string
                        example: 'Валентина Львовна Гордеева'
                      desc:
                        type: string
                        example: 'Quam iure molestiae ipsa odio eaque minima. Repudiandae excepturi nihil voluptatem omnis occaecati porro in. Molestiae optio et magni rerum. Fugit ex quaerat iste doloribus.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 48
                    name: 'Адам Борисович Николаев'
                    email: raksenova@example.net
                    email_verified_at: '2025-01-23T13:29:22.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 48
                      name:
                        type: string
                        example: 'Адам Борисович Николаев'
                      email:
                        type: string
                        example: raksenova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-23T13:29:22.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 1
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 35
                      name: Продюсер
                      address: '757839, Самарская область, город Домодедово, наб. 1905 года, 45'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Distinctio aut ea ut deserunt nesciunt nam ipsa. Voluptas omnis non quod reiciendis. Natus et asperiores officia eos. Soluta officiis sed non aut esse ut odio. Et molestiae in vero officia id aut. Delectus temporibus est nihil aut optio qui rem. Inventore voluptas deleniti non qui. Libero aut cupiditate quia. Totam praesentium enim error. Asperiores minus aut alias fugit. Veritatis officiis porro quam ipsum aspernatur ex voluptate. Voluptatem quia asperiores est repudiandae cum.'
                      length: 48
                      turns: 9
                      free: false
                      is_work: false
                      spec: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 36
                      name: Водитель
                      address: '838167, Саратовская область, город Талдом, шоссе Будапештсткая, 25'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Autem impedit enim enim. Doloremque velit qui non velit repellendus. Fugiat ratione sed eos dolor iure. Molestiae sunt odit rerum maiores. Accusamus aperiam molestiae sunt culpa dolores consequatur dolorem. Vitae minus dicta maxime repudiandae numquam et ipsum. Dolorem dolorum ut qui excepturi. Sint omnis minima soluta. Aut repellat qui rem aut. Omnis ipsam aut autem error. Vitae aperiam laborum quia in sint. Distinctio numquam dolorem est ut.'
                      length: 719
                      turns: 46
                      free: true
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 19
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 38
                    name: Сторож
                    address: '377419, Калужская область, город Ногинск, бульвар Гоголя, 34'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Nihil consequuntur quo molestias ipsa velit facilis sed. Soluta qui unde cum nihil amet. Consectetur voluptatem autem ad veritatis. Dolores repellendus optio quos reiciendis veritatis reiciendis. Sint voluptates et consequatur distinctio quo. In maiores quia error. Aut deleniti eum nihil et. Nostrum nobis itaque quis. Quibusdam perspiciatis ea magnam ducimus quos cupiditate voluptatem corporis. Aut mollitia aut quia eligendi officiis consequuntur.'
                    length: 829
                    turns: 43
                    free: true
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 38
                      name:
                        type: string
                        example: Сторож
                      address:
                        type: string
                        example: '377419, Калужская область, город Ногинск, бульвар Гоголя, 34'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Nihil consequuntur quo molestias ipsa velit facilis sed. Soluta qui unde cum nihil amet. Consectetur voluptatem autem ad veritatis. Dolores repellendus optio quos reiciendis veritatis reiciendis. Sint voluptates et consequatur distinctio quo. In maiores quia error. Aut deleniti eum nihil et. Nostrum nobis itaque quis. Quibusdam perspiciatis ea magnam ducimus quos cupiditate voluptatem corporis. Aut mollitia aut quia eligendi officiis consequuntur.'
                      length:
                        type: integer
                        example: 829
                      turns:
                        type: integer
                        example: 43
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: irwimwefwtdlaxdvgxqdeodfiuhuilbnrwgn
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: laborum
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 7
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: exercitationem
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["voluptates","sed"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 37
                    name: Архивист
                    address: '785437, Псковская область, город Балашиха, бульвар Домодедовская, 97'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Expedita hic temporibus molestias. Debitis eum perspiciatis et consequatur necessitatibus nostrum. Reprehenderit doloribus odit officia qui enim mollitia explicabo. At recusandae explicabo dolorem qui error. Non at pariatur veritatis consequuntur est. Mollitia eos blanditiis qui voluptatibus. Sit amet aut natus recusandae molestiae non. Explicabo dignissimos qui libero voluptatem aliquid eius quis.'
                    length: 794
                    turns: 33
                    free: true
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 37
                      name:
                        type: string
                        example: Архивист
                      address:
                        type: string
                        example: '785437, Псковская область, город Балашиха, бульвар Домодедовская, 97'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Expedita hic temporibus molestias. Debitis eum perspiciatis et consequatur necessitatibus nostrum. Reprehenderit doloribus odit officia qui enim mollitia explicabo. At recusandae explicabo dolorem qui error. Non at pariatur veritatis consequuntur est. Mollitia eos blanditiis qui voluptatibus. Sit amet aut natus recusandae molestiae non. Explicabo dignissimos qui libero voluptatem aliquid eius quis.'
                      length:
                        type: integer
                        example: 794
                      turns:
                        type: integer
                        example: 33
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 47
                    name: 'Константин Сергеевич Дементьев'
                    email: osipov.grigorii@example.net
                    email_verified_at: '2025-01-23T13:29:21.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 47
                      name:
                        type: string
                        example: 'Константин Сергеевич Дементьев'
                      email:
                        type: string
                        example: osipov.grigorii@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-23T13:29:21.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
