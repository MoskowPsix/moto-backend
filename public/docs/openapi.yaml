openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: repellat
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:39'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: quis
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: dicta
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 9
                  nullable: false
                snils:
                  type: integer
                  description: ''
                  example: 4
                  nullable: false
                phoneNumber:
                  type: integer
                  description: ''
                  example: 5
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 12
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: expedita
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: natus
                  nullable: false
                coach:
                  type: string
                  description: ''
                  example: earum
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: neque
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: in
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: beatae
                  nullable: false
                numberAndSeria:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - community
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 118
                      name: 'Ricardo Kuvalis'
                      email: shaniya.nienow@example.com
                      email_verified_at: '2025-03-10T11:06:39.000000Z'
                      created_at: '2025-03-10T11:06:39.000000Z'
                      updated_at: '2025-03-10T11:06:39.000000Z'
                      avatar: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 119
                      name: 'Caleb Veum'
                      email: koch.richard@example.net
                      email_verified_at: '2025-03-10T11:06:39.000000Z'
                      created_at: '2025-03-10T11:06:39.000000Z'
                      updated_at: '2025-03-10T11:06:39.000000Z'
                      avatar: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 7
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 24
                    name: 'Vilma Lubowitz'
                    desc: 'Aut est provident dolorum nulla velit voluptatibus praesentium. Dolorem est qui assumenda. Nemo facilis ut alias sit et. Est saepe sit et quidem est non.'
                    price: '16'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 24
                      name:
                        type: string
                        example: 'Vilma Lubowitz'
                      desc:
                        type: string
                        example: 'Aut est provident dolorum nulla velit voluptatibus praesentium. Dolorem est qui assumenda. Nemo facilis ut alias sit et. Est saepe sit et quidem est non.'
                      price:
                        type: string
                        example: '16'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: atuyutssayaah
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tijnvjwfbcgobys
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 6516.9
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 20
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 25
                    name: 'Robin Gibson'
                    desc: 'Accusantium eum aspernatur ratione unde enim sit. Qui et enim placeat cum. Officia fuga amet quia illo temporibus laborum dolorem. Dolore quo tempora sed numquam nam.'
                    price: '7.449748e+06'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 25
                      name:
                        type: string
                        example: 'Robin Gibson'
                      desc:
                        type: string
                        example: 'Accusantium eum aspernatur ratione unde enim sit. Qui et enim placeat cum. Officia fuga amet quia illo temporibus laborum dolorem. Dolore quo tempora sed numquam nam.'
                      price:
                        type: string
                        example: '7.449748e+06'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ptohrivp
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: o
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 5691.2438302
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 9
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 26
                    name: 'Breanna Erdman'
                    desc: 'Eaque iure impedit dignissimos in. Accusantium voluptatem eos optio delectus quis tempore. Sunt voluptas hic molestias quia non. Quidem accusamus debitis ducimus labore.'
                    price: '5.849683e+06'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 26
                      name:
                        type: string
                        example: 'Breanna Erdman'
                      desc:
                        type: string
                        example: 'Eaque iure impedit dignissimos in. Accusantium voluptatem eos optio delectus quis tempore. Sunt voluptas hic molestias quia non. Quidem accusamus debitis ducimus labore.'
                      price:
                        type: string
                        example: '5.849683e+06'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 5
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 4|1SGVxmLH25bAQq8M5IoskkQc2MCagaA0RfpdfZiN7982a6e6
                  token_type: Bearer
                  user:
                    id: 111
                    name: 'Miss Michele Heller'
                    email: bayer.jeffery@example.com
                    email_verified_at: '2025-03-10T11:06:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 4|1SGVxmLH25bAQq8M5IoskkQc2MCagaA0RfpdfZiN7982a6e6
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 111
                      name:
                        type: string
                        example: 'Miss Michele Heller'
                      email:
                        type: string
                        example: bayer.jeffery@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-10T11:06:36.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table. Must be at least 3 characters.'
                  example: mariano60@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: 'B@}(r;&z]'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 5|UnxpQBfNx24BxzX5jgqSdEClbszgwQzoIrXtvlqA194f18c5
                  token_type: Bearer
                  user:
                    id: 112
                    name: 'Amelie Altenwerth Jr.'
                    email: coty85@example.net
                    email_verified_at: '2025-03-10T11:06:37.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 5|UnxpQBfNx24BxzX5jgqSdEClbszgwQzoIrXtvlqA194f18c5
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 112
                      name:
                        type: string
                        example: 'Amelie Altenwerth Jr.'
                      email:
                        type: string
                        example: coty85@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-10T11:06:37.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: nivftrpitzirretcsnok
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: tillman.wyman@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: "c'+UG`*W4I}fz(Ww"
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: corrupti
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 28
                      name: 'Noemie Osinski'
                      fullname: null
                      coach: null
                      city: 'New Polly'
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 29
                      name: 'Porter Wiegand'
                      fullname: null
                      coach: null
                      city: 'South Modestomouth'
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 16
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                fullname:
                  type: string
                  description: ''
                  example: blanditiis
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: earum
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 31
                    name: 'Mr. Marcellus Ondricka'
                    fullname: null
                    coach: null
                    city: Larkinhaven
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 31
                      name:
                        type: string
                        example: 'Mr. Marcellus Ondricka'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Larkinhaven
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cpysmvwzcqlwyz
                  nullable: false
                fullname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bvhhdndwvvxzjzwqripdfq
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mkneykqfjzrhdbheyq
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: false
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xuvspjm
                  nullable: false
              required:
                - name
                - locationId
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 30
                    name: 'Jazmyn Treutel DDS'
                    fullname: null
                    coach: null
                    city: Lanefort
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 30
                      name:
                        type: string
                        example: 'Jazmyn Treutel DDS'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Lanefort
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 6
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                fullname:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
              required:
                - id
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 32
                    name: 'Dr. Emilie Beahan'
                    fullname: null
                    coach: null
                    city: Ciaramouth
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 32
                      name:
                        type: string
                        example: 'Dr. Emilie Beahan'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Ciaramouth
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pyiyhqw
                  nullable: true
                fullname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rwqykbibxw
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pzulxzc
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qjqgnflwnitpapawnctils
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 3
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 157
                    name: file_67cec7bed5cae
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 157
                      name:
                        type: string
                        example: file_67cec7bed5cae
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: notarius
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'https://dare.org/consequuntur-quae-reiciendis-id-nemo-numquam-architecto-delectus.html'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                itWorksDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 158
                      name: file_67cec7bee4181
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 159
                      name: file_67cec7bee9fe4
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 160
                    name: file_67cec7bf0786c
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 160
                      name:
                        type: string
                        example: file_67cec7bf0786c
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 161
                    name: file_67cec7bf1a6cb
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 161
                      name:
                        type: string
                        example: file_67cec7bf1a6cb
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: eligendi
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                itWorksDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:39'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 64
                    status: false
                    desc: 'Транзакция создана'
                    count: 5
                    date: '2025-03-07 09:57:33'
                    user:
                      id: 1
                      name: root
                      email: bolshe.kivi@gmail.com
                      email_verified_at: '2025-02-20T07:28:21.000000Z'
                      avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 64
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: 'Транзакция создана'
                      count:
                        type: integer
                        example: 5
                      date:
                        type: string
                        example: '2025-03-07 09:57:33'
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: root
                          email:
                            type: string
                            example: bolshe.kivi@gmail.com
                          email_verified_at:
                            type: string
                            example: '2025-02-20T07:28:21.000000Z'
                          avatar:
                            type: string
                            example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 8
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 64
                  status: false
                  desc: 'Транзакция создана'
                  count: 5
                  date: '2025-03-07 09:57:33'
                  user:
                    id: 1
                    name: root
                    email: bolshe.kivi@gmail.com
                    email_verified_at: '2025-02-20T07:28:21.000000Z'
                    avatar: null
                properties:
                  id:
                    type: integer
                    example: 64
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: 'Транзакция создана'
                  count:
                    type: integer
                    example: 5
                  date:
                    type: string
                    example: '2025-03-07 09:57:33'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: root
                      email:
                        type: string
                        example: bolshe.kivi@gmail.com
                      email_verified_at:
                        type: string
                        example: '2025-02-20T07:28:21.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Endpoints
      security: []
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 7
                      name: 'Wilburn Mertz'
                      description: 'Quia consequatur iure voluptatem aut. Nisi ut non occaecati qui natus. Officiis vitae molestiae eum quis est ut rerum cumque.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 8
                      name: 'Roselyn Bogisich'
                      description: 'Quasi recusandae quia maiores eveniet aut. Quidem laboriosam ipsa aspernatur ratione laborum qui. Id quos minima fuga. Culpa ipsum culpa minima.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: consectetur
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 22
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 10
                    name: 'Stacey Grant'
                    description: 'Adipisci rem tempore et. Iure consequatur maiores qui dolorem tenetur omnis qui tempora. Aut nobis ut corrupti officiis officia assumenda sed.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 10
                      name:
                        type: string
                        example: 'Stacey Grant'
                      description:
                        type: string
                        example: 'Adipisci rem tempore et. Iure consequatur maiores qui dolorem tenetur omnis qui tempora. Aut nobis ut corrupti officiis officia assumenda sed.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tuh
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Autem voluptate delectus velit distinctio consectetur numquam.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 9
                    name: 'Adrienne Brakus'
                    description: 'Voluptate cum modi odio. Ad voluptatem et labore pariatur aut numquam. Autem temporibus minima eos quos itaque ab dolorem maxime. Est provident qui vitae et. Facilis dolor magni aut ullam quibusdam.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: 'Adrienne Brakus'
                      description:
                        type: string
                        example: 'Voluptate cum modi odio. Ad voluptatem et labore pariatur aut numquam. Autem temporibus minima eos quos itaque ab dolorem maxime. Est provident qui vitae et. Facilis dolor magni aut ullam quibusdam.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 11
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 11
                    name: 'Samara Toy'
                    description: 'Placeat alias expedita doloribus corrupti eaque perspiciatis cum. Libero delectus sint explicabo. Omnis quibusdam accusantium facere qui. Cum molestiae voluptas nostrum et fugit expedita voluptas.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      name:
                        type: string
                        example: 'Samara Toy'
                      description:
                        type: string
                        example: 'Placeat alias expedita doloribus corrupti eaque perspiciatis cum. Libero delectus sint explicabo. Omnis quibusdam accusantium facere qui. Cum molestiae voluptas nostrum et fugit expedita voluptas.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zetxrrifpodyfmiuef
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Nisi ut autem repudiandae reiciendis.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 22
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: et
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Prof.
                    surname: Prof.
                    patronymic: Mrs.
                    date_of_birth: '1980-03-14'
                    city: 'North Christellestad'
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: +1-980-757-6525
                    start_number: '457'
                    group: 'Command Control Center Officer'
                    rank_number: '100000'
                    rank: 'Credit Analyst'
                    community: 'Wisoky, Kirlin and Konopelski'
                    coach: 'Ms. Thelma Casper III'
                    moto_stamp: Dr.
                    engine: Dr.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1980-03-14'
                      city:
                        type: string
                        example: 'North Christellestad'
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: +1-980-757-6525
                      start_number:
                        type: string
                        example: '457'
                      group:
                        type: string
                        example: 'Command Control Center Officer'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Credit Analyst'
                      community:
                        type: string
                        example: 'Wisoky, Kirlin and Konopelski'
                      coach:
                        type: string
                        example: 'Ms. Thelma Casper III'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: amet
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: tenetur
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 19
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: facilis
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: optio
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: deserunt
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quos
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: ex
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Prof.
                    surname: Dr.
                    patronymic: Prof.
                    date_of_birth: '2017-04-15'
                    city: Lambertchester
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '+18069919792'
                    start_number: '916'
                    group: 'Municipal Court Clerk'
                    rank_number: '99999'
                    rank: Postmasters
                    community: 'Heller, Wiegand and Gutkowski'
                    coach: 'Kaitlyn Schroeder'
                    moto_stamp: Dr.
                    engine: Prof.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '2017-04-15'
                      city:
                        type: string
                        example: Lambertchester
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+18069919792'
                      start_number:
                        type: string
                        example: '916'
                      group:
                        type: string
                        example: 'Municipal Court Clerk'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Postmasters
                      community:
                        type: string
                        example: 'Heller, Wiegand and Gutkowski'
                      coach:
                        type: string
                        example: 'Kaitlyn Schroeder'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: dolore
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: animi
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: hic
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 14
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 17
                      name: 'Jacky McKenzie'
                      desc: 'Aut nam sit cupiditate. Maxime commodi dolorem possimus et fugit molestiae. Accusantium earum animi sunt. Saepe aperiam officia exercitationem et atque provident dolor architecto.'
                      is_work: false
                      date_start: '2025-03-10T10:59:19.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 18
                      name: 'Eloy Zemlak'
                      desc: 'Est non fugit recusandae nemo sit maiores a magni. Ipsam odit doloribus quidem illum. Eius fugit ipsa perspiciatis et inventore. Excepturi adipisci et quas soluta et ad commodi.'
                      is_work: false
                      date_start: '2025-03-10T18:54:30.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 13
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 16
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 20
                    name: 'Wilburn Witting'
                    desc: 'Et sit quos voluptatibus suscipit. Dolorem saepe ut voluptatem sit unde ad. Quibusdam sunt rerum et quasi.'
                    is_work: false
                    date_start: '2025-03-10T16:44:37.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
                      name:
                        type: string
                        example: 'Wilburn Witting'
                      desc:
                        type: string
                        example: 'Et sit quos voluptatibus suscipit. Dolorem saepe ut voluptatem sit unde ad. Quibusdam sunt rerum et quasi.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-10T16:44:37.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: hbplzjd
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: false
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 10
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 19
                    name: 'Norval Johnson'
                    desc: 'Nostrum laborum rerum harum. Deserunt harum et sed vero animi voluptatem. Aliquam alias eligendi id sed.'
                    is_work: true
                    date_start: '2025-03-10T05:32:59.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 19
                      name:
                        type: string
                        example: 'Norval Johnson'
                      desc:
                        type: string
                        example: 'Nostrum laborum rerum harum. Deserunt harum et sed vero animi voluptatem. Aliquam alias eligendi id sed.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-10T05:32:59.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 10
                  items:
                    type: integer
                    nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 21
                    name: 'Ms. Lelia Vandervort DDS'
                    desc: 'Dolorem numquam minima nemo eum. Dolores quo amet in aliquam. Rerum labore voluptate possimus atque rem. Nulla quo et voluptas et. Pariatur culpa veritatis tempora veniam sapiente.'
                    is_work: false
                    date_start: '2025-03-10T14:16:06.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 21
                      name:
                        type: string
                        example: 'Ms. Lelia Vandervort DDS'
                      desc:
                        type: string
                        example: 'Dolorem numquam minima nemo eum. Dolores quo amet in aliquam. Rerum labore voluptate possimus atque rem. Nulla quo et voluptas et. Pariatur culpa veritatis tempora veniam sapiente.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-10T14:16:06.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: aakm
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-10T11:06:38'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 11
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - sed
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 13
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 3
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 22
                    name: 'Mr. Wyatt Gleichner'
                    desc: 'Modi quae accusantium aut. Qui et odit sint. Dolorem nihil sapiente quaerat excepturi. Soluta aut deserunt earum nihil est.'
                    is_work: true
                    date_start: '2025-03-10T01:36:12.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 22
                      name:
                        type: string
                        example: 'Mr. Wyatt Gleichner'
                      desc:
                        type: string
                        example: 'Modi quae accusantium aut. Qui et odit sint. Dolorem nihil sapiente quaerat excepturi. Soluta aut deserunt earum nihil est.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-10T01:36:12.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: alfred.nicolas@example.org
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'https://armstrong.info/molestiae-amet-numquam-sed-quaerat-mollitia-reprehenderit-error.html'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'qR|uVKA.qQ6]`J.1WO'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: accusantium
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 117
                    name: 'Mr. Deangelo Dibbert MD'
                    email: wilson09@example.org
                    email_verified_at: '2025-03-10T11:06:38.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 117
                      name:
                        type: string
                        example: 'Mr. Deangelo Dibbert MD'
                      email:
                        type: string
                        example: wilson09@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-10T11:06:38.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 3
                  nullable: false
              required:
                - roleId
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 1
                    login: shakalik
                    password_1: fdsfgwergtwretgwrtgrtg
                    password_2: gregweghgfjyjytkjtjffh
                    token: test
                    user:
                      id: 1
                      name: root
                      email: bolshe.kivi@gmail.com
                      email_verified_at: '2025-02-20T07:28:21.000000Z'
                      avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      login:
                        type: string
                        example: shakalik
                      password_1:
                        type: string
                        example: fdsfgwergtwretgwrtgrtg
                      password_2:
                        type: string
                        example: gregweghgfjyjytkjtjffh
                      token:
                        type: string
                        example: test
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: root
                          email:
                            type: string
                            example: bolshe.kivi@gmail.com
                          email_verified_at:
                            type: string
                            example: '2025-02-20T07:28:21.000000Z'
                          avatar:
                            type: string
                            example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qrfk
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pbjhxgxbu
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qghmughisqcmbnmfwaeb
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ldroefgbuhx
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 20
                      name: Silversmith
                      address: "12541 Melvina Route\nRomagueramouth, MD 68703-6356"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Dolorum minima amet amet. Animi in eos excepturi tempore quo. Totam corporis quasi nam natus esse fugiat ullam. Libero nisi perspiciatis dolores fugiat ut rerum. Saepe ex deserunt consectetur voluptas qui quod. Quia qui quia facere et iure et quis. Quis a mollitia et saepe. Modi ea est officiis hic est. Corporis debitis accusamus voluptates explicabo incidunt at tempora. Non perspiciatis voluptatem earum enim dolor quis.'
                      length: 348
                      turns: 83
                      free: false
                      is_work: true
                      spec: null
                      location:
                        id: 85
                        name: Ярославская
                        type: область
                      store: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 21
                      name: 'Naval Architects'
                      address: "641 Sawayn Pines Apt. 540\nJettiemouth, RI 16106"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Occaecati et qui magnam mollitia totam. Ullam at et commodi et perferendis doloribus. Et deserunt exercitationem in consequatur nemo et perspiciatis. Autem dolorem dolores sint eaque. Sint nobis consequatur nesciunt minima neque. Laborum dolore deleniti perferendis eius non. Veniam laudantium ut ad ut dolorem ex mollitia. Voluptas eum provident reprehenderit quia optio voluptas doloribus.'
                      length: 803
                      turns: 89
                      free: true
                      is_work: false
                      spec: null
                      location:
                        id: 43
                        name: Московская
                        type: область
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 8
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 23
                    name: Pediatricians
                    address: "287 Anderson Key\nNew Venaburgh, OH 18975-5715"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Eligendi laborum quod et est sunt occaecati et. Quam iure hic odit quod. Blanditiis nesciunt explicabo voluptatem cumque. Repellendus aperiam tenetur excepturi. Sed maxime placeat ipsa aut molestiae labore. Saepe eum temporibus ducimus omnis alias nesciunt. Quos fuga omnis eos. Qui rerum iste qui optio et. Molestias sit atque sunt facilis occaecati nobis perferendis asperiores. Non vero adipisci fuga molestiae soluta facere.'
                    length: 153
                    turns: 23
                    free: true
                    is_work: false
                    spec: null
                    location:
                      id: 79
                      name: Челябинская
                      type: область
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 23
                      name:
                        type: string
                        example: Pediatricians
                      address:
                        type: string
                        example: "287 Anderson Key\nNew Venaburgh, OH 18975-5715"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Eligendi laborum quod et est sunt occaecati et. Quam iure hic odit quod. Blanditiis nesciunt explicabo voluptatem cumque. Repellendus aperiam tenetur excepturi. Sed maxime placeat ipsa aut molestiae labore. Saepe eum temporibus ducimus omnis alias nesciunt. Quos fuga omnis eos. Qui rerum iste qui optio et. Molestias sit atque sunt facilis occaecati nobis perferendis asperiores. Non vero adipisci fuga molestiae soluta facere.'
                      length:
                        type: integer
                        example: 153
                      turns:
                        type: integer
                        example: 23
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 79
                          name:
                            type: string
                            example: Челябинская
                          type:
                            type: string
                            example: область
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: jhichbcgaurnzni
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 9
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: ipsam
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["velit","quisquam"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["itaque","blanditiis"]'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 7
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 22
                    name: 'Industrial Engineering Technician'
                    address: "23493 Veum Walk\nOrtizmouth, NH 39303"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Sint quisquam aut ullam ipsam quod. Voluptate ipsa expedita labore quasi facere ducimus qui fugit. Ea enim ipsa commodi consequatur nihil. Voluptates sint dolorem velit in est. Temporibus optio omnis excepturi voluptatem dignissimos commodi. Possimus quia quia voluptatem ut excepturi perspiciatis ullam. Neque modi eos qui qui dignissimos modi. Et hic quas omnis nesciunt aut. Velit voluptatum ratione repudiandae error aut et.'
                    length: 774
                    turns: 84
                    free: false
                    is_work: false
                    spec: null
                    location:
                      id: 85
                      name: Ярославская
                      type: область
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 22
                      name:
                        type: string
                        example: 'Industrial Engineering Technician'
                      address:
                        type: string
                        example: "23493 Veum Walk\nOrtizmouth, NH 39303"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Sint quisquam aut ullam ipsam quod. Voluptate ipsa expedita labore quasi facere ducimus qui fugit. Ea enim ipsa commodi consequatur nihil. Voluptates sint dolorem velit in est. Temporibus optio omnis excepturi voluptatem dignissimos commodi. Possimus quia quia voluptatem ut excepturi perspiciatis ullam. Neque modi eos qui qui dignissimos modi. Et hic quas omnis nesciunt aut. Velit voluptatum ratione repudiandae error aut et.'
                      length:
                        type: integer
                        example: 774
                      turns:
                        type: integer
                        example: 84
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 85
                          name:
                            type: string
                            example: Ярославская
                          type:
                            type: string
                            example: область
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 24
                    name: Logistician
                    address: "9042 Kris Wall Apt. 201\nNorth Geoffreyhaven, FL 95116"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Expedita id dolor officiis. At temporibus fuga velit debitis suscipit sint ex. Sit occaecati quam numquam quam voluptas. Provident sit praesentium dolore rerum deleniti nam. Beatae quaerat sit eum minus corrupti aut. Molestias eaque et quia totam ab. Suscipit nostrum eos unde id aut eveniet natus. Eum sit tempore ad.'
                    length: 521
                    turns: 9
                    free: true
                    is_work: true
                    spec: null
                    location:
                      id: 43
                      name: Московская
                      type: область
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 24
                      name:
                        type: string
                        example: Logistician
                      address:
                        type: string
                        example: "9042 Kris Wall Apt. 201\nNorth Geoffreyhaven, FL 95116"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Expedita id dolor officiis. At temporibus fuga velit debitis suscipit sint ex. Sit occaecati quam numquam quam voluptas. Provident sit praesentium dolore rerum deleniti nam. Beatae quaerat sit eum minus corrupti aut. Molestias eaque et quia totam ab. Suscipit nostrum eos unde id aut eveniet natus. Eum sit tempore ad.'
                      length:
                        type: integer
                        example: 521
                      turns:
                        type: integer
                        example: 9
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 43
                          name:
                            type: string
                            example: Московская
                          type:
                            type: string
                            example: область
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: zwbjljlzisxkddxjfmd
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: fuga
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - culpa
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 8
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["aperiam","explicabo"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["alias","quae"]'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 14
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 12
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 7
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 114
                    name: 'Mr. Ryleigh Ferry Jr.'
                    email: brielle01@example.org
                    email_verified_at: '2025-03-10T11:06:37.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 114
                      name:
                        type: string
                        example: 'Mr. Ryleigh Ferry Jr.'
                      email:
                        type: string
                        example: brielle01@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-10T11:06:37.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 115
                    name: 'Jaquan Littel'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 115
                      name:
                        type: string
                        example: 'Jaquan Littel'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 116
                    name: 'Nella Littel'
                    email: demond89@example.net
                    email_verified_at: '2025-03-10T11:06:37.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 116
                      name:
                        type: string
                        example: 'Nella Littel'
                      email:
                        type: string
                        example: demond89@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-10T11:06:37.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: qhsixonlggzb
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gottlieb.wade@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 12
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
