openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 218
                      name: 'Любовь Львовна Никонова'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 219
                      name: 'Журавлёва Эмма Андреевна'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: iusto
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 23
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 108|3rkqh8rDNk1zRjjCiP3myRqFInJVpSlKHN8BEbMZ783c6977
                  token_type: Bearer
                  user:
                    id: 212
                    name: 'Яна Максимовна Константинова'
                    email: rodion.rozkova@example.net
                    email_verified_at: '2025-01-29T12:31:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 108|3rkqh8rDNk1zRjjCiP3myRqFInJVpSlKHN8BEbMZ783c6977
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 212
                      name:
                        type: string
                        example: 'Яна Максимовна Константинова'
                      email:
                        type: string
                        example: rodion.rozkova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:31:36.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: runolfsdottir.hazel@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'ULfk?$AS1oqN?^Kdb'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 109|ZFb42w5ASJWZq4QGkV2Y0lmW2i3E0ITOeNJgWmRE9a45152f
                  token_type: Bearer
                  user:
                    id: 213
                    name: 'Казакова Алёна Ивановна'
                    email: sava53@example.org
                    email_verified_at: '2025-01-29T12:31:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 109|ZFb42w5ASJWZq4QGkV2Y0lmW2i3E0ITOeNJgWmRE9a45152f
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 213
                      name:
                        type: string
                        example: 'Казакова Алёна Ивановна'
                      email:
                        type: string
                        example: sava53@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:31:36.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: ea
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: andrew.hamill@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'NlF4KC`:I"eRwLE<P&n'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: at
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 6
                    name: file_6794e9d44d9fb
                    type: polis
                    path: no-file
                    data:
                      polisNumber: '1231231231'
                      issuedWhom: 'Лордом Старокм'
                      itWorksDate: 12.08.2028
                      polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: file_6794e9d44d9fb
                      type:
                        type: string
                        example: polis
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          polisNumber:
                            type: string
                            example: '1231231231'
                          issuedWhom:
                            type: string
                            example: 'Лордом Старокм'
                          itWorksDate:
                            type: string
                            example: 12.08.2028
                          polisFileLink:
                            type: string
                            example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: sequi
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 6
                      name: file_6794e9d44d9fb
                      type: polis
                      path: no-file
                      data:
                        polisNumber: '1231231231'
                        issuedWhom: 'Лордом Старокм'
                        itWorksDate: 12.08.2028
                        polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 6
                      name: file_6794e9d44d9fb
                      type: polis
                      path: no-file
                      data:
                        polisNumber: '1231231231'
                        issuedWhom: 'Лордом Старокм'
                        itWorksDate: 12.08.2028
                        polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 6
                    name: file_6794e9d44d9fb
                    type: polis
                    path: no-file
                    data:
                      polisNumber: '1231231231'
                      issuedWhom: 'Лордом Старокм'
                      itWorksDate: 12.08.2028
                      polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: file_6794e9d44d9fb
                      type:
                        type: string
                        example: polis
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          polisNumber:
                            type: string
                            example: '1231231231'
                          issuedWhom:
                            type: string
                            example: 'Лордом Старокм'
                          itWorksDate:
                            type: string
                            example: 12.08.2028
                          polisFileLink:
                            type: string
                            example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 6
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 6
                  name: file_6794e9d44d9fb
                  type: polis
                  path: no-file
                  data:
                    polisNumber: '1231231231'
                    issuedWhom: 'Лордом Старокм'
                    itWorksDate: 12.08.2028
                    polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  user_id: 3
                  created_at: '2025-01-25T13:40:36.000000Z'
                  updated_at: '2025-01-25T13:40:36.000000Z'
                properties:
                  id:
                    type: integer
                    example: 6
                  name:
                    type: string
                    example: file_6794e9d44d9fb
                  type:
                    type: string
                    example: polis
                  path:
                    type: string
                    example: no-file
                  data:
                    type: object
                    properties:
                      polisNumber:
                        type: string
                        example: '1231231231'
                      issuedWhom:
                        type: string
                        example: 'Лордом Старокм'
                      itWorksDate:
                        type: string
                        example: 12.08.2028
                      polisFileLink:
                        type: string
                        example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  user_id:
                    type: integer
                    example: 3
                  created_at:
                    type: string
                    example: '2025-01-25T13:40:36.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-25T13:40:36.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 6
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Mr.
                    surname: Prof.
                    patronymic: Mrs.
                    date_of_birth: '2023-02-21'
                    city: Волоколамск
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: 8-800-804-2067
                    start_number: '760'
                    group: Садовник
                    rank_number: '99999'
                    rank: Лесоруб
                    community: 'МКК МикроХмельЦемент'
                    coach: 'Степанова Ольга Евгеньевна'
                    moto_stamp: Miss
                    engine: Prof.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '2023-02-21'
                      city:
                        type: string
                        example: Волоколамск
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: 8-800-804-2067
                      start_number:
                        type: string
                        example: '760'
                      group:
                        type: string
                        example: Садовник
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Лесоруб
                      community:
                        type: string
                        example: 'МКК МикроХмельЦемент'
                      coach:
                        type: string
                        example: 'Степанова Ольга Евгеньевна'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Prof.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-29T12:31:37'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: eligendi
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: corrupti
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Prof.
                    surname: Mr.
                    patronymic: Prof.
                    date_of_birth: '2003-03-18'
                    city: Кашира
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '+7 (922) 472-7089'
                    start_number: '538'
                    group: Офис-менеджер
                    rank_number: '99999'
                    rank: Автоинструктор
                    community: 'ЗАО РыбПивРадиоЭкспедиция'
                    coach: 'Захар Романович Воронов'
                    moto_stamp: Miss
                    engine: Prof.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '2003-03-18'
                      city:
                        type: string
                        example: Кашира
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+7 (922) 472-7089'
                      start_number:
                        type: string
                        example: '538'
                      group:
                        type: string
                        example: Офис-менеджер
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Автоинструктор
                      community:
                        type: string
                        example: 'ЗАО РыбПивРадиоЭкспедиция'
                      coach:
                        type: string
                        example: 'Захар Романович Воронов'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Prof.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-29T12:31:37'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: fugit
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: iure
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: atque
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: eaque
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: et
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 122
                      name: 'Самойлова Лидия Львовна'
                      desc: 'Ea molestias dicta dolor saepe quisquam voluptas ipsa. Est sed impedit voluptas impedit. Quae corporis pariatur magni impedit vel. Ipsa recusandae assumenda quis provident iure sed ut.'
                      is_work: false
                      date_start: '2025-01-29T12:31:36.000000Z'
                      images: null
                      contacts: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 123
                      name: 'Красильникова Мальвина Владимировна'
                      desc: 'Omnis corporis dolores exercitationem iure. Qui eligendi et inventore minima beatae. At est omnis et eum. Placeat omnis quis blanditiis nemo alias dolor rem.'
                      is_work: false
                      date_start: '2025-01-29T12:31:36.000000Z'
                      images: null
                      contacts: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 21
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 9
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 125
                    name: 'Рада Александровна Крюкова'
                    desc: 'Illo dicta consequuntur possimus delectus. Et blanditiis veritatis natus facere laborum. Ea quia qui cum reiciendis id commodi aut. Commodi corrupti nesciunt aut vitae natus aut voluptatem.'
                    is_work: true
                    date_start: '2025-01-29T12:31:36.000000Z'
                    images: null
                    contacts: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 125
                      name:
                        type: string
                        example: 'Рада Александровна Крюкова'
                      desc:
                        type: string
                        example: 'Illo dicta consequuntur possimus delectus. Et blanditiis veritatis natus facere laborum. Ea quia qui cum reiciendis id commodi aut. Commodi corrupti nesciunt aut vitae natus aut voluptatem.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-29T12:31:36.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: mxxgtupdbxiwyetgaihs
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-29T12:31:36'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 124
                    name: 'Авдеева Яна Фёдоровна'
                    desc: 'Animi aut aut corrupti et. Excepturi voluptatem sunt itaque ut. Esse consectetur saepe impedit delectus numquam. Repellendus et exercitationem aut tempore.'
                    is_work: true
                    date_start: '2025-01-29T12:31:36.000000Z'
                    images: null
                    contacts: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 124
                      name:
                        type: string
                        example: 'Авдеева Яна Фёдоровна'
                      desc:
                        type: string
                        example: 'Animi aut aut corrupti et. Excepturi voluptatem sunt itaque ut. Esse consectetur saepe impedit delectus numquam. Repellendus et exercitationem aut tempore.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-29T12:31:36.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 217
                    name: 'Суворова Ярослава Владимировна'
                    email: alina09@example.com
                    email_verified_at: '2025-01-29T12:31:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 217
                      name:
                        type: string
                        example: 'Суворова Ярослава Владимировна'
                      email:
                        type: string
                        example: alina09@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:31:36.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 8
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 129
                      name: Физик
                      address: '107625, Ульяновская область, город Пушкино, пр. Гагарина, 31'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Suscipit aut et non laudantium ea. Voluptatem quisquam dolores odit aut quam officiis saepe. Qui exercitationem expedita dolores quis voluptatem omnis sed. Culpa animi nemo veniam aut rem. Fugit eum maiores illum voluptate. Veniam provident aperiam est quibusdam repellendus est. Molestiae quam ipsum eum sit. Illo dolores aut nemo ex ea sed. Mollitia vitae magni a suscipit voluptas. Repellat magni facere earum voluptates nesciunt illo repellendus.'
                      length: 198
                      turns: 59
                      free: false
                      is_work: false
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 130
                      name: 'Технический писатель'
                      address: '708176, Белгородская область, город Москва, пер. Гоголя, 51'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Fugiat quis odio consequatur qui. Quis dolor voluptas aut qui. Et quia qui omnis occaecati commodi. Incidunt nihil aliquid et. Aut deserunt qui molestiae sed pariatur. Praesentium unde laborum molestiae laborum ipsum. Cumque esse repellendus qui enim animi. Atque et qui inventore iusto possimus suscipit et. Adipisci quae explicabo est ut. Dolorem eaque ea et. Enim est est dolorem.'
                      length: 214
                      turns: 52
                      free: false
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 15
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 132
                    name: Телефонистка
                    address: '504639, Смоленская область, город Москва, пр. Косиора, 80'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Officiis unde quidem modi voluptatem id aperiam. Magnam sit iure commodi unde fugit laudantium incidunt. Quibusdam maxime aut sint sed autem. Eos nemo et sed ea odit hic voluptate non. Voluptates repellat aut eos tempora dolore quae assumenda. Sit sunt minus omnis molestiae minima. Assumenda tenetur in qui similique voluptas omnis. Vel tempora quo nihil maiores et. Sed optio nulla minima odit. Ipsam voluptas incidunt quisquam eaque. Quaerat nobis voluptatibus quaerat maiores ut aliquam animi.'
                    length: 410
                    turns: 83
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 132
                      name:
                        type: string
                        example: Телефонистка
                      address:
                        type: string
                        example: '504639, Смоленская область, город Москва, пр. Косиора, 80'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Officiis unde quidem modi voluptatem id aperiam. Magnam sit iure commodi unde fugit laudantium incidunt. Quibusdam maxime aut sint sed autem. Eos nemo et sed ea odit hic voluptate non. Voluptates repellat aut eos tempora dolore quae assumenda. Sit sunt minus omnis molestiae minima. Assumenda tenetur in qui similique voluptas omnis. Vel tempora quo nihil maiores et. Sed optio nulla minima odit. Ipsam voluptas incidunt quisquam eaque. Quaerat nobis voluptatibus quaerat maiores ut aliquam animi.'
                      length:
                        type: integer
                        example: 410
                      turns:
                        type: integer
                        example: 83
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: pbzseneenjhkdvnsbkexxxhwsphvqwnlfwdgh
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: nam
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 4
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: itaque
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["vitae","et"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["quasi","suscipit"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 131
                    name: Лингвист
                    address: '278051, Нижегородская область, город Ступино, шоссе Славы, 58'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Itaque vel est odit rem praesentium incidunt quo commodi. Inventore molestias odit excepturi similique facere officia est repudiandae. Et beatae dolore voluptatem id nulla quae illum odit. Ut maxime expedita dolorem similique inventore dolore neque. Consectetur ex fugiat sit autem. Libero magnam voluptatem ut qui nemo similique. Et a harum vel illo omnis eum sequi. Fugit dolorem et dolore quaerat enim. Repellat aut veniam adipisci sed ipsum inventore maiores.'
                    length: 135
                    turns: 54
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 131
                      name:
                        type: string
                        example: Лингвист
                      address:
                        type: string
                        example: '278051, Нижегородская область, город Ступино, шоссе Славы, 58'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Itaque vel est odit rem praesentium incidunt quo commodi. Inventore molestias odit excepturi similique facere officia est repudiandae. Et beatae dolore voluptatem id nulla quae illum odit. Ut maxime expedita dolorem similique inventore dolore neque. Consectetur ex fugiat sit autem. Libero magnam voluptatem ut qui nemo similique. Et a harum vel illo omnis eum sequi. Fugit dolorem et dolore quaerat enim. Repellat aut veniam adipisci sed ipsum inventore maiores.'
                      length:
                        type: integer
                        example: 135
                      turns:
                        type: integer
                        example: 54
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 36
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 215
                    name: 'Коновалов Павел Владимирович'
                    email: emma58@example.com
                    email_verified_at: '2025-01-29T12:31:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 215
                      name:
                        type: string
                        example: 'Коновалов Павел Владимирович'
                      email:
                        type: string
                        example: emma58@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:31:36.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 216
                    name: 'Галина Евгеньевна Антонова'
                    email: artem.sidorova@example.org
                    email_verified_at: '2025-01-29T12:31:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 216
                      name:
                        type: string
                        example: 'Галина Евгеньевна Антонова'
                      email:
                        type: string
                        example: artem.sidorova@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:31:36.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: fvj
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: dharber@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
