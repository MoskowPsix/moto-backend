openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 25
                      name: 'Игнат Алексеевич Родионов'
                      email: marta17@example.net
                      email_verified_at: '2025-01-26T08:53:09.000000Z'
                      avatar: null
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 26
                      name: 'Милан Иванович Третьяков'
                      email: blinov.georgii@example.org
                      email_verified_at: '2025-01-26T08:53:09.000000Z'
                      avatar: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 24
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователи получены успешно.'
                  users: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователи получены успешно.'
                  users:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 25|kiOkMFRw71qDFTLMZFVwY3kMUH1wy24AGn9pjY4d6b7fb212
                  token_type: Bearer
                  user:
                    id: 20
                    name: 'Панфилов Даниил Максимович'
                    email: odintova.alla@example.org
                    email_verified_at: '2025-01-26T08:53:08.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 25|kiOkMFRw71qDFTLMZFVwY3kMUH1wy24AGn9pjY4d6b7fb212
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
                      name:
                        type: string
                        example: 'Панфилов Даниил Максимович'
                      email:
                        type: string
                        example: odintova.alla@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-26T08:53:08.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: rowe.zackary@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: .F.^;Vm2%|Oe)d
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 26|5H6EG0L0RkbL1GTdDHOlxoShqCEeJ1xPUUj0h0t81735f6c3
                  token_type: Bearer
                  user:
                    id: 21
                    name: 'Ярослав Алексеевич Селезнёв'
                    email: moiseeva.sava@example.com
                    email_verified_at: '2025-01-26T08:53:08.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 26|5H6EG0L0RkbL1GTdDHOlxoShqCEeJ1xPUUj0h0t81735f6c3
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 21
                      name:
                        type: string
                        example: 'Ярослав Алексеевич Селезнёв'
                      email:
                        type: string
                        example: moiseeva.sava@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-26T08:53:08.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: mtwnor
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: cole.mozelle@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '6`?Tu=WlQz8RG}]^-DK]'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: odio
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 5
                    name: file_6794e9d20f7ad
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '21312321414123'
                      licensesFileLink: 'https://fmslo.ru/images/fms_sporsman/bezymyannyj11.jpg'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: file_6794e9d20f7ad
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '21312321414123'
                          licensesFileLink:
                            type: string
                            example: 'https://fmslo.ru/images/fms_sporsman/bezymyannyj11.jpg'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: nihil
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: ipsa
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 5
                      name: file_6794e9d20f7ad
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '21312321414123'
                        licensesFileLink: 'https://fmslo.ru/images/fms_sporsman/bezymyannyj11.jpg'
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 5
                      name: file_6794e9d20f7ad
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '21312321414123'
                        licensesFileLink: 'https://fmslo.ru/images/fms_sporsman/bezymyannyj11.jpg'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 5
                    name: file_6794e9d20f7ad
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '21312321414123'
                      licensesFileLink: 'https://fmslo.ru/images/fms_sporsman/bezymyannyj11.jpg'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: file_6794e9d20f7ad
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '21312321414123'
                          licensesFileLink:
                            type: string
                            example: 'https://fmslo.ru/images/fms_sporsman/bezymyannyj11.jpg'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 5
                  name: file_6794e9d20f7ad
                  type: licenses
                  path: no-file
                  data:
                    licensesNumber: '21312321414123'
                    licensesFileLink: 'https://fmslo.ru/images/fms_sporsman/bezymyannyj11.jpg'
                  user_id: 3
                  created_at: '2025-01-25T13:40:34.000000Z'
                  updated_at: '2025-01-25T13:40:34.000000Z'
                properties:
                  id:
                    type: integer
                    example: 5
                  name:
                    type: string
                    example: file_6794e9d20f7ad
                  type:
                    type: string
                    example: licenses
                  path:
                    type: string
                    example: no-file
                  data:
                    type: object
                    properties:
                      licensesNumber:
                        type: string
                        example: '21312321414123'
                      licensesFileLink:
                        type: string
                        example: 'https://fmslo.ru/images/fms_sporsman/bezymyannyj11.jpg'
                  user_id:
                    type: integer
                    example: 3
                  created_at:
                    type: string
                    example: '2025-01-25T13:40:34.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-25T13:40:34.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 5
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Mr.
                    surname: Mr.
                    patronymic: Dr.
                    date_of_birth: '2019-01-22'
                    city: 'Серебряные Пруды'
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(812) 357-91-41'
                    start_number: '673'
                    group: Промоутер
                    rank_number: '99999'
                    rank: Штурман
                    community: 'ООО Микро'
                    coach: 'Григорий Сергеевич Крюков'
                    moto_stamp: Miss
                    engine: Prof.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '2019-01-22'
                      city:
                        type: string
                        example: 'Серебряные Пруды'
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(812) 357-91-41'
                      start_number:
                        type: string
                        example: '673'
                      group:
                        type: string
                        example: Промоутер
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Штурман
                      community:
                        type: string
                        example: 'ООО Микро'
                      coach:
                        type: string
                        example: 'Григорий Сергеевич Крюков'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Prof.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: exercitationem
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-26T08:53:09'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: optio
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Ms.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: '2010-07-10'
                    city: Солнечногорск
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(495) 041-2350'
                    start_number: '105'
                    group: Стилист
                    rank_number: '100000'
                    rank: Арт-директор
                    community: 'ЗАО ИнфоТекстильВостокОпт'
                    coach: 'Устинова Фаина Евгеньевна'
                    moto_stamp: Dr.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ms.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '2010-07-10'
                      city:
                        type: string
                        example: Солнечногорск
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(495) 041-2350'
                      start_number:
                        type: string
                        example: '105'
                      group:
                        type: string
                        example: Стилист
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Арт-директор
                      community:
                        type: string
                        example: 'ЗАО ИнфоТекстильВостокОпт'
                      coach:
                        type: string
                        example: 'Устинова Фаина Евгеньевна'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Dr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-26T08:53:09'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 13
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: minus
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 26
                      name: 'Илларион Евгеньевич Симонов'
                      desc: 'Soluta enim fugiat facilis voluptate. Repellendus impedit repudiandae molestiae labore harum quam quis rem. Velit totam cupiditate enim inventore provident et excepturi nisi.'
                      is_work: false
                      date_start: null
                      images: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 27
                      name: 'Филатова Татьяна Алексеевна'
                      desc: 'In animi ut eos nam ab distinctio dicta. Qui molestiae perspiciatis consequatur sit quod. Voluptatum id tempora dolorem sunt odit.'
                      is_work: true
                      date_start: null
                      images: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: delectus
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 14
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 29
                    name: 'Викентий Максимович Никитин'
                    desc: 'Aliquam necessitatibus atque exercitationem facilis. Unde et asperiores natus minus reiciendis. Maxime illum consequatur voluptatem et eum facilis.'
                    is_work: true
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: 'Викентий Максимович Никитин'
                      desc:
                        type: string
                        example: 'Aliquam necessitatibus atque exercitationem facilis. Unde et asperiores natus minus reiciendis. Maxime illum consequatur voluptatem et eum facilis.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: ajqjfwhxlnkdmobqpf
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-26T08:53:08'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 1
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 28
                    name: 'Варвара Львовна Тихонова'
                    desc: 'Distinctio eligendi laborum sit impedit. Quasi dolorem et sunt est aspernatur doloremque enim. Est dolores quod aliquam nisi iure.'
                    is_work: false
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 28
                      name:
                        type: string
                        example: 'Варвара Львовна Тихонова'
                      desc:
                        type: string
                        example: 'Distinctio eligendi laborum sit impedit. Quasi dolorem et sunt est aspernatur doloremque enim. Est dolores quod aliquam nisi iure.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 24
                    name: 'Зоя Евгеньевна Морозова'
                    email: yroslava.borisova@example.net
                    email_verified_at: '2025-01-26T08:53:08.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 24
                      name:
                        type: string
                        example: 'Зоя Евгеньевна Морозова'
                      email:
                        type: string
                        example: yroslava.borisova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-26T08:53:08.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 1
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 32
                      name: Бариста
                      address: '921556, Читинская область, город Ногинск, пр. Славы, 79'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Dolorem sunt dolores quibusdam saepe voluptatem aperiam totam. Natus blanditiis harum velit et ea cumque. Ut optio recusandae ipsa perferendis. Reprehenderit voluptatem ipsum voluptas non magnam tempora. Voluptatem id minima quidem sit quis labore. Ut enim quae quasi alias. Iste voluptatem eaque est occaecati. Veniam ea tempore enim occaecati. Minima odit autem amet sed tempora est. Quos eum quas soluta et quo.'
                      length: 634
                      turns: 73
                      free: false
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 33
                      name: Бизнес-аналитик
                      address: '034494, Нижегородская область, город Мытищи, пл. Ленина, 96'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Ut asperiores quo quia sit. Nesciunt doloremque sint libero placeat doloribus tempora. Voluptatibus aliquam aliquam velit ducimus consequuntur consequatur. Et eum totam corrupti nesciunt vitae minima. Eum rerum mollitia nesciunt ipsum accusantium. Quia omnis error sunt numquam. Eligendi officia id et dolore. Quia rerum aut velit necessitatibus. Similique ad eos quas tenetur. Molestiae quod quae vel deserunt vel aut expedita. Iusto est est autem quis nemo.'
                      length: 587
                      turns: 90
                      free: false
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 20
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 35
                    name: Интеллектуал
                    address: '113493, Волгоградская область, город Ногинск, пл. Гагарина, 41'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Eius optio et aut fuga amet odio quas corporis. Porro rerum sunt beatae quod. Excepturi totam doloribus eligendi similique recusandae autem incidunt. Eos ipsam et ut odio molestias sed iusto. Et quos temporibus est. Consequatur quia ea est ut ea. Aliquid dignissimos consequatur suscipit ea quo doloremque maiores occaecati. Corporis id dolor officia sed ad.'
                    length: 23
                    turns: 0
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 35
                      name:
                        type: string
                        example: Интеллектуал
                      address:
                        type: string
                        example: '113493, Волгоградская область, город Ногинск, пл. Гагарина, 41'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Eius optio et aut fuga amet odio quas corporis. Porro rerum sunt beatae quod. Excepturi totam doloribus eligendi similique recusandae autem incidunt. Eos ipsam et ut odio molestias sed iusto. Et quos temporibus est. Consequatur quia ea est ut ea. Aliquid dignissimos consequatur suscipit ea quo doloremque maiores occaecati. Corporis id dolor officia sed ad.'
                      length:
                        type: integer
                        example: 23
                      turns:
                        type: integer
                        example: 0
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: jsqjfwzpwgujjwwtrymyjfunvwknzrqftyaaydgtvdgbjlzsxnmz
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 9
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["et","amet"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 34
                    name: Экономист
                    address: '256464, Владимирская область, город Балашиха, проезд Ленина, 37'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Explicabo sint iste officiis quia dolorum. Itaque porro autem minus exercitationem quia rerum earum. Rem ut laboriosam in consequatur esse autem cum. Vel modi voluptatem quia minus fugit non aliquid expedita. Et sit velit a beatae et velit est deleniti. At quia praesentium dicta natus soluta. Accusantium ea nihil odit cumque sint. Voluptatem earum ut dolores et sit explicabo.'
                    length: 83
                    turns: 57
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 34
                      name:
                        type: string
                        example: Экономист
                      address:
                        type: string
                        example: '256464, Владимирская область, город Балашиха, проезд Ленина, 37'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Explicabo sint iste officiis quia dolorum. Itaque porro autem minus exercitationem quia rerum earum. Rem ut laboriosam in consequatur esse autem cum. Vel modi voluptatem quia minus fugit non aliquid expedita. Et sit velit a beatae et velit est deleniti. At quia praesentium dicta natus soluta. Accusantium ea nihil odit cumque sint. Voluptatem earum ut dolores et sit explicabo.'
                      length:
                        type: integer
                        example: 83
                      turns:
                        type: integer
                        example: 57
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 17
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 23
                    name: 'Борис Львович Ситников'
                    email: isakova.mariy@example.net
                    email_verified_at: '2025-01-26T08:53:08.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 23
                      name:
                        type: string
                        example: 'Борис Львович Ситников'
                      email:
                        type: string
                        example: isakova.mariy@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-26T08:53:08.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
