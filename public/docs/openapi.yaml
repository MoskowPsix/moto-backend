openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Запись на гонку успешно создана.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Запись на гонку успешно создана.'
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Запрашиваемый ресурс не найден.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Запрашиваемый ресурс не найден.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: sunt
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:12'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: quae
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: false
                phoneNumber:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 23
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: dolores
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: nulla
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: repudiandae
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 19
                  items:
                    type: integer
                    nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 590
                      name: 'Варвара Сергеевна Савина'
                      email: molcanov.german@example.net
                      email_verified_at: '2025-03-17T07:24:12.000000Z'
                      created_at: '2025-03-17T07:24:12.000000Z'
                      updated_at: '2025-03-17T07:24:12.000000Z'
                      avatar: null
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 591
                      name: 'Моисеева Альбина Ивановна'
                      email: vera.vasilev@example.org
                      email_verified_at: '2025-03-17T07:24:12.000000Z'
                      created_at: '2025-03-17T07:24:12.000000Z'
                      updated_at: '2025-03-17T07:24:12.000000Z'
                      avatar: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 4
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/pdf':
    get:
      summary: getAppointmentPDF
      operationId: getAppointmentPDF
      description: 'Возвращает документ заявки гонщика для комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: corporis
        required: true
        schema:
          type: string
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно создана.'
                  attendance:
                    id: 22
                    name: 'Инга Романовна Федосеева'
                    desc: 'Quia qui id id in. Quae et veritatis alias doloremque voluptatem. Dignissimos quo facere soluta laborum voluptas. Asperiores aut rerum ut ut.'
                    price: '4.0640832e+07'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно создана.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 22
                      name:
                        type: string
                        example: 'Инга Романовна Федосеева'
                      desc:
                        type: string
                        example: 'Quia qui id id in. Quae et veritatis alias doloremque voluptatem. Dignissimos quo facere soluta laborum voluptas. Asperiores aut rerum ut ut.'
                      price:
                        type: string
                        example: '4.0640832e+07'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: heeqzozq
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ansjefvkamkkcpmtnbfjcuzpc
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 311.859482087
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 11
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно изменена.'
                  attendance:
                    id: 23
                    name: 'Виктория Ивановна Максимова'
                    desc: 'Quas inventore odit dolorum. Soluta libero hic unde qui ea. Exercitationem adipisci facere corporis nemo. Rerum quisquam ea velit dolorem odit ducimus molestiae.'
                    price: '1.5621003e+07'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно изменена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 23
                      name:
                        type: string
                        example: 'Виктория Ивановна Максимова'
                      desc:
                        type: string
                        example: 'Quas inventore odit dolorum. Soluta libero hic unde qui ea. Exercitationem adipisci facere corporis nemo. Rerum quisquam ea velit dolorem odit ducimus molestiae.'
                      price:
                        type: string
                        example: '1.5621003e+07'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: szqpmu
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: rrevosskddh
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 28788.641
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 15
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно удалена'
                  attendance:
                    id: 24
                    name: 'Хохлова Маргарита Сергеевна'
                    desc: 'Ad quaerat recusandae et explicabo ea. Aut maxime et molestias sint occaecati. Perferendis quae vel tenetur perspiciatis cum.'
                    price: '5.9773744e+07'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно удалена'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 24
                      name:
                        type: string
                        example: 'Хохлова Маргарита Сергеевна'
                      desc:
                        type: string
                        example: 'Ad quaerat recusandae et explicabo ea. Aut maxime et molestias sint occaecati. Perferendis quae vel tenetur perspiciatis cum.'
                      price:
                        type: string
                        example: '5.9773744e+07'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 3
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 21
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 872|WDdduQm9RyxpJ4EkPzeCmKS957SLslRra8oj7OJYdfb80500
                  token_type: Bearer
                  user:
                    id: 580
                    name: 'Наумов Алексей Алексеевич'
                    email: sanisimov@example.net
                    email_verified_at: '2025-03-17T07:24:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 872|WDdduQm9RyxpJ4EkPzeCmKS957SLslRra8oj7OJYdfb80500
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 580
                      name:
                        type: string
                        example: 'Наумов Алексей Алексеевич'
                      email:
                        type: string
                        example: sanisimov@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:24:10.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. Количество символов в поле value должно быть не меньше 3.'
                  example: powlowski.vanessa@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: B9UMRCfYI
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 873|uTTmu9ztVMvUG71an5ZWbnMXBdLXyDXhoAuwY3snf3c269ca
                  token_type: Bearer
                  user:
                    id: 581
                    name: 'Шаров Борис Андреевич'
                    email: martynova.miroslav@example.org
                    email_verified_at: '2025-03-17T07:24:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 873|uTTmu9ztVMvUG71an5ZWbnMXBdLXyDXhoAuwY3snf3c269ca
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 581
                      name:
                        type: string
                        example: 'Шаров Борис Андреевич'
                      email:
                        type: string
                        example: martynova.miroslav@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:24:10.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: kmdnfxhurdsojrkchbov
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: uriel.feest@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '[0>5>K'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: reiciendis
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: l
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: zwefd
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 874|JPWRGCeNg5P1LKKOFPoGFQIRzP47d6gnQ9cqq2DD49e526ba
                  token_type: Bearer
                  user:
                    id: 583
                    name: 'Маргарита Алексеевна Анисимова'
                    email: lidiy.kononova@example.org
                    email_verified_at: '2025-03-17T07:24:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 874|JPWRGCeNg5P1LKKOFPoGFQIRzP47d6gnQ9cqq2DD49e526ba
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 583
                      name:
                        type: string
                        example: 'Маргарита Алексеевна Анисимова'
                      email:
                        type: string
                        example: lidiy.kononova@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:24:10.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 4.'
                  example: e
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: dzjhtchpmxc
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: a
                  nullable: false
              required:
                - key
                - phone
      security: []
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Команда успешно получена'
                    commands:
                      id: 46
                      name: 'Ефремова Лидия Дмитриевна'
                      full_name: null
                      coach: null
                      city: Лотошино
                      avatar: null
                  -
                    status: success
                    message: 'Команда успешно получена'
                    commands:
                      id: 47
                      name: 'Зыкова Федосья Борисовна'
                      full_name: null
                      coach: null
                      city: Домодедово
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 13
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: id
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно создана'
                  command:
                    id: 49
                    name: 'Воронов Родион Евгеньевич'
                    full_name: null
                    coach: null
                    city: Чехов
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно создана'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 49
                      name:
                        type: string
                        example: 'Воронов Родион Евгеньевич'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Чехов
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: wsxyzadnsyoqsgpkubz
                  nullable: false
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: hvkbvdxhaomwknjadbrdcuzs
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: i
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: false
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: txjpamsqfojuotooznxvjhdb
                  nullable: false
              required:
                - name
                - locationId
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда по идентификатору получена успешно'
                  command:
                    id: 48
                    name: 'Селезнёв Григорий Романович'
                    full_name: null
                    coach: null
                    city: Шатура
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда по идентификатору получена успешно'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 48
                      name:
                        type: string
                        example: 'Селезнёв Григорий Романович'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Шатура
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно изменена'
                  command:
                    id: 50
                    name: 'Галкин Вениамин Иванович'
                    full_name: null
                    coach: null
                    city: Шатура
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно изменена'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 50
                      name:
                        type: string
                        example: 'Галкин Вениамин Иванович'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Шатура
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: frfsnxeq
                  nullable: true
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: txcopkoqqfzutewnqjyhzf
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: mthtmgcohfglpokoiyolc
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: cm
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 20
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 898
                    name: file_67d7ce1c005f7
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 898
                      name:
                        type: string
                        example: file_67d7ce1c005f7
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: polis
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://www.dicki.info/iste-inventore-labore-qui-id-sequi'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: id
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 899
                      name: file_67d7ce1c09249
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 900
                      name: file_67d7ce1c0cc2f
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}/files':
    get:
      summary: ''
      operationId: getApiUsersCabinetDocumentsIdFiles
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 901
                    name: file_67d7ce1c181cf
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 901
                      name:
                        type: string
                        example: file_67d7ce1c181cf
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно изменён.'
                  document:
                    id: 902
                    name: file_67d7ce1c20c78
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно изменён.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 902
                      name:
                        type: string
                        example: file_67d7ce1c20c78
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: eveniet
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Транзакция успешно создана.'
                  payment_link: null
                  transaction:
                    id: 9
                    status: null
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Транзакция успешно создана.'
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      status:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 17
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  status: null
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 10
                  status:
                    type: string
                    example: null
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Класс гонки получен успешно'
                    grades:
                      id: 75
                      name: 'Калинина Маргарита Евгеньевна'
                      description: 'Excepturi esse accusamus iusto eos in magni dolore voluptas. Quis aut ut aliquid non est fuga.'
                  -
                    status: success
                    message: 'Класс гонки получен успешно'
                    grades:
                      id: 76
                      name: 'Флорентина Ивановна Крылова'
                      description: 'Sint est eum voluptatem doloremque expedita. Dolores voluptas recusandae non deserunt tenetur. Et voluptas voluptatem ut assumenda sint enim. Fugiat quis et natus mollitia quibusdam eos ut.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 10
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 25
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно создан'
                  grade:
                    id: 78
                    name: 'Герасимова Зинаида Ивановна'
                    description: 'Quaerat qui nihil est perferendis consequatur repellat eum et. Qui quia iste nihil est corrupti. Ea eos qui asperiores voluptatem ratione. Eveniet dignissimos sunt eligendi ea unde omnis.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно создан'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 78
                      name:
                        type: string
                        example: 'Герасимова Зинаида Ивановна'
                      description:
                        type: string
                        example: 'Quaerat qui nihil est perferendis consequatur repellat eum et. Qui quia iste nihil est corrupti. Ea eos qui asperiores voluptatem ratione. Eveniet dignissimos sunt eligendi ea unde omnis.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: aakt
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Qui magni hic occaecati quia.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки по идентификатору получен успешно'
                  grade:
                    id: 77
                    name: 'Назаров Август Александрович'
                    description: 'Culpa similique voluptas sed numquam. Repellat fugiat animi numquam. Qui beatae vero nobis velit incidunt. Rerum est nisi officiis ut tempore. Officiis sunt non error animi.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки по идентификатору получен успешно'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 77
                      name:
                        type: string
                        example: 'Назаров Август Александрович'
                      description:
                        type: string
                        example: 'Culpa similique voluptas sed numquam. Repellat fugiat animi numquam. Qui beatae vero nobis velit incidunt. Rerum est nisi officiis ut tempore. Officiis sunt non error animi.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 14
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно изменён'
                  grade:
                    id: 79
                    name: 'Костин Иннокентий Дмитриевич'
                    description: 'Quia impedit eaque soluta recusandae sunt et adipisci odio. Facere quos numquam quia voluptatem consequatur ut. Fugit sit dolores corporis aut omnis eum aliquid.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно изменён'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 79
                      name:
                        type: string
                        example: 'Костин Иннокентий Дмитриевич'
                      description:
                        type: string
                        example: 'Quia impedit eaque soluta recusandae sunt et adipisci odio. Facere quos numquam quia voluptatem consequatur ut. Fugit sit dolores corporis aut omnis eum aliquid.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: htd
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Nam sapiente saepe et consequatur.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 2
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 1
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: dicta
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Prof.
                    surname: Prof.
                    patronymic: Prof.
                    date_of_birth: '2021-10-05'
                    city: Солнечногорск
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(35222) 09-3297'
                    start_number: '198'
                    group: Арт-директор
                    rank_number: '99999'
                    rank: Телефонистка
                    community: 'ООО НефтьМикроОрион'
                    coach: 'Копылова Лада Максимовна'
                    moto_stamp: Mr.
                    engine: Prof.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '2021-10-05'
                      city:
                        type: string
                        example: Солнечногорск
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(35222) 09-3297'
                      start_number:
                        type: string
                        example: '198'
                      group:
                        type: string
                        example: Арт-директор
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Телефонистка
                      community:
                        type: string
                        example: 'ООО НефтьМикроОрион'
                      coach:
                        type: string
                        example: 'Копылова Лада Максимовна'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: facere
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 2
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: ab
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: illum
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: eligendi
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 9
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Ms.
                    date_of_birth: '1983-04-16'
                    city: Шатура
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '(812) 058-95-57'
                    start_number: '267'
                    group: 'Информационный работник'
                    rank_number: '99999'
                    rank: Абразивоструйщик
                    community: 'ООО Компания ХозСеверСеверМаш'
                    coach: 'Артемий Иванович Шестаков'
                    moto_stamp: Mrs.
                    engine: Mr.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '1983-04-16'
                      city:
                        type: string
                        example: Шатура
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(812) 058-95-57'
                      start_number:
                        type: string
                        example: '267'
                      group:
                        type: string
                        example: 'Информационный работник'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Абразивоструйщик
                      community:
                        type: string
                        example: 'ООО Компания ХозСеверСеверМаш'
                      coach:
                        type: string
                        example: 'Артемий Иванович Шестаков'
                      moto_stamp:
                        type: string
                        example: Mrs.
                      engine:
                        type: string
                        example: Mr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: illo
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: officiis
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: inventore
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 10
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 13
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 83
                      name: 'Потапова Инга Андреевна'
                      desc: 'Et natus quam temporibus ipsum. Voluptates ipsam libero voluptatum omnis. Et saepe quasi quia tenetur eveniet.'
                      is_work: true
                      date_start: '2025-03-17T11:08:10.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 84
                      name: 'Карпов Илларион Владимирович'
                      desc: 'Quos qui quos iure sapiente voluptates ipsum quis. Quia suscipit voluptatibus iste tempore. Consequatur corrupti distinctio qui beatae numquam.'
                      is_work: false
                      date_start: '2025-03-17T03:16:28.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quos
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 18
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 6
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 13
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 5
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 7
                  items:
                    type: integer
                    nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 86
                    name: 'Юлий Львович Лыткин'
                    desc: 'A similique minus ea tempora. Commodi maiores dolores omnis sit id porro aut. Saepe voluptas sit dolores necessitatibus voluptate et.'
                    is_work: true
                    date_start: '2025-03-17T02:00:30.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 86
                      name:
                        type: string
                        example: 'Юлий Львович Лыткин'
                      desc:
                        type: string
                        example: 'A similique minus ea tempora. Commodi maiores dolores omnis sit id porro aut. Saepe voluptas sit dolores necessitatibus voluptate et.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-17T02:00:30.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: foililslzpjxfygggrhqxsdlevfxiwqtokldebuvufxthivjscagyuecyrukhhhtmmuuvipmefdabgboajiqnt
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: false
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 2
                  nullable: true
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 12
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 19
                  nullable: true
              required:
                - name
                - dateStart
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 85
                    name: 'Арсений Алексеевич Рыбаков'
                    desc: 'Ea enim est iusto ex. Ea qui at minus similique. Numquam laborum facilis voluptatem doloribus omnis consequatur eveniet.'
                    is_work: false
                    date_start: '2025-03-17T15:41:18.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 85
                      name:
                        type: string
                        example: 'Арсений Алексеевич Рыбаков'
                      desc:
                        type: string
                        example: 'Ea enim est iusto ex. Ea qui at minus similique. Numquam laborum facilis voluptatem doloribus omnis consequatur eveniet.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T15:41:18.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 8
                  items:
                    type: integer
                    nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 87
                    name: 'Силина Яна Романовна'
                    desc: 'Autem alias impedit animi. Iure at ut ab numquam. Qui illo numquam id quos quos.'
                    is_work: false
                    date_start: '2025-03-17T00:53:51.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 87
                      name:
                        type: string
                        example: 'Силина Яна Романовна'
                      desc:
                        type: string
                        example: 'Autem alias impedit animi. Iure at ut ab numquam. Qui illo numquam id quos quos.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T00:53:51.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: hfhuurunfzpgtdnqrxftaagfqtknzvjvpdzcwaqyyebuldos
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-03-17T07:24:11'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 14
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - quia
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 4
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Состояние гонки успешно изменено на не рабочее.'
                  race:
                    id: 88
                    name: 'Егорова Изабелла Максимовна'
                    desc: 'Quasi quod cupiditate velit vel ipsam necessitatibus iure. Consequatur tenetur quia sed eveniet natus. Rerum animi voluptate quae. Hic est rerum aut sit at tenetur.'
                    is_work: false
                    date_start: '2025-03-17T17:59:23.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Состояние гонки успешно изменено на не рабочее.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 88
                      name:
                        type: string
                        example: 'Егорова Изабелла Максимовна'
                      desc:
                        type: string
                        example: 'Quasi quod cupiditate velit vel ipsam necessitatibus iure. Consequatur tenetur quia sed eveniet natus. Rerum animi voluptate quae. Hic est rerum aut sit at tenetur.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T17:59:23.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Доступ запрещен.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Доступ запрещен.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 8
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table.'
                  example: wzemlak@example.org
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://daniel.com/reprehenderit-repellendus-aspernatur-molestiae-voluptatem-porro-beatae-enim.html'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пароль был успешно изменён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пароль был успешно изменён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'y0n2n3#My;r^q3'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: dignissimos
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 589
                    name: 'Самойлов Степан Алексеевич'
                    email: ybirykova@example.net
                    email_verified_at: '2025-03-17T07:24:11.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 589
                      name:
                        type: string
                        example: 'Самойлов Степан Алексеевич'
                      email:
                        type: string
                        example: ybirykova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:24:11.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 10
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      name: Отменённая
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      name: Отменённая
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 5
                    login: 'Enim tenetur praesentium perspiciatis qui voluptatem laboriosam autem. Dolor magnam earum autem et eius in ad eum. Libero adipisci asperiores vitae officia laudantium commodi blanditiis.'
                    password_1: '"@:ORnj=dV'
                    password_2: '/9t=S?Fg!VnN<'
                    token: 'Velit voluptatibus laudantium illum iste ab perferendis in. Aut quas blanditiis veritatis officia. Qui qui illum aspernatur. Molestias odio aut quo aperiam sed aliquam maxime.'
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      login:
                        type: string
                        example: 'Enim tenetur praesentium perspiciatis qui voluptatem laboriosam autem. Dolor magnam earum autem et eius in ad eum. Libero adipisci asperiores vitae officia laudantium commodi blanditiis.'
                      password_1:
                        type: string
                        example: '"@:ORnj=dV'
                      password_2:
                        type: string
                        example: '/9t=S?Fg!VnN<'
                      token:
                        type: string
                        example: 'Velit voluptatibus laudantium illum iste ab perferendis in. Aut quas blanditiis veritatis officia. Qui qui illum aspernatur. Molestias odio aut quo aperiam sed aliquam maxime.'
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: wngq
                  nullable: false
                password_1:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: gfzxhkqvlwchvpqpnd
                  nullable: false
                password_2:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: irdbwripjkhfxgt
                  nullable: false
                token:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: zqtgwyhoehnhwxqljkdp
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 70
                      name: Психолог
                      address: '850359, Ульяновская область, город Красногорск, пер. Ладыгина, 52'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Soluta aut ut recusandae debitis omnis. Est magnam necessitatibus aut aperiam unde. Aut commodi animi qui aut unde veritatis fuga id. Nihil perspiciatis omnis sed consequatur. Iste qui odit consequatur tempore sunt adipisci corrupti. Ut inventore ipsa laborum et. Esse quis officia maiores iure veritatis suscipit laborum. Reiciendis unde culpa sint sint necessitatibus. Cum modi dolores dolore dolor.'
                      length: 592
                      turns: 87
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 26
                        name: Карачаево-Черкесская
                        type: республика
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 71
                      name: Автоинструктор
                      address: '606588, Кемеровская область, город Солнечногорск, спуск Косиора, 10'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Cupiditate placeat in et voluptatem harum dolore. Temporibus cumque libero odit cupiditate ut nesciunt ut sed. Maxime accusantium a qui voluptatem alias. Aut corrupti repellendus dolor saepe. Et architecto delectus suscipit nisi sed non. Rerum quos aut fuga dignissimos est laudantium. Repellendus qui sint nesciunt earum animi porro doloremque. Molestiae officia porro rerum minima rerum.'
                      length: 206
                      turns: 87
                      free: true
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 29
                        name: Кировская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 18
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 1
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 73
                    name: Герольд
                    address: '171046, Липецкая область, город Наро-Фоминск, наб. Космонавтов, 35'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Ea beatae necessitatibus corrupti omnis ducimus. Autem non aut dolor possimus illo blanditiis voluptas. Excepturi sunt rerum eius ipsum id assumenda. Quae quam ut saepe voluptas. Officia est atque saepe adipisci. Mollitia odio est consequatur voluptatum pariatur consequuntur maiores iure. Exercitationem occaecati magni quibusdam dolorem ratione sunt repudiandae. In hic repellendus id rem eum est. Odio ad non quia quis. Ea id non aut voluptate cumque magni et. Dolore et placeat esse aut.'
                    length: 730
                    turns: 54
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 24
                      name: Калужская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 73
                      name:
                        type: string
                        example: Герольд
                      address:
                        type: string
                        example: '171046, Липецкая область, город Наро-Фоминск, наб. Космонавтов, 35'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Ea beatae necessitatibus corrupti omnis ducimus. Autem non aut dolor possimus illo blanditiis voluptas. Excepturi sunt rerum eius ipsum id assumenda. Quae quam ut saepe voluptas. Officia est atque saepe adipisci. Mollitia odio est consequatur voluptatum pariatur consequuntur maiores iure. Exercitationem occaecati magni quibusdam dolorem ratione sunt repudiandae. In hic repellendus id rem eum est. Odio ad non quia quis. Ea id non aut voluptate cumque magni et. Dolore et placeat esse aut.'
                      length:
                        type: integer
                        example: 730
                      turns:
                        type: integer
                        example: 54
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 24
                          name:
                            type: string
                            example: Калужская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: whboscyunnvwtonnnbijuxhccdfhwtsnunayogocbfmjstucrvnjmfsibiubxrqiwhncyeduhwhzdxvyidktoxpey
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 11
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 14
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 9
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 72
                    name: Продюсер
                    address: '897025, Курганская область, город Домодедово, пл. Бухарестская, 91'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Accusantium qui amet et officia rerum quaerat. Velit autem qui quaerat qui quos laudantium ea voluptas. Quisquam vitae molestiae error libero inventore. Ab perspiciatis corporis natus expedita omnis. Suscipit inventore tempore voluptatem ad et. Itaque cupiditate fugit veniam eum dolore. Quam in atque quisquam et tempora illum. Minus quia provident sed animi dolore repudiandae fugit. Laudantium inventore numquam necessitatibus placeat velit aut.'
                    length: 117
                    turns: 14
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 49
                      name: Омская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 72
                      name:
                        type: string
                        example: Продюсер
                      address:
                        type: string
                        example: '897025, Курганская область, город Домодедово, пл. Бухарестская, 91'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Accusantium qui amet et officia rerum quaerat. Velit autem qui quaerat qui quos laudantium ea voluptas. Quisquam vitae molestiae error libero inventore. Ab perspiciatis corporis natus expedita omnis. Suscipit inventore tempore voluptatem ad et. Itaque cupiditate fugit veniam eum dolore. Quam in atque quisquam et tempora illum. Minus quia provident sed animi dolore repudiandae fugit. Laudantium inventore numquam necessitatibus placeat velit aut.'
                      length:
                        type: integer
                        example: 117
                      turns:
                        type: integer
                        example: 14
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 49
                          name:
                            type: string
                            example: Омская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно изменён'
                  track:
                    id: 74
                    name: Электромонтёр
                    address: '310345, Амурская область, город Балашиха, спуск Космонавтов, 80'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Corrupti et doloremque accusamus numquam ut aperiam qui. Vel officiis reprehenderit id incidunt omnis. Est magnam eius dolorem eligendi nostrum est. Placeat eum saepe eius nihil minima totam ea. Sint aperiam rerum incidunt possimus sit. Qui ipsa voluptatibus maiores aut sed molestiae molestiae corrupti. Dolorem molestiae in recusandae sunt voluptates.'
                    length: 972
                    turns: 98
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 51
                      name: Орловская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно изменён'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 74
                      name:
                        type: string
                        example: Электромонтёр
                      address:
                        type: string
                        example: '310345, Амурская область, город Балашиха, спуск Космонавтов, 80'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Corrupti et doloremque accusamus numquam ut aperiam qui. Vel officiis reprehenderit id incidunt omnis. Est magnam eius dolorem eligendi nostrum est. Placeat eum saepe eius nihil minima totam ea. Sint aperiam rerum incidunt possimus sit. Qui ipsa voluptatibus maiores aut sed molestiae molestiae corrupti. Dolorem molestiae in recusandae sunt voluptates.'
                      length:
                        type: integer
                        example: 972
                      turns:
                        type: integer
                        example: 98
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 51
                          name:
                            type: string
                            example: Орловская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: taokytvydcxbdpjjcwpvhoczchzsxmvmdotmhndpnyyfmcfvptcqkupdyugwcthcdvjtybyqwtpyhg
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: itaque
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - debitis
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 14
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 13
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 8
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 24
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 584
                    name: 'Крюкова Ульяна Алексеевна'
                    email: fadeeva.avgust@example.org
                    email_verified_at: '2025-03-17T07:24:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 584
                      name:
                        type: string
                        example: 'Крюкова Ульяна Алексеевна'
                      email:
                        type: string
                        example: fadeeva.avgust@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:24:10.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь получен успешно.'
                  user:
                    id: 585
                    name: 'Федосья Александровна Муравьёва'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 585
                      name:
                        type: string
                        example: 'Федосья Александровна Муравьёва'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 14
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  user:
                    id: 586
                    name: 'Инна Евгеньевна Лаврентьева'
                    email: german.rybov@example.net
                    email_verified_at: '2025-03-17T07:24:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 586
                      name:
                        type: string
                        example: 'Инна Евгеньевна Лаврентьева'
                      email:
                        type: string
                        example: german.rybov@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T07:24:10.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: osqaptetraofaykvkrmju
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: melany65@example.org
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: xhwmm
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 587
                      name: 'Полякова Дарья Александровна'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 588
                      name: 'Потапова Александра Алексеевна'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: soluta
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 18
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Код для подтверждения электронной почты отправлена на вашу почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Код для подтверждения электронной почты отправлена на вашу почту.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Почта уже подтверждена'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Почта уже подтверждена'
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ваша почта успешно подтверждена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ваша почта успешно подтверждена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Почта уже подтверждена'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Почта уже подтверждена'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Код не подходит'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Код не подходит'
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 22
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
