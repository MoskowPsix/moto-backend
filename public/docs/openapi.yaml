openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 33
                      name: 'Лазарева Федосья Ивановна'
                      email: kalinin.platon@example.com
                      email_verified_at: '2025-01-26T11:50:50.000000Z'
                      avatar: null
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 34
                      name: 'Меркушева Владлена Ивановна'
                      email: danila.zykova@example.com
                      email_verified_at: '2025-01-26T11:50:50.000000Z'
                      avatar: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 4
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователи получены успешно.'
                  users: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователи получены успешно.'
                  users:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 30|QclQk6tOqSrRfQeUXIzqh9JRC7bjKboCif3K3m9F60b8bc85
                  token_type: Bearer
                  user:
                    id: 28
                    name: 'Виноградова Алёна Максимовна'
                    email: nikiforova.mark@example.net
                    email_verified_at: '2025-01-26T11:50:49.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 30|QclQk6tOqSrRfQeUXIzqh9JRC7bjKboCif3K3m9F60b8bc85
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 28
                      name:
                        type: string
                        example: 'Виноградова Алёна Максимовна'
                      email:
                        type: string
                        example: nikiforova.mark@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-26T11:50:49.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: tkautzer@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: bd`IE.\@D
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 31|BkhnLJkuIRDeyn9puQZ4JtaHOmNhx1gnCKISPNur19671d3f
                  token_type: Bearer
                  user:
                    id: 29
                    name: 'Баранова Елена Евгеньевна'
                    email: robert.pakomova@example.com
                    email_verified_at: '2025-01-26T11:50:49.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 31|BkhnLJkuIRDeyn9puQZ4JtaHOmNhx1gnCKISPNur19671d3f
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: 'Баранова Елена Евгеньевна'
                      email:
                        type: string
                        example: robert.pakomova@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-26T11:50:49.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: bvroenlubcbbdbiczjnweoesv
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: madonna97@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'r(:b&E4ea-}#'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: vitae
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 6
                    name: file_6794e9d44d9fb
                    type: polis
                    path: no-file
                    data:
                      polisNumber: '1231231231'
                      issuedWhom: 'Лордом Старокм'
                      itWorksDate: 12.08.2028
                      polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: file_6794e9d44d9fb
                      type:
                        type: string
                        example: polis
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          polisNumber:
                            type: string
                            example: '1231231231'
                          issuedWhom:
                            type: string
                            example: 'Лордом Старокм'
                          itWorksDate:
                            type: string
                            example: 12.08.2028
                          polisFileLink:
                            type: string
                            example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: odio
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 6
                      name: file_6794e9d44d9fb
                      type: polis
                      path: no-file
                      data:
                        polisNumber: '1231231231'
                        issuedWhom: 'Лордом Старокм'
                        itWorksDate: 12.08.2028
                        polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 6
                      name: file_6794e9d44d9fb
                      type: polis
                      path: no-file
                      data:
                        polisNumber: '1231231231'
                        issuedWhom: 'Лордом Старокм'
                        itWorksDate: 12.08.2028
                        polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 6
                    name: file_6794e9d44d9fb
                    type: polis
                    path: no-file
                    data:
                      polisNumber: '1231231231'
                      issuedWhom: 'Лордом Старокм'
                      itWorksDate: 12.08.2028
                      polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: file_6794e9d44d9fb
                      type:
                        type: string
                        example: polis
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          polisNumber:
                            type: string
                            example: '1231231231'
                          issuedWhom:
                            type: string
                            example: 'Лордом Старокм'
                          itWorksDate:
                            type: string
                            example: 12.08.2028
                          polisFileLink:
                            type: string
                            example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 6
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 6
                  name: file_6794e9d44d9fb
                  type: polis
                  path: no-file
                  data:
                    polisNumber: '1231231231'
                    issuedWhom: 'Лордом Старокм'
                    itWorksDate: 12.08.2028
                    polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  user_id: 3
                  created_at: '2025-01-25T13:40:36.000000Z'
                  updated_at: '2025-01-25T13:40:36.000000Z'
                properties:
                  id:
                    type: integer
                    example: 6
                  name:
                    type: string
                    example: file_6794e9d44d9fb
                  type:
                    type: string
                    example: polis
                  path:
                    type: string
                    example: no-file
                  data:
                    type: object
                    properties:
                      polisNumber:
                        type: string
                        example: '1231231231'
                      issuedWhom:
                        type: string
                        example: 'Лордом Старокм'
                      itWorksDate:
                        type: string
                        example: 12.08.2028
                      polisFileLink:
                        type: string
                        example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  user_id:
                    type: integer
                    example: 3
                  created_at:
                    type: string
                    example: '2025-01-25T13:40:36.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-25T13:40:36.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 6
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Prof.
                    surname: Dr.
                    patronymic: Prof.
                    date_of_birth: '1970-01-28'
                    city: Красногорск
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(495) 081-8152'
                    start_number: '306'
                    group: 'Научный сотрудник'
                    rank_number: '99999'
                    rank: 'Системный аналитик'
                    community: 'ОАО ФинансЭлектроРадиоТраст'
                    coach: 'Инна Александровна Федотова'
                    moto_stamp: Prof.
                    engine: Miss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '1970-01-28'
                      city:
                        type: string
                        example: Красногорск
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(495) 081-8152'
                      start_number:
                        type: string
                        example: '306'
                      group:
                        type: string
                        example: 'Научный сотрудник'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Системный аналитик'
                      community:
                        type: string
                        example: 'ОАО ФинансЭлектроРадиоТраст'
                      coach:
                        type: string
                        example: 'Инна Александровна Федотова'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Miss
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: quasi
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-26T11:50:50'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: amet
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Dr.
                    surname: Dr.
                    patronymic: Miss
                    date_of_birth: '1977-08-25'
                    city: Лотошино
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: 8-800-441-5675
                    start_number: '986'
                    group: Критик
                    rank_number: '99999'
                    rank: Фрезеровщик
                    community: 'МКК КрепТверь'
                    coach: 'Геннадий Евгеньевич Корнилов'
                    moto_stamp: Prof.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '1977-08-25'
                      city:
                        type: string
                        example: Лотошино
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: 8-800-441-5675
                      start_number:
                        type: string
                        example: '986'
                      group:
                        type: string
                        example: Критик
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Фрезеровщик
                      community:
                        type: string
                        example: 'МКК КрепТверь'
                      coach:
                        type: string
                        example: 'Геннадий Евгеньевич Корнилов'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Dr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-26T11:50:50'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: provident
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: debitis
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: officiis
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 31
                      name: 'Медведев Бронислав Фёдорович'
                      desc: 'At perspiciatis rerum odio deserunt vero esse minima est. Laboriosam dolor est ratione aperiam qui. Dolore et voluptas facere adipisci nihil quas amet nisi.'
                      is_work: true
                      date_start: '2025-01-26T11:50:49.000000Z'
                      images: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 32
                      name: 'Журавлёв Ананий Борисович'
                      desc: 'Inventore autem consequuntur omnis omnis quia. Accusantium sit sit qui et quod. Aut sit excepturi cum consequuntur dicta facere magnam. Quam libero tempora ut enim possimus nesciunt mollitia.'
                      is_work: false
                      date_start: '2025-01-26T11:50:49.000000Z'
                      images: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 13
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 6
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 34
                    name: 'Блинова Ирина Фёдоровна'
                    desc: 'Est nulla ab eveniet numquam omnis. Distinctio adipisci deserunt ducimus nisi quia quae officiis. Et deserunt recusandae repellendus porro mollitia eveniet id est.'
                    is_work: false
                    date_start: '2025-01-26T11:50:50.000000Z'
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 34
                      name:
                        type: string
                        example: 'Блинова Ирина Фёдоровна'
                      desc:
                        type: string
                        example: 'Est nulla ab eveniet numquam omnis. Distinctio adipisci deserunt ducimus nisi quia quae officiis. Et deserunt recusandae repellendus porro mollitia eveniet id est.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-01-26T11:50:50.000000Z'
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: warsjexmvmsej
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-26T11:50:50'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 33
                    name: 'Моисеев Лаврентий Иванович'
                    desc: 'Corrupti non alias qui architecto. Consequatur dolor commodi quo facilis deserunt dolorum. Voluptas officia numquam rerum ut ex et et. Ad architecto corporis laudantium aliquam.'
                    is_work: true
                    date_start: '2025-01-26T11:50:50.000000Z'
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 33
                      name:
                        type: string
                        example: 'Моисеев Лаврентий Иванович'
                      desc:
                        type: string
                        example: 'Corrupti non alias qui architecto. Consequatur dolor commodi quo facilis deserunt dolorum. Voluptas officia numquam rerum ut ex et et. Ad architecto corporis laudantium aliquam.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-26T11:50:50.000000Z'
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 32
                    name: 'Носков Ярослав Андреевич'
                    email: hlukina@example.org
                    email_verified_at: '2025-01-26T11:50:49.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 32
                      name:
                        type: string
                        example: 'Носков Ярослав Андреевич'
                      email:
                        type: string
                        example: hlukina@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-26T11:50:49.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 13
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 37
                      name: Пианист
                      address: '693950, Архангельская область, город Ступино, спуск Ломоносова, 83'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Doloribus aut itaque quod culpa. Minus aliquid amet quo qui dolorem blanditiis et. Molestias voluptatem repudiandae alias et atque voluptates laudantium sit. Quam ratione illo cupiditate. Animi accusantium rerum repudiandae explicabo. Enim occaecati quo nobis molestiae quisquam. Expedita ipsam sed sunt natus. Ea voluptatem qui quis non. Ut deserunt et ipsum aperiam hic dolorem. Dolorem ea voluptatem laboriosam consequatur.'
                      length: 63
                      turns: 43
                      free: false
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 38
                      name: Детектив
                      address: '730643, Смоленская область, город Чехов, пр. Гоголя, 88'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Et minima ut quisquam aut culpa et aut. Ut perferendis corrupti a sed hic in iste. Ex quod voluptatibus repellendus ab sed nam voluptatem. Enim rem eius harum error consectetur explicabo id. Provident dolorum voluptas sed voluptate alias. Aut quo accusamus optio aliquid voluptatibus iste ut. Et debitis aliquam ipsam repellendus dolorum.'
                      length: 747
                      turns: 15
                      free: true
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 17
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 40
                    name: Менеджер
                    address: '291696, Владимирская область, город Серпухов, ул. Ломоносова, 85'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Ipsam minus voluptatibus rerum voluptates deleniti. Id consequuntur aliquam iste facilis. Eos neque distinctio veniam pariatur minima est. Id alias omnis recusandae repudiandae labore fugit qui. Aut magnam nostrum perferendis. Labore dignissimos qui sed ducimus fugiat assumenda impedit. Harum nobis ad error sint sint nesciunt velit. Facilis voluptate minima quam vero laudantium sit veritatis odit.'
                    length: 657
                    turns: 22
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 40
                      name:
                        type: string
                        example: Менеджер
                      address:
                        type: string
                        example: '291696, Владимирская область, город Серпухов, ул. Ломоносова, 85'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Ipsam minus voluptatibus rerum voluptates deleniti. Id consequuntur aliquam iste facilis. Eos neque distinctio veniam pariatur minima est. Id alias omnis recusandae repudiandae labore fugit qui. Aut magnam nostrum perferendis. Labore dignissimos qui sed ducimus fugiat assumenda impedit. Harum nobis ad error sint sint nesciunt velit. Facilis voluptate minima quam vero laudantium sit veritatis odit.'
                      length:
                        type: integer
                        example: 657
                      turns:
                        type: integer
                        example: 22
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: vzatdizjvtpdafrxgyooerlzyxiimutwvtenwzylzdciuplkzsgmohyxvtjhhtpaygljyynzqcfggjtk
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 14
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["harum","veritatis"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 39
                    name: Пианист
                    address: '372655, Костромская область, город Балашиха, въезд Косиора, 30'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Et et repudiandae voluptates exercitationem quia et culpa maiores. Minima omnis reiciendis voluptatibus delectus vel. Aut enim aspernatur soluta temporibus. Nam adipisci esse expedita consequatur sunt. Quod minima ut soluta aspernatur veniam. Consequatur cumque voluptates ipsa ut harum minus dolorum. Quae nesciunt doloribus iusto ea sequi eveniet est dolores. Facere adipisci doloribus eum voluptatem rerum facilis.'
                    length: 329
                    turns: 49
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 39
                      name:
                        type: string
                        example: Пианист
                      address:
                        type: string
                        example: '372655, Костромская область, город Балашиха, въезд Косиора, 30'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Et et repudiandae voluptates exercitationem quia et culpa maiores. Minima omnis reiciendis voluptatibus delectus vel. Aut enim aspernatur soluta temporibus. Nam adipisci esse expedita consequatur sunt. Quod minima ut soluta aspernatur veniam. Consequatur cumque voluptates ipsa ut harum minus dolorum. Quae nesciunt doloribus iusto ea sequi eveniet est dolores. Facere adipisci doloribus eum voluptatem rerum facilis.'
                      length:
                        type: integer
                        example: 329
                      turns:
                        type: integer
                        example: 49
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 36
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 31
                    name: 'Громов Валерий Владимирович'
                    email: polina04@example.org
                    email_verified_at: '2025-01-26T11:50:49.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 31
                      name:
                        type: string
                        example: 'Громов Валерий Владимирович'
                      email:
                        type: string
                        example: polina04@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-26T11:50:49.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
