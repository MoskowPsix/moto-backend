openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: messages.appointment_race.create.success
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: messages.appointment_race.create.success
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: messages.appointment_race.delete.success
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: messages.appointment_race.delete.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 9
                      name: 'Ezequiel Simonis'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 10
                      name: 'Yadira Sipes'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 3
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 2|pGUbN9omlkYG16IH5hv4OiZW7j6cWOfSlx1Q7B2A493ff66b
                  token_type: Bearer
                  user:
                    id: 2
                    name: 'Dameon Ledner'
                    email: hamill.alvah@example.com
                    email_verified_at: '2025-02-13T11:11:25.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 2|pGUbN9omlkYG16IH5hv4OiZW7j6cWOfSlx1Q7B2A493ff66b
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Dameon Ledner'
                      email:
                        type: string
                        example: hamill.alvah@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-13T11:11:25.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table. Must be at least 3 characters.'
                  example: roberts.hardy@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: 'Q''6\T(BL'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 3|oc6sFGX1RttssGrVPX0XgK4EtqortmCMfoeCLHrSbb5df4f1
                  token_type: Bearer
                  user:
                    id: 3
                    name: 'Haleigh Barton'
                    email: maryse.yost@example.org
                    email_verified_at: '2025-02-13T11:11:27.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 3|oc6sFGX1RttssGrVPX0XgK4EtqortmCMfoeCLHrSbb5df4f1
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Haleigh Barton'
                      email:
                        type: string
                        example: maryse.yost@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-13T11:11:27.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: gks
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gdamore@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'Wc2XiLfZS#.J>'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: porro
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
              required:
                - type
                - file
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 12
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 18
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: null
                      name: null
                      description: null
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: null
                      name: null
                      description: null
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 13
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 11
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: null
                    name: null
                    description: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      description:
                        type: string
                        example: null
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: phqh
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Maxime quidem recusandae quis eos ex.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: null
                    name: null
                    description: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      description:
                        type: string
                        example: null
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 3
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: null
                    name: null
                    description: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      description:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: aftmgcxzpflotooi
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Iure voluptatum recusandae natus minus.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Miss
                    date_of_birth: '1973-10-21'
                    city: 'South Cordelia'
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: 475.994.1078
                    start_number: '594'
                    group: 'Fishing OR Forestry Supervisor'
                    rank_number: '100000'
                    rank: 'HVAC Mechanic'
                    community: 'Hudson, Leffler and Frami'
                    coach: 'Sofia Bode'
                    moto_stamp: Ms.
                    engine: Dr.
                    number_and_seria: '10000000000'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '1973-10-21'
                      city:
                        type: string
                        example: 'South Cordelia'
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: 475.994.1078
                      start_number:
                        type: string
                        example: '594'
                      group:
                        type: string
                        example: 'Fishing OR Forestry Supervisor'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'HVAC Mechanic'
                      community:
                        type: string
                        example: 'Hudson, Leffler and Frami'
                      coach:
                        type: string
                        example: 'Sofia Bode'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-13T11:11:31'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: officiis
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: quos
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: labore
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: officia
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                numberAndSeria:
                  type: integer
                  description: ''
                  example: 13
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Mr.
                    surname: Prof.
                    patronymic: Miss
                    date_of_birth: '2024-05-25'
                    city: Aylaview
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: 1-269-766-7991
                    start_number: '517'
                    group: 'Compacting Machine Operator'
                    rank_number: '99999'
                    rank: 'Hotel Desk Clerk'
                    community: Nicolas-Ernser
                    coach: 'Aidan Cummerata Sr.'
                    moto_stamp: Mrs.
                    engine: Prof.
                    number_and_seria: '10000000000'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '2024-05-25'
                      city:
                        type: string
                        example: Aylaview
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: 1-269-766-7991
                      start_number:
                        type: string
                        example: '517'
                      group:
                        type: string
                        example: 'Compacting Machine Operator'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Hotel Desk Clerk'
                      community:
                        type: string
                        example: Nicolas-Ernser
                      coach:
                        type: string
                        example: 'Aidan Cummerata Sr.'
                      moto_stamp:
                        type: string
                        example: Mrs.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '10000000000'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-13T11:11:31'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: ab
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: porro
                  nullable: true
                numberAndSeria:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 11
                      name: 'Garrison Mosciski'
                      desc: 'Tenetur pariatur unde aut eum corrupti necessitatibus quas. Repudiandae et quia totam. Provident sit aperiam repellat.'
                      is_work: true
                      date_start: '2025-02-13T16:43:59.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 12
                      name: 'Miss Rosemarie Denesik Jr.'
                      desc: 'Corporis nisi commodi voluptatum eveniet reiciendis. Non rerum quis quisquam enim iusto ex minus voluptatem. Nisi repellendus quam cum laboriosam rerum. Aut nobis nobis consectetur nihil.'
                      is_work: true
                      date_start: '2025-02-13T08:30:02.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 25
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 16
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 14
                    name: 'Prof. Mckenna Orn'
                    desc: 'Eaque repellat repellat modi eos doloremque ut. Consectetur possimus maxime saepe aperiam temporibus itaque accusantium illo.'
                    is_work: true
                    date_start: '2025-02-13T09:17:05.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: 'Prof. Mckenna Orn'
                      desc:
                        type: string
                        example: 'Eaque repellat repellat modi eos doloremque ut. Consectetur possimus maxime saepe aperiam temporibus itaque accusantium illo.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-13T09:17:05.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: srcluihchdbxltvgqueshzajfrxttmkpemlzsjuankjkqujwpjylbeggizswjdngvhakj
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-13T11:11:30'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 14
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 13
                    name: 'Ms. Palma Gibson III'
                    desc: 'Deleniti quo aut perferendis quo soluta voluptates doloribus officiis. Adipisci in esse repudiandae non sed et. Excepturi fugiat occaecati vel commodi dolores.'
                    is_work: false
                    date_start: '2025-02-13T14:14:53.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: 'Ms. Palma Gibson III'
                      desc:
                        type: string
                        example: 'Deleniti quo aut perferendis quo soluta voluptates doloribus officiis. Adipisci in esse repudiandae non sed et. Excepturi fugiat occaecati vel commodi dolores.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-02-13T14:14:53.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 15
                    name: 'Caterina Price I'
                    desc: 'Dolorem et ut sed aperiam. Soluta fuga natus porro consequuntur. Optio eaque harum ipsum. Voluptatibus eligendi numquam nisi magni.'
                    is_work: false
                    date_start: '2025-02-13T04:19:05.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Caterina Price I'
                      desc:
                        type: string
                        example: 'Dolorem et ut sed aperiam. Soluta fuga natus porro consequuntur. Optio eaque harum ipsum. Voluptatibus eligendi numquam nisi magni.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-02-13T04:19:05.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: tqjcwbcpriomcsrvgjajjtwwcuxktdvylduyjuvdtkgwofhmpwqa
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-13T11:11:30'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 4
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - voluptas
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 16
                    name: 'Osvaldo Klein'
                    desc: 'Quasi velit praesentium odio repellat velit soluta saepe quia. Aliquam sed repellendus numquam molestiae fugiat recusandae temporibus.'
                    is_work: true
                    date_start: '2025-02-13T07:29:33.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Osvaldo Klein'
                      desc:
                        type: string
                        example: 'Quasi velit praesentium odio repellat velit soluta saepe quia. Aliquam sed repellendus numquam molestiae fugiat recusandae temporibus.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-13T07:29:33.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 8
                    name: 'Nicholas Wolf'
                    email: gia.nitzsche@example.com
                    email_verified_at: '2025-02-13T11:11:29.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 8
                      name:
                        type: string
                        example: 'Nicholas Wolf'
                      email:
                        type: string
                        example: gia.nitzsche@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-13T11:11:29.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 1
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 21
                      name: 'Waste Treatment Plant Operator'
                      address: "26484 Ritchie Alley Suite 430\nWest Karli, NJ 46850-0788"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Dolore aut quo quidem quia iusto quia. Beatae velit numquam aspernatur voluptatem corrupti. Qui quas voluptates sequi quas doloremque blanditiis voluptatibus. Deserunt quo deserunt accusamus quam eos ut veritatis. Aut impedit explicabo magnam sed. Sunt consectetur doloremque est similique. Enim laboriosam eum hic facere. Adipisci quasi accusantium ut earum voluptas sunt culpa laboriosam. Quia aliquid sequi consequatur sit beatae animi beatae. Neque labore accusantium recusandae totam.'
                      length: 581
                      turns: 30
                      free: true
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 22
                      name: 'Makeup Artists'
                      address: "362 Effertz Greens Apt. 872\nBreanneville, IL 36254"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Error autem earum tempora et qui voluptatum modi. Ipsum reiciendis aut velit fuga impedit id consequatur. Sint ullam quis nihil odit ea ipsam. Dolorum qui eius illum quis sed et qui deserunt. Ut sint voluptatem provident esse repellendus.'
                      length: 344
                      turns: 38
                      free: true
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 14
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: neque
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 7
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 24
                    name: 'Typesetting Machine Operator'
                    address: "980 Howe Loop\nEast Luciennemouth, TN 68623-0640"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Sapiente reprehenderit id laborum unde repellat provident nisi. Sed et iure est qui beatae. Est maxime deleniti debitis quia perspiciatis tempora soluta. Et ut voluptatum velit cumque. Sit eum sunt aut enim. Consequatur doloremque voluptate quibusdam. Dicta et sit tenetur ut reiciendis hic molestiae. Numquam ut ab ipsam et sint dolores et in. Odio similique quas facere quasi reprehenderit ex. Sed nam voluptas quia sed sunt ut. Consectetur accusamus a quis qui autem.'
                    length: 664
                    turns: 20
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 24
                      name:
                        type: string
                        example: 'Typesetting Machine Operator'
                      address:
                        type: string
                        example: "980 Howe Loop\nEast Luciennemouth, TN 68623-0640"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Sapiente reprehenderit id laborum unde repellat provident nisi. Sed et iure est qui beatae. Est maxime deleniti debitis quia perspiciatis tempora soluta. Et ut voluptatum velit cumque. Sit eum sunt aut enim. Consequatur doloremque voluptate quibusdam. Dicta et sit tenetur ut reiciendis hic molestiae. Numquam ut ab ipsam et sint dolores et in. Odio similique quas facere quasi reprehenderit ex. Sed nam voluptas quia sed sunt ut. Consectetur accusamus a quis qui autem.'
                      length:
                        type: integer
                        example: 664
                      turns:
                        type: integer
                        example: 20
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: nwcunwgshuypghdfpyvavpkyvsmchfjugdybhyjsivfjlkfxskijxlhyqrbpppwarsejlwsj
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: ea
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 14
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["sit","blanditiis"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["aliquid","et"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 23
                    name: Dispatcher
                    address: "389 Milo Flat Apt. 186\nNew Dawnburgh, OH 69632-2144"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Laborum ullam ullam necessitatibus harum commodi. Consequatur placeat omnis aut qui recusandae dignissimos aut sunt. Saepe pariatur saepe voluptatem est quia omnis. Voluptas itaque recusandae aut libero facilis quo. Vel at quo eum facere at. Odit rerum voluptatem et pariatur reiciendis magnam pariatur qui. Qui voluptas corporis mollitia suscipit eveniet. Eos est magnam repudiandae placeat et ea magnam. Harum inventore dolores fuga.'
                    length: 447
                    turns: 6
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 23
                      name:
                        type: string
                        example: Dispatcher
                      address:
                        type: string
                        example: "389 Milo Flat Apt. 186\nNew Dawnburgh, OH 69632-2144"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Laborum ullam ullam necessitatibus harum commodi. Consequatur placeat omnis aut qui recusandae dignissimos aut sunt. Saepe pariatur saepe voluptatem est quia omnis. Voluptas itaque recusandae aut libero facilis quo. Vel at quo eum facere at. Odit rerum voluptatem et pariatur reiciendis magnam pariatur qui. Qui voluptas corporis mollitia suscipit eveniet. Eos est magnam repudiandae placeat et ea magnam. Harum inventore dolores fuga.'
                      length:
                        type: integer
                        example: 447
                      turns:
                        type: integer
                        example: 6
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 5
                    name: 'Edmond Champlin'
                    email: dixie.larkin@example.net
                    email_verified_at: '2025-02-13T11:11:27.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: 'Edmond Champlin'
                      email:
                        type: string
                        example: dixie.larkin@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-13T11:11:27.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 6
                    name: 'Ashtyn Koch'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: 'Ashtyn Koch'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 7
                    name: 'Stephanie Barton'
                    email: ggoyette@example.org
                    email_verified_at: '2025-02-13T11:11:28.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 7
                      name:
                        type: string
                        example: 'Stephanie Barton'
                      email:
                        type: string
                        example: ggoyette@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-13T11:11:28.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: cwpsqyjv
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: umedhurst@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 8
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
