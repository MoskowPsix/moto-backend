openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 16|14NLQadpSp7ZTsjKkhTcSXh8fmGlv9mkJiCkfJmKab50163a
                  token_type: Bearer
                  user:
                    id: 32
                    name: 'Григорьев Иосиф Александрович'
                    email: ruslan18@example.net
                    email_verified_at: '2025-01-23T08:39:04.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 16|14NLQadpSp7ZTsjKkhTcSXh8fmGlv9mkJiCkfJmKab50163a
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 32
                      name:
                        type: string
                        example: 'Григорьев Иосиф Александрович'
                      email:
                        type: string
                        example: ruslan18@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-23T08:39:04.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: bruen.fritz@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'uw&mq/%%~M{CSd^42k)'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 17|0asnuIVT1kVUhCcqRoamStqKALHImPps9E0LXPP10fc18c37
                  token_type: Bearer
                  user:
                    id: 33
                    name: 'Агафонова Изабелла Сергеевна'
                    email: gblokin@example.com
                    email_verified_at: '2025-01-23T08:39:05.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 17|0asnuIVT1kVUhCcqRoamStqKALHImPps9E0LXPP10fc18c37
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 33
                      name:
                        type: string
                        example: 'Агафонова Изабелла Сергеевна'
                      email:
                        type: string
                        example: gblokin@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-23T08:39:05.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: ylxytfxdrduiln
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: mitchell32@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'WunQy6cJf0p1g8}|VQ'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: voluptatem
                  nullable: false
                avatar:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: false
                data:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["nisi","itaque"]'
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.permission
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.permission
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: file_678f974ca37ac
                  type: фото
                  path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                  data: '{"kkk": "ssss"}'
                  user_id: 13
                  created_at: '2025-01-21T12:47:08.000000Z'
                  updated_at: '2025-01-21T12:47:08.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: file_678f974ca37ac
                  type:
                    type: string
                    example: фото
                  path:
                    type: string
                    example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                  data:
                    type: string
                    example: '{"kkk": "ssss"}'
                  user_id:
                    type: integer
                    example: 13
                  created_at:
                    type: string
                    example: '2025-01-21T12:47:08.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-21T12:47:08.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.permission
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.permission
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["sapiente","magnam"]'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: null
                    city: Москва
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '(495) 363-6988'
                    start_number: '430'
                    group: Ковбой
                    rank_number: '99999'
                    rank: Арт-директор
                    community: 'МКК Гараж'
                    coach: 'Флорентина Борисовна Голубева'
                    moto_stamp: Dr.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Москва
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(495) 363-6988'
                      start_number:
                        type: string
                        example: '430'
                      group:
                        type: string
                        example: Ковбой
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Арт-директор
                      community:
                        type: string
                        example: 'МКК Гараж'
                      coach:
                        type: string
                        example: 'Флорентина Борисовна Голубева'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Dr.
      tags:
        - PersonalInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: false
                surname:
                  type: string
                  description: ''
                  example: minima
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-23T08:39:05'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: a
                  nullable: false
                inn:
                  type: integer
                  description: ''
                  example: 6
                  nullable: false
                snils:
                  type: integer
                  description: ''
                  example: 10
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: libero
                  nullable: false
                startNumber:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: nemo
                  nullable: false
                community:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: rem
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                engine:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
              required:
                - name
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - rankNumber
                - motoStamp
                - engine
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Mrs.
                    date_of_birth: null
                    city: Клин
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(495) 905-2562'
                    start_number: '402'
                    group: Машинист
                    rank_number: '100000'
                    rank: 'Технический писатель'
                    community: 'ОАО ТверьПивГаз'
                    coach: 'Милан Сергеевич Якушев'
                    moto_stamp: Dr.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Клин
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(495) 905-2562'
                      start_number:
                        type: string
                        example: '402'
                      group:
                        type: string
                        example: Машинист
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Технический писатель'
                      community:
                        type: string
                        example: 'ОАО ТверьПивГаз'
                      coach:
                        type: string
                        example: 'Милан Сергеевич Якушев'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Dr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.permission
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.permission
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: debitis
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: ipsam
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-23T08:39:05'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: facilis
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 31
                      name: 'Комиссаров Аким Андреевич'
                      desc: 'Reprehenderit eos pariatur doloremque nihil odit velit. Sit voluptas porro dignissimos corrupti sunt nam. Dolor velit eaque repellat facilis. Consequuntur sint ex consequatur possimus.'
                      is_work: true
                      date_start: null
                      images: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 32
                      name: 'Полина Львовна Пахомова'
                      desc: 'Adipisci officiis minima non. Omnis vel vel rem dolores. Consequatur sit dolorem nulla minus similique illum quidem. Veritatis sed ea ratione qui minus qui nulla.'
                      is_work: false
                      date_start: null
                      images: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 22
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 34
                    name: 'Галина Дмитриевна Виноградова'
                    desc: 'Sed illo minima qui aut voluptatem iste. Libero amet maiores tempore praesentium ipsa. Sit aut ullam voluptates quisquam debitis et facere sed. Commodi sint optio quaerat.'
                    is_work: true
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 34
                      name:
                        type: string
                        example: 'Галина Дмитриевна Виноградова'
                      desc:
                        type: string
                        example: 'Sed illo minima qui aut voluptatem iste. Libero amet maiores tempore praesentium ipsa. Sit aut ullam voluptates quisquam debitis et facere sed. Commodi sint optio quaerat.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: xgkncmgmzmkempklpjkpmmcgannynhqqwrjkwmdvbrunkldbogffddvzjxzmlzzntn
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: ipsam
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-23T08:39:05'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 16
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 33
                    name: 'Денис Алексеевич Гордеев'
                    desc: 'Eum ut laudantium possimus quisquam amet qui non. Sit quis nulla eveniet qui. Aut dolorum asperiores est omnis. Voluptatem aliquid laudantium ut eligendi.'
                    is_work: false
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 33
                      name:
                        type: string
                        example: 'Денис Алексеевич Гордеев'
                      desc:
                        type: string
                        example: 'Eum ut laudantium possimus quisquam amet qui non. Sit quis nulla eveniet qui. Aut dolorum asperiores est omnis. Voluptatem aliquid laudantium ut eligendi.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 36
                    name: 'Флорентина Алексеевна Маслова'
                    email: feliks.lukina@example.org
                    email_verified_at: '2025-01-23T08:39:05.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 36
                      name:
                        type: string
                        example: 'Флорентина Алексеевна Маслова'
                      email:
                        type: string
                        example: feliks.lukina@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-23T08:39:05.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 3
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 31
                      name: Садовник
                      address: '996941, Амурская область, город Пушкино, спуск Косиора, 98'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Facere consequuntur dolor et vel est. Nostrum perferendis rerum temporibus voluptatem voluptatem consequuntur est. Tenetur odit quo est et repellat debitis libero earum. Quo ea porro vitae voluptate sequi. Rerum cumque consequatur doloribus voluptatem aliquam vitae. Nisi nulla nulla ipsum consequatur. Quisquam similique aperiam sed officia. Dicta eligendi illo natus est cum similique vitae aliquid.'
                      length: 619
                      turns: 73
                      free: false
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 32
                      name: 'Системный аналитик'
                      address: '606809, Курская область, город Озёры, въезд Ладыгина, 83'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Vitae magnam omnis iste quia ut possimus. Quo recusandae rerum perferendis dolorem veniam sint pariatur. Rem distinctio animi amet ut quia. Et magni et quibusdam tempora ut totam. Fugiat dolorem qui beatae aut. Sint sed itaque et ut ad enim. Quisquam ducimus sit ullam eaque ut. Minus et commodi omnis nostrum. Consequuntur laboriosam autem amet. Inventore libero qui nesciunt ipsa.'
                      length: 959
                      turns: 68
                      free: false
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 17
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 34
                    name: Учёный
                    address: '381752, Липецкая область, город Шаховская, пр. Космонавтов, 25'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Sunt accusamus facere autem sunt laboriosam cupiditate. Dolorem in deleniti harum non animi aut excepturi. Magni et non ipsa. Eius nostrum praesentium adipisci eveniet beatae corporis molestias. Rerum corrupti tempora non et quibusdam. Voluptatem perspiciatis doloribus blanditiis asperiores. Rerum aliquam eveniet voluptatibus. Quo debitis odio ea blanditiis.'
                    length: 760
                    turns: 83
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 34
                      name:
                        type: string
                        example: Учёный
                      address:
                        type: string
                        example: '381752, Липецкая область, город Шаховская, пр. Космонавтов, 25'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Sunt accusamus facere autem sunt laboriosam cupiditate. Dolorem in deleniti harum non animi aut excepturi. Magni et non ipsa. Eius nostrum praesentium adipisci eveniet beatae corporis molestias. Rerum corrupti tempora non et quibusdam. Voluptatem perspiciatis doloribus blanditiis asperiores. Rerum aliquam eveniet voluptatibus. Quo debitis odio ea blanditiis.'
                      length:
                        type: integer
                        example: 760
                      turns:
                        type: integer
                        example: 83
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: hlnwcmrjllxrpnvtbnfftjydrmofohqxvdvcktrrcuvuhpqvacqigfqzvwgkt
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: cumque
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 3
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 13
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["dignissimos","at"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 33
                    name: Интеллектуал
                    address: '221088, Свердловская область, город Кашира, пер. Ладыгина, 14'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Atque dicta et sunt. Rerum omnis quasi repudiandae sunt impedit doloremque eius qui. Quidem necessitatibus iure ratione iusto corporis. Nisi et quia magnam deserunt quaerat dolore. Molestias commodi enim porro et dolor sint quaerat. Ad voluptate in commodi autem reiciendis eaque rerum dolores. Laudantium asperiores autem voluptatem ducimus ipsa est. Dolores a aut eum dolorum adipisci voluptates eum. Assumenda at veniam tempora id in voluptatem distinctio.'
                    length: 132
                    turns: 67
                    free: true
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 33
                      name:
                        type: string
                        example: Интеллектуал
                      address:
                        type: string
                        example: '221088, Свердловская область, город Кашира, пер. Ладыгина, 14'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Atque dicta et sunt. Rerum omnis quasi repudiandae sunt impedit doloremque eius qui. Quidem necessitatibus iure ratione iusto corporis. Nisi et quia magnam deserunt quaerat dolore. Molestias commodi enim porro et dolor sint quaerat. Ad voluptate in commodi autem reiciendis eaque rerum dolores. Laudantium asperiores autem voluptatem ducimus ipsa est. Dolores a aut eum dolorum adipisci voluptates eum. Assumenda at veniam tempora id in voluptatem distinctio.'
                      length:
                        type: integer
                        example: 132
                      turns:
                        type: integer
                        example: 67
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 35
                    name: 'Эльвира Борисовна Дорофеева'
                    email: kapitolina53@example.com
                    email_verified_at: '2025-01-23T08:39:05.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 35
                      name:
                        type: string
                        example: 'Эльвира Борисовна Дорофеева'
                      email:
                        type: string
                        example: kapitolina53@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-23T08:39:05.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
