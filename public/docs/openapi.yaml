openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 9
                      name: 'Семён Иванович Устинов'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 10
                      name: 'Некрасов Болеслав Алексеевич'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 5
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 2|Twtt9X3AtLVQS2eOcKRBzzghoOVP1LqWfyD9fUxi9370565f
                  token_type: Bearer
                  user:
                    id: 2
                    name: 'Шилова Лилия Романовна'
                    email: gorskova.gennadii@example.net
                    email_verified_at: '2025-01-31T12:35:22.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 2|Twtt9X3AtLVQS2eOcKRBzzghoOVP1LqWfyD9fUxi9370565f
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Шилова Лилия Романовна'
                      email:
                        type: string
                        example: gorskova.gennadii@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-31T12:35:22.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: queenie.krajcik@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: '"&/T~MV`}!,_m'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 3|OFND38qMrFRBFWzadpnGbIq9ahX5C5wT1yaAGaOV02feae02
                  token_type: Bearer
                  user:
                    id: 3
                    name: 'Алина Алексеевна Пахомова'
                    email: alla59@example.com
                    email_verified_at: '2025-01-31T12:35:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 3|OFND38qMrFRBFWzadpnGbIq9ahX5C5wT1yaAGaOV02feae02
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Алина Алексеевна Пахомова'
                      email:
                        type: string
                        example: alla59@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-31T12:35:23.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: ftiitrbeasgqfhpvzmtfdmf
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: dach.daisha@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '4hD)"$`]*J7j'''
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: dolores
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: sint
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 17
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 19
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Ms.
                    date_of_birth: '1983-01-27'
                    city: Талдом
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '+7 (922) 567-5831'
                    start_number: '231'
                    group: Водитель
                    rank_number: '99999'
                    rank: 'Креативный директор'
                    community: 'МКК Инфо'
                    coach: 'Быкова Злата Дмитриевна'
                    moto_stamp: Miss
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '1983-01-27'
                      city:
                        type: string
                        example: Талдом
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+7 (922) 567-5831'
                      start_number:
                        type: string
                        example: '231'
                      group:
                        type: string
                        example: Водитель
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Креативный директор'
                      community:
                        type: string
                        example: 'МКК Инфо'
                      coach:
                        type: string
                        example: 'Быкова Злата Дмитриевна'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Dr.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-31T12:35:23'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Ms.
                    surname: Dr.
                    patronymic: Mrs.
                    date_of_birth: '1986-05-09'
                    city: Ступино
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '+7 (922) 729-0022'
                    start_number: '524'
                    group: Психолог
                    rank_number: '99999'
                    rank: 'Горный проводник'
                    community: 'ЗАО Алмаз'
                    coach: 'Белозёрова Рада Романовна'
                    moto_stamp: Prof.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ms.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1986-05-09'
                      city:
                        type: string
                        example: Ступино
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '+7 (922) 729-0022'
                      start_number:
                        type: string
                        example: '524'
                      group:
                        type: string
                        example: Психолог
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Горный проводник'
                      community:
                        type: string
                        example: 'ЗАО Алмаз'
                      coach:
                        type: string
                        example: 'Белозёрова Рада Романовна'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Dr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-31T12:35:23'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: neque
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: provident
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: cumque
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: sequi
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: dignissimos
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 12
                      name: 'Родионов Григорий Романович'
                      desc: 'Aliquid ut porro amet neque explicabo enim reiciendis. Aut at non officia soluta eveniet illum. Voluptatem occaecati recusandae aut quasi.'
                      is_work: false
                      date_start: '2025-01-31T12:35:23.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 13
                      name: 'Марта Романовна Кулагина'
                      desc: 'Commodi et fugit rerum deserunt voluptas tempora. Dolorem veritatis libero temporibus incidunt eum. Eius repellendus et nesciunt iure officiis.'
                      is_work: true
                      date_start: '2025-01-31T12:35:23.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 16
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 2
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 15
                    name: 'Рожкова Регина Сергеевна'
                    desc: 'Ut culpa reiciendis eius blanditiis mollitia placeat harum. Voluptas necessitatibus cum dolores dolores corporis iste animi. Sed delectus iusto a sed neque.'
                    is_work: false
                    date_start: '2025-01-31T12:35:23.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Рожкова Регина Сергеевна'
                      desc:
                        type: string
                        example: 'Ut culpa reiciendis eius blanditiis mollitia placeat harum. Voluptas necessitatibus cum dolores dolores corporis iste animi. Sed delectus iusto a sed neque.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-01-31T12:35:23.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: jwhguroudgbogkpzhtjlrzhgw
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-31T12:35:23'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 18
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 14
                    name: 'Кристина Владимировна Евдокимова'
                    desc: 'Eligendi molestiae quibusdam molestias et odit ut. Dolor tempora voluptatem nobis et. Dicta fugiat provident dignissimos non nobis sit velit. Culpa quo explicabo ullam recusandae iste.'
                    is_work: true
                    date_start: '2025-01-31T12:35:23.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: 'Кристина Владимировна Евдокимова'
                      desc:
                        type: string
                        example: 'Eligendi molestiae quibusdam molestias et odit ut. Dolor tempora voluptatem nobis et. Dicta fugiat provident dignissimos non nobis sit velit. Culpa quo explicabo ullam recusandae iste.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-31T12:35:23.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 8
                    name: 'Комарова Ксения Александровна'
                    email: rselezneva@example.com
                    email_verified_at: '2025-01-31T12:35:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 8
                      name:
                        type: string
                        example: 'Комарова Ксения Александровна'
                      email:
                        type: string
                        example: rselezneva@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-31T12:35:23.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 7
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 11
                      name: Бариста
                      address: '915158, Астраханская область, город Серпухов, пл. Гоголя, 27'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Mollitia iste saepe earum corporis. Sit et et exercitationem. Amet eos culpa facilis. At natus corporis necessitatibus ratione est adipisci autem. Consequatur voluptates ut a ut tempora aperiam. Earum beatae dicta recusandae. Temporibus error rerum quibusdam vero eaque. Voluptatem distinctio rerum consectetur corrupti qui atque exercitationem sint. Aliquam rem qui reprehenderit debitis.'
                      length: 343
                      turns: 99
                      free: true
                      is_work: false
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 12
                      name: Геймдизайнер
                      address: '997505, Волгоградская область, город Москва, наб. Сталина, 91'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Eum aut cupiditate culpa quo. Expedita occaecati porro nesciunt in aut est omnis. Enim magni repellat molestiae. Est minima eos quis vel maxime quidem autem. Qui iure nemo dignissimos magnam. Odio dolor voluptatem consequatur est necessitatibus voluptatem hic illum. Occaecati pariatur aut atque saepe sunt enim debitis.'
                      length: 395
                      turns: 2
                      free: true
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 16
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 14
                    name: Егерь
                    address: '298820, Воронежская область, город Шаховская, въезд Балканская, 50'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Eos consequatur nesciunt repellat tenetur ex at. Sunt quibusdam mollitia repellat enim. Voluptatem voluptatem dignissimos delectus harum quia. Beatae commodi voluptatem vel ducimus non vel delectus. A officiis sit dolorem eum ut et. Dolorem at aliquid quam autem recusandae aliquam harum. Rem non nihil ipsum consectetur odit. Vero quisquam quas praesentium atque. Non adipisci rerum aut veritatis explicabo quis occaecati occaecati.'
                    length: 52
                    turns: 93
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: Егерь
                      address:
                        type: string
                        example: '298820, Воронежская область, город Шаховская, въезд Балканская, 50'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Eos consequatur nesciunt repellat tenetur ex at. Sunt quibusdam mollitia repellat enim. Voluptatem voluptatem dignissimos delectus harum quia. Beatae commodi voluptatem vel ducimus non vel delectus. A officiis sit dolorem eum ut et. Dolorem at aliquid quam autem recusandae aliquam harum. Rem non nihil ipsum consectetur odit. Vero quisquam quas praesentium atque. Non adipisci rerum aut veritatis explicabo quis occaecati occaecati.'
                      length:
                        type: integer
                        example: 52
                      turns:
                        type: integer
                        example: 93
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: aqlcuzzgpiznzwuxeksaxlxlbtlsjpubmefmzeaiptby
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: modi
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 15
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["magni","eius"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["ullam","ut"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 13
                    name: Диджей
                    address: '221506, Амурская область, город Серпухов, проезд Гоголя, 19'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'In fugit quis optio vero nemo. Quae eos vel officiis harum quam deleniti corrupti. At placeat incidunt nulla et assumenda facere consequatur quo. Voluptatem ipsam placeat est odit modi. Laborum qui sed quidem nam voluptates. Mollitia laudantium quae eos ut ratione.'
                    length: 323
                    turns: 82
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: Диджей
                      address:
                        type: string
                        example: '221506, Амурская область, город Серпухов, проезд Гоголя, 19'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'In fugit quis optio vero nemo. Quae eos vel officiis harum quam deleniti corrupti. At placeat incidunt nulla et assumenda facere consequatur quo. Voluptatem ipsam placeat est odit modi. Laborum qui sed quidem nam voluptates. Mollitia laudantium quae eos ut ratione.'
                      length:
                        type: integer
                        example: 323
                      turns:
                        type: integer
                        example: 82
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 5
                    name: 'Вениамин Максимович Денисов'
                    email: karpov.oksana@example.org
                    email_verified_at: '2025-01-31T12:35:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: 'Вениамин Максимович Денисов'
                      email:
                        type: string
                        example: karpov.oksana@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-31T12:35:23.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 6
                    name: 'Петухова Изабелла Евгеньевна'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: 'Петухова Изабелла Евгеньевна'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 7
                    name: 'Ксения Сергеевна Николаева'
                    email: rkomissarova@example.com
                    email_verified_at: '2025-01-31T12:35:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 7
                      name:
                        type: string
                        example: 'Ксения Сергеевна Николаева'
                      email:
                        type: string
                        example: rkomissarova@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-31T12:35:23.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: ytrciabhnvn
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: vivianne.mcclure@example.org
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
