openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:08'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: dolore
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: numquam
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: ipsa
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: quis
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: odio
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 24
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: accusantium
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: tempore
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: natus
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: vel
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: id
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: vel
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 14
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Получить участников в гонке'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 641
                      name: 'Kaleb Predovic'
                      email: trey.robel@example.com
                      email_verified_at: '2025-05-12T12:43:08.000000Z'
                      created_at: '2025-05-12T12:43:08.000000Z'
                      updated_at: '2025-05-12T12:43:08.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 642
                      name: 'Mrs. Marlene Schneider'
                      email: jessy.dicki@example.net
                      email_verified_at: '2025-05-12T12:43:08.000000Z'
                      created_at: '2025-05-12T12:43:08.000000Z'
                      updated_at: '2025-05-12T12:43:08.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: iusto
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 23
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 643
                    name: 'Werner Klocko'
                    email: gbruen@example.org
                    email_verified_at: '2025-05-12T12:43:08.000000Z'
                    created_at: '2025-05-12T12:43:08.000000Z'
                    updated_at: '2025-05-12T12:43:08.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 643
                      name:
                        type: string
                        example: 'Werner Klocko'
                      email:
                        type: string
                        example: gbruen@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-12T12:43:08.000000Z'
                      created_at:
                        type: string
                        example: '2025-05-12T12:43:08.000000Z'
                      updated_at:
                        type: string
                        example: '2025-05-12T12:43:08.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 19
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/export':
    get:
      summary: Export
      operationId: export
      description: 'Экспорт результатов'
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/import':
    post:
      summary: Import
      operationId: import
      description: 'Импорт результатов'
      parameters: []
      responses: {  }
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/checked':
    post:
      summary: checkedForCommission
      operationId: checkedForCommission
      description: 'Подтверждение записи участника гонки.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.checked.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.checked.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: true
                checked:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - checked
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: 60
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 181
                    name: 'Wava Mitchell'
                    desc: 'Dolore rerum aut aperiam sint nihil aut. Soluta facere voluptate incidunt sit voluptas. Error laboriosam quis accusantium et quasi inventore.'
                    price: '96341'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 181
                      name:
                        type: string
                        example: 'Wava Mitchell'
                      desc:
                        type: string
                        example: 'Dolore rerum aut aperiam sint nihil aut. Soluta facere voluptate incidunt sit voluptas. Error laboriosam quis accusantium et quasi inventore.'
                      price:
                        type: string
                        example: '96341'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: twjnjlyvczcwj
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mob
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 25.4180418
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 15
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 182
                    name: 'Prof. Myrna Schoen'
                    desc: 'Voluptas eaque corrupti consequuntur. Eaque vel quod ut vel quam soluta dolores optio. Quos ex voluptas ut non explicabo et.'
                    price: '5'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 182
                      name:
                        type: string
                        example: 'Prof. Myrna Schoen'
                      desc:
                        type: string
                        example: 'Voluptas eaque corrupti consequuntur. Eaque vel quod ut vel quam soluta dolores optio. Quos ex voluptas ut non explicabo et.'
                      price:
                        type: string
                        example: '5'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bdeuyx
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wptnhhsregbuzabwughhn
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 1.324512
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 10
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 183
                    name: 'Billie Douglas'
                    desc: 'Repudiandae distinctio autem qui cumque. Debitis et suscipit aliquid unde. Eos totam laboriosam molestiae id iure esse. Maxime atque iusto suscipit in.'
                    price: '1'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 183
                      name:
                        type: string
                        example: 'Billie Douglas'
                      desc:
                        type: string
                        example: 'Repudiandae distinctio autem qui cumque. Debitis et suscipit aliquid unde. Eos totam laboriosam molestiae id iure esse. Maxime atque iusto suscipit in.'
                      price:
                        type: string
                        example: '1'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 1
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 106|4rS7uiPagFENftGXaWcuYUbK9pGEPltbrt22hEGx199dd08f
                  token_type: Bearer
                  user:
                    id: 631
                    name: 'Mrs. Abby Nikolaus'
                    email: lgleichner@example.org
                    email_verified_at: '2025-05-12T12:42:58.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 106|4rS7uiPagFENftGXaWcuYUbK9pGEPltbrt22hEGx199dd08f
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 631
                      name:
                        type: string
                        example: 'Mrs. Abby Nikolaus'
                      email:
                        type: string
                        example: lgleichner@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-12T12:42:58.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters.'
                  example: fmertz@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: wd`DSO5SnY
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 107|H3WAIhJ12J0ogD4h5bPANMGrV7B2GLJ0Q6RcA6GTc69fcb54
                  token_type: Bearer
                  user:
                    id: 632
                    name: 'Prof. Dexter Bailey Jr.'
                    email: ernie.hartmann@example.org
                    email_verified_at: '2025-05-12T12:42:59.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 107|H3WAIhJ12J0ogD4h5bPANMGrV7B2GLJ0Q6RcA6GTc69fcb54
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 632
                      name:
                        type: string
                        example: 'Prof. Dexter Bailey Jr.'
                      email:
                        type: string
                        example: ernie.hartmann@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-12T12:42:59.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: su
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: concepcion97@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'q@-){bk}}$.(l<x'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: eos
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: mrlflld
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: ayhx
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 108|EIlzK0ZXaM1NNuwyGxXwsoQBIODwbfuXKSRExpHof9aea17e
                  token_type: Bearer
                  user:
                    id: 634
                    name: 'Michele Boehm IV'
                    email: bernita.nader@example.com
                    email_verified_at: '2025-05-12T12:43:00.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 108|EIlzK0ZXaM1NNuwyGxXwsoQBIODwbfuXKSRExpHof9aea17e
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 634
                      name:
                        type: string
                        example: 'Michele Boehm IV'
                      email:
                        type: string
                        example: bernita.nader@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-12T12:43:00.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 4 characters.'
                  example: g
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: ufxrxwmxmyyy
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: ipsam
                  nullable: false
              required:
                - key
                - phone
      security: []
  '/api/phone/{userId}/delete':
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление телефона'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.phone.delete.success
                  phone:
                    number: null
                    last_num: null
                    number_verified_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.phone.delete.success
                  phone:
                    type: object
                    properties:
                      number:
                        type: string
                        example: null
                      last_num:
                        type: string
                        example: null
                      number_verified_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: quia
        required: true
        schema:
          type: string
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: null
                      name: null
                      full_name: null
                      coach: null
                      city: null
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: null
                      name: null
                      full_name: null
                      coach: null
                      city: null
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 11
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: consectetur
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: null
                    name: null
                    full_name: null
                    coach: null
                    city: null
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: btohslncs
                  nullable: false
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sldatcpmxjustahfkguaygunc
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rpcmrywgheeogbxuqpeaj
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cghnzqldzeql
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: null
                    name: null
                    full_name: null
                    coach: null
                    city: null
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: in
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: null
                    name: null
                    full_name: null
                    coach: null
                    city: null
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: utoggdciryvzwogedhdlfvkr
                  nullable: true
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sloocwpwtvscme
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zrvxjeenprzauczicouxbxh
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: knqyls
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 5
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.delete.success
                  command:
                    id: null
                    name: null
                    full_name: null
                    coach: null
                    city: null
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.delete.success
                  command:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.add_couch.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.add_couch.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: nam
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.member_toggle.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.member_toggle.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 644
                    name: 'Hobart Veum'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 644
                      name:
                        type: string
                        example: 'Hobart Veum'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: dolorum
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 10
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 18
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 645
                    name: 'Yesenia Will'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 645
                      name:
                        type: string
                        example: 'Yesenia Will'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: beatae
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 15
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 646
                    name: 'Dr. Dominique Becker'
                    email: kirlin.vada@example.org
                    email_verified_at: '2025-05-12T12:43:13.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 646
                      name:
                        type: string
                        example: 'Dr. Dominique Becker'
                      email:
                        type: string
                        example: kirlin.vada@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-12T12:43:13.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 5
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 4
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 123
                    name: 'Maryse Anderson'
                    year: 1976
                    stages: '4'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
                      name:
                        type: string
                        example: 'Maryse Anderson'
                      year:
                        type: integer
                        example: 1976
                      stages:
                        type: string
                        example: '4'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 8
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 126
                    name: 'Ms. Kayli Raynor'
                    year: 1972
                    stages: '9'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 126
                      name:
                        type: string
                        example: 'Ms. Kayli Raynor'
                      year:
                        type: integer
                        example: 1972
                      stages:
                        type: string
                        example: '9'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rgkhrkmoizricthk
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wosctvccbzhbslksyplwnw
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: quis
        required: true
        schema:
          type: string
  '/api/cups/race/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение кубков по id гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_race_id.success
                  cup:
                    id: 124
                    name: 'Ms. Mozelle Harber'
                    year: 1991
                    stages: '1'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_race_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 124
                      name:
                        type: string
                        example: 'Ms. Mozelle Harber'
                      year:
                        type: integer
                        example: 1991
                      stages:
                        type: string
                        example: '1'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                raceId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the race table.'
                  example: 6
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 125
                    name: 'Ms. Callie Davis V'
                    year: 2021
                    stages: '2'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 125
                      name:
                        type: string
                        example: 'Ms. Callie Davis V'
                      year:
                        type: integer
                        example: 2021
                      stages:
                        type: string
                        example: '2'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: w
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 12
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: amet
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: seibypq
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
              required:
                - name
                - year
  /api/degree:
    get:
      summary: get
      operationId: get
      description: 'Получить все уровни.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.degree.get.success
                    degree:
                      id: null
                      name: null
                      desc: null
                  -
                    status: success
                    message: messages.degree.get.success
                    degree:
                      id: null
                      name: null
                      desc: null
      tags:
        - Degree
      security: []
  '/api/degree/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение уровня по id.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.degree.get_for_ids.success
                  degree:
                    id: null
                    name: null
                    desc: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.degree.get_for_ids.success
                  degree:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Degree
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the degree.'
        example: 2
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 336
                    name: file_6821ecdb0b414
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 336
                      name:
                        type: string
                        example: file_6821ecdb0b414
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: licenses
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://www.franecki.info/vel-qui-illo-architecto-facilis-impedit-dolorem-dolores-est.html'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: atque
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 337
                      name: file_6821ecdb31264
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 338
                      name: file_6821ecdb41aee
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 3
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 339
                    name: file_6821ecdb728c7
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 339
                      name:
                        type: string
                        example: file_6821ecdb728c7
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 340
                    name: file_6821ecdba0894
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 340
                      name:
                        type: string
                        example: file_6821ecdba0894
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: id
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    post:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.verify_docs_for_commission.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.verify_docs_for_commission.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checked:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                comment:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
              required:
                - checked
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 204
                    status: false
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 204
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 5
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:03'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 205
                  status: false
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 205
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  /api/districts:
    get:
      summary: ''
      operationId: getApiDistricts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.district.get.success
                  districts: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.district.get.success
                  districts:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.favorite_user.toggle.success_remove
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.favorite_user.toggle.success_remove
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 190
                      name: 'Aliza Reinger I'
                      description: 'Architecto fugit et aut iusto nobis. In ut dolorum voluptatem. Error explicabo suscipit recusandae ut nesciunt praesentium voluptas.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 191
                      name: 'Roslyn Kuhic DDS'
                      description: 'Corrupti quisquam ut sapiente deserunt et est velit reprehenderit. In assumenda iste repudiandae vel deleniti debitis. At sit rerum in. Impedit vel et dicta rem.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 22
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 193
                    name: 'Dr. Kennedy Hill'
                    description: 'Animi harum quam et commodi. Nostrum minus sed aut. Voluptatum libero non ipsa et.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 193
                      name:
                        type: string
                        example: 'Dr. Kennedy Hill'
                      description:
                        type: string
                        example: 'Animi harum quam et commodi. Nostrum minus sed aut. Voluptatum libero non ipsa et.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: plzyumn
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Aut explicabo consequatur aut.'
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 10
                  nullable: false
              required:
                - name
                - gradeId
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 192
                    name: 'Rose Jast'
                    description: 'Et facilis rerum quod consequatur culpa aut quod id. Id temporibus ducimus vel est voluptatem fuga. Nesciunt nemo sunt fugit amet. Consequatur voluptatem impedit est ipsam.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 192
                      name:
                        type: string
                        example: 'Rose Jast'
                      description:
                        type: string
                        example: 'Et facilis rerum quod consequatur culpa aut quod id. Id temporibus ducimus vel est voluptatem fuga. Nesciunt nemo sunt fugit amet. Consequatur voluptatem impedit est ipsam.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 13
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 194
                    name: 'Abigayle Kozey'
                    description: 'Dolorem eaque quas cumque. Eius eaque eos est assumenda. Totam dolores quisquam pariatur magni ut.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 194
                      name:
                        type: string
                        example: 'Abigayle Kozey'
                      description:
                        type: string
                        example: 'Dolorem eaque quas cumque. Eius eaque eos est assumenda. Totam dolores quisquam pariatur magni ut.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: izoavcjrxbvxveng
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Ipsam corrupti id dolorem dolores natus ipsam id.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 8
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 25
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Prof.
                    surname: Mr.
                    patronymic: Mrs.
                    date_of_birth: '1977-12-19'
                    city: Urbanton
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '+1 (929) 759-0969'
                    start_number: '114'
                    group: 'Construction Laborer'
                    rank_number: '100000'
                    rank: 'Rail Transportation Worker'
                    community: 'Howell, Harris and Hirthe'
                    coach: 'Morris Jones'
                    moto_stamp: Mr.
                    engine: Prof.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1977-12-19'
                      city:
                        type: string
                        example: Urbanton
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+1 (929) 759-0969'
                      start_number:
                        type: string
                        example: '114'
                      group:
                        type: string
                        example: 'Construction Laborer'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Rail Transportation Worker'
                      community:
                        type: string
                        example: 'Howell, Harris and Hirthe'
                      coach:
                        type: string
                        example: 'Morris Jones'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:06'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: atque
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 3
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: delectus
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: blanditiis
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: cumque
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: corrupti
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: blanditiis
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 6
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Ms.
                    surname: Mr.
                    patronymic: Mrs.
                    date_of_birth: '2011-09-03'
                    city: 'South Bettyborough'
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(276) 401-1727'
                    start_number: '329'
                    group: 'Locomotive Engineer'
                    rank_number: '99999'
                    rank: 'Fashion Designer'
                    community: Koelpin-Kohler
                    coach: 'Prof. Jovany Hoppe'
                    moto_stamp: Miss
                    engine: Dr.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ms.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '2011-09-03'
                      city:
                        type: string
                        example: 'South Bettyborough'
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(276) 401-1727'
                      start_number:
                        type: string
                        example: '329'
                      group:
                        type: string
                        example: 'Locomotive Engineer'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Fashion Designer'
                      community:
                        type: string
                        example: Koelpin-Kohler
                      coach:
                        type: string
                        example: 'Prof. Jovany Hoppe'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: exercitationem
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:06'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: delectus
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: facere
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: animi
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 2
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 321
                      name: 'Dr. Berneice Mills'
                      desc: 'Dolores debitis rerum quae quia aut qui esse. Omnis dicta rerum illum deserunt autem commodi sit. Et quisquam consequatur illum dignissimos delectus consectetur deserunt.'
                      is_work: false
                      date_start: '2025-05-12T20:41:13.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 322
                      name: 'Fred Huels'
                      desc: 'Reiciendis modi est cum natus sapiente. Illum laboriosam quia non quia. Tenetur deserunt harum totam rerum. Sequi nemo rem eos perspiciatis.'
                      is_work: false
                      date_start: '2025-05-12T07:59:34.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 19
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 11
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 1
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:03'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:03'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 16
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: suscipit
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
                degreeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the degrees table.'
                  example:
                    - 16
                  items:
                    type: integer
              required:
                - degreeIds
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 324
                    name: 'Dr. Reginald Lubowitz'
                    desc: 'Aliquam iste molestiae et tempora. Ut fugiat nulla quae voluptatem. Rerum necessitatibus sunt voluptatibus.'
                    is_work: false
                    date_start: '2025-05-12T17:32:03.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 324
                      name:
                        type: string
                        example: 'Dr. Reginald Lubowitz'
                      desc:
                        type: string
                        example: 'Aliquam iste molestiae et tempora. Ut fugiat nulla quae voluptatem. Rerum necessitatibus sunt voluptatibus.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-12T17:32:03.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: dbknhqzdryfoklplmgflzdzpcryixzymosphtsyzegbbjvrlipf
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: amet
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:04'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:04'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:04'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 4
                  nullable: true
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: qui
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 14
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 4
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 323
                    name: 'Dr. Bonita Thiel'
                    desc: 'Amet mollitia explicabo quia et qui totam unde. Saepe omnis voluptates vel necessitatibus quo consequatur. Nam delectus ex qui tempora. Blanditiis adipisci exercitationem provident numquam a.'
                    is_work: true
                    date_start: '2025-05-12T07:54:44.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 323
                      name:
                        type: string
                        example: 'Dr. Bonita Thiel'
                      desc:
                        type: string
                        example: 'Amet mollitia explicabo quia et qui totam unde. Saepe omnis voluptates vel necessitatibus quo consequatur. Nam delectus ex qui tempora. Blanditiis adipisci exercitationem provident numquam a.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-12T07:54:44.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 20
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.delete.success
                  race:
                    id: 328
                    name: 'Bernita Gerlach'
                    desc: 'Esse et sint illo adipisci dolor sunt blanditiis. Maiores omnis in quia dolore debitis. Reprehenderit maiores distinctio quisquam et. Aspernatur nobis rem ipsum aut.'
                    is_work: false
                    date_start: '2025-05-12T12:10:25.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.delete.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 328
                      name:
                        type: string
                        example: 'Bernita Gerlach'
                      desc:
                        type: string
                        example: 'Esse et sint illo adipisci dolor sunt blanditiis. Maiores omnis in quia dolore debitis. Reprehenderit maiores distinctio quisquam et. Aspernatur nobis rem ipsum aut.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-12T12:10:25.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 325
                    name: 'Kirstin Krajcik'
                    desc: 'Omnis provident omnis voluptas sint quos. Eos dolorem beatae repellat nam aspernatur aut. Inventore maiores et optio quia quibusdam.'
                    is_work: false
                    date_start: '2025-05-12T00:58:46.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 325
                      name:
                        type: string
                        example: 'Kirstin Krajcik'
                      desc:
                        type: string
                        example: 'Omnis provident omnis voluptas sint quos. Eos dolorem beatae repellat nam aspernatur aut. Inventore maiores et optio quia quibusdam.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-12T00:58:46.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: jthujouhchnjztsjdaxcdaljfgdujykqbxboetoeowfkvoqbbiqmbshugfzkmzypisafxgb
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:04'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:04'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-12T12:43:04'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 6
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - magni
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 18
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 2
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 10
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 326
                    name: 'Griffin Murray'
                    desc: 'Et totam quis harum nulla. Temporibus aut necessitatibus sit dolorem repellat laudantium aut molestiae. Hic necessitatibus est minima velit ex debitis. Itaque est et labore est et.'
                    is_work: false
                    date_start: '2025-05-12T18:04:43.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 326
                      name:
                        type: string
                        example: 'Griffin Murray'
                      desc:
                        type: string
                        example: 'Et totam quis harum nulla. Temporibus aut necessitatibus sit dolorem repellat laudantium aut molestiae. Hic necessitatibus est minima velit ex debitis. Itaque est et labore est et.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-12T18:04:43.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_allowed
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_allowed
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 12
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/add-document':
    post:
      summary: addDocument
      operationId: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.document.success
                  race:
                    id: 329
                    name: "Prof. Matteo D'Amore DDS"
                    desc: 'Ab ut qui vel nihil dolores. Temporibus et distinctio corporis culpa autem maxime. Et commodi dolor dolor repudiandae nemo.'
                    is_work: true
                    date_start: '2025-05-12T12:29:17.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.document.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 329
                      name:
                        type: string
                        example: "Prof. Matteo D'Amore DDS"
                      desc:
                        type: string
                        example: 'Ab ut qui vel nihil dolores. Temporibus et distinctio corporis culpa autem maxime. Et commodi dolor dolor repudiandae nemo.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-12T12:29:17.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdfFiles:
                  type: array
                  description: 'Must be a file.'
                  items:
                    type: string
                    format: binary
                pdfFilesDel:
                  type: array
                  description: ''
                  example:
                    - consectetur
                  items:
                    type: string
              required:
                - pdfFiles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/race/{id}/results':
    get:
      summary: get
      operationId: get
      description: 'Получение результатов гонки по фильтрам.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: 100
                      place: 10
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: 100
                      place: 10
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RaceResult
      security: []
    post:
      summary: create
      operationId: create
      description: 'Сохранение результатов.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race_result.create.success
                  result:
                    scores: 100
                    place: 10
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race_result.create.success
                  result:
                    type: object
                    properties:
                      scores:
                        type: integer
                        example: 100
                      place:
                        type: integer
                        example: 10
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RaceResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: false
                cupId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example: 7
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 4
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 4
                  nullable: false
                scores:
                  type: integer
                  description: ''
                  example: 9
                  nullable: false
                place:
                  type: integer
                  description: ''
                  example: 4
                  nullable: false
              required:
                - userId
                - gradeId
                - scores
                - place
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: twila80@example.net
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'https://baumbach.info/harum-quia-sit-ut-illo-et-qui-eveniet-ullam.html'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: hic
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 't&V/\=7'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: autem
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 640
                    name: 'Ceasar Harvey'
                    email: angelo.bashirian@example.net
                    email_verified_at: '2025-05-12T12:43:03.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 640
                      name:
                        type: string
                        example: 'Ceasar Harvey'
                      email:
                        type: string
                        example: angelo.bashirian@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-12T12:43:03.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 9
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 57
                      name: 'Shanna Balistreri'
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 58
                      name: 'Carlotta Hayes'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 48
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 48
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ehmmitryuy
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nkjdjzb
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dvrekfxqav
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dvtdsomsk
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 227
                      name: 'Deburring Machine Operator'
                      address: "809 Gisselle Estate Suite 012\nMurphyside, DC 31361-7361"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Et quo quos est qui iure esse deserunt qui. Velit commodi reprehenderit ad praesentium mollitia. Vel atque molestiae ut dolores sunt enim consequatur amet. Suscipit maiores ipsa vel et facere. Rerum asperiores repellat impedit et quaerat et. Iste repellendus eveniet aperiam expedita labore et. Ad ab beatae iste architecto et perspiciatis. Vel velit autem illo harum. Explicabo unde doloremque mollitia ut. Molestiae consectetur nihil possimus velit. Voluptatem et esse nisi earum.'
                      length: 746
                      turns: 82
                      free: false
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 58
                        name: Самарская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      requisites: null
                      offer: null
                      store: null
                      attendance: []
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 228
                      name: 'Camera Repairer'
                      address: "681 Laisha Shoals\nNorth Blake, OR 59618-7174"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Eum in omnis sit ea incidunt officia. Sed officia quam voluptatem id provident nemo earum. Aut adipisci ea officiis animi assumenda minima quos optio. Fugit doloremque in cupiditate consectetur quaerat odit. Et quidem quas culpa tenetur adipisci. Est ab provident consequatur ipsum. Quisquam voluptatibus suscipit iste accusantium. Iusto quasi nemo eveniet dolor voluptatibus eaque. Sint ullam culpa corrupti sequi dolore. Aperiam accusamus doloremque qui ad est rerum quisquam.'
                      length: 866
                      turns: 96
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 63
                        name: Севастополь
                        type: город
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      requisites: null
                      offer: null
                      store: null
                      attendance: []
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
                storeIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 19
                  nullable: true
                checkStore:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 9
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 230
                    name: 'Glass Cutting Machine Operator'
                    address: "354 Gottlieb Bridge Apt. 822\nHuelstown, AZ 87245-9574"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'At et autem esse dolorem quo nostrum. Aut fugiat laborum excepturi sit unde quia nihil. Molestiae ut sed rerum similique. Atque omnis harum placeat excepturi ea. Et illo enim accusantium quia cumque illum. Facilis debitis nesciunt culpa rerum laboriosam qui eligendi. Quam cumque distinctio cumque aut consectetur repellendus. Repudiandae ut provident quo. A ea id nostrum velit occaecati quaerat libero. Perspiciatis recusandae animi repellat repellendus.'
                    length: 356
                    turns: 22
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 25
                      name: Камчатский
                      type: край
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    requisites: null
                    offer: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 230
                      name:
                        type: string
                        example: 'Glass Cutting Machine Operator'
                      address:
                        type: string
                        example: "354 Gottlieb Bridge Apt. 822\nHuelstown, AZ 87245-9574"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'At et autem esse dolorem quo nostrum. Aut fugiat laborum excepturi sit unde quia nihil. Molestiae ut sed rerum similique. Atque omnis harum placeat excepturi ea. Et illo enim accusantium quia cumque illum. Facilis debitis nesciunt culpa rerum laboriosam qui eligendi. Quam cumque distinctio cumque aut consectetur repellendus. Repudiandae ut provident quo. A ea id nostrum velit occaecati quaerat libero. Perspiciatis recusandae animi repellat repellendus.'
                      length:
                        type: integer
                        example: 356
                      turns:
                        type: integer
                        example: 22
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 25
                          name:
                            type: string
                            example: Камчатский
                          type:
                            type: string
                            example: край
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: lnpmcytrsoopwghbrjfcdvlijceufsazemmbebosdasnoemh
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 3
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                requisitesFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 12
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 229
                    name: 'Automotive Master Mechanic'
                    address: "310 Hobart Crossing\nWest Vellaton, MA 88505-2485"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Iste consequuntur veniam quia deserunt id voluptas. Aut qui voluptatem quaerat et enim. Eaque quisquam perferendis est a corrupti. Minus facilis autem cumque cum illo reiciendis. Qui quibusdam assumenda odit molestiae minus harum consequatur. Veritatis repellendus expedita qui cupiditate qui fugit voluptatem.'
                    length: 516
                    turns: 42
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 82
                      name: Чукотский
                      type: 'автономный округ'
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    requisites: null
                    offer: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 229
                      name:
                        type: string
                        example: 'Automotive Master Mechanic'
                      address:
                        type: string
                        example: "310 Hobart Crossing\nWest Vellaton, MA 88505-2485"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Iste consequuntur veniam quia deserunt id voluptas. Aut qui voluptatem quaerat et enim. Eaque quisquam perferendis est a corrupti. Minus facilis autem cumque cum illo reiciendis. Qui quibusdam assumenda odit molestiae minus harum consequatur. Veritatis repellendus expedita qui cupiditate qui fugit voluptatem.'
                      length:
                        type: integer
                        example: 516
                      turns:
                        type: integer
                        example: 42
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 82
                          name:
                            type: string
                            example: Чукотский
                          type:
                            type: string
                            example: 'автономный округ'
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 231
                    name: 'Milling Machine Operator'
                    address: "9046 Wilbert Hill Suite 649\nWintheiserborough, IN 96254"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Omnis expedita modi doloremque quidem. Dicta rerum impedit repudiandae totam quod. Similique odit sunt deserunt sit ut ut doloremque. Vel dolore amet rerum dolorum quibusdam est consectetur. Blanditiis dignissimos nemo assumenda et et sunt culpa. Dolorem repudiandae sapiente accusantium optio. Autem aut enim nemo numquam omnis. Dolor et enim incidunt quia recusandae voluptatem. Et odit sint sapiente neque aliquam ut et quia.'
                    length: 377
                    turns: 64
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 61
                      name: Сахалинская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    requisites: null
                    offer: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 231
                      name:
                        type: string
                        example: 'Milling Machine Operator'
                      address:
                        type: string
                        example: "9046 Wilbert Hill Suite 649\nWintheiserborough, IN 96254"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Omnis expedita modi doloremque quidem. Dicta rerum impedit repudiandae totam quod. Similique odit sunt deserunt sit ut ut doloremque. Vel dolore amet rerum dolorum quibusdam est consectetur. Blanditiis dignissimos nemo assumenda et et sunt culpa. Dolorem repudiandae sapiente accusantium optio. Autem aut enim nemo numquam omnis. Dolor et enim incidunt quia recusandae voluptatem. Et odit sint sapiente neque aliquam ut et quia.'
                      length:
                        type: integer
                        example: 377
                      turns:
                        type: integer
                        example: 64
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 61
                          name:
                            type: string
                            example: Сахалинская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: ydtgllqbprgnqihxsvgniurqjktfdqdxrkvqvemlwoasjxedrjkurwtkqfqrrmvvpsiqcfpixblxmx
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: maiores
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - autem
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 10
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                requisitesFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 5
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 2
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.delete.success
                  track:
                    id: 232
                    name: 'Housekeeping Supervisor'
                    address: "18952 Boehm Plains Apt. 962\nElsashire, OR 35708-8640"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Vitae repellendus iste eius occaecati ut. Qui voluptas amet id ut aut. Adipisci nobis qui unde repellat eum. Velit pariatur veritatis error et incidunt. Illo autem totam reprehenderit magni. In dolores ratione aut qui sint et. Dolorem exercitationem quia voluptas quo. Accusamus et fugiat quas qui nemo. Excepturi enim quis fugiat. Numquam dolor enim et veniam dolor optio omnis. Porro harum sequi nesciunt repellat at ut.'
                    length: 376
                    turns: 35
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 14
                      name: Воронежская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    requisites: null
                    offer: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.delete.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 232
                      name:
                        type: string
                        example: 'Housekeeping Supervisor'
                      address:
                        type: string
                        example: "18952 Boehm Plains Apt. 962\nElsashire, OR 35708-8640"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Vitae repellendus iste eius occaecati ut. Qui voluptas amet id ut aut. Adipisci nobis qui unde repellat eum. Velit pariatur veritatis error et incidunt. Illo autem totam reprehenderit magni. In dolores ratione aut qui sint et. Dolorem exercitationem quia voluptas quo. Accusamus et fugiat quas qui nemo. Excepturi enim quis fugiat. Numquam dolor enim et veniam dolor optio omnis. Porro harum sequi nesciunt repellat at ut.'
                      length:
                        type: integer
                        example: 376
                      turns:
                        type: integer
                        example: 35
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 14
                          name:
                            type: string
                            example: Воронежская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 8
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 635
                    name: 'Kyleigh Funk'
                    email: bartoletti.myron@example.com
                    email_verified_at: '2025-05-12T12:43:00.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 635
                      name:
                        type: string
                        example: 'Kyleigh Funk'
                      email:
                        type: string
                        example: bartoletti.myron@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-12T12:43:00.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.delete.success
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 636
                    name: 'Eve Bernier'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 636
                      name:
                        type: string
                        example: 'Eve Bernier'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 637
                    name: 'Christine Bergnaum'
                    email: ivy19@example.org
                    email_verified_at: '2025-05-12T12:43:01.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 637
                      name:
                        type: string
                        example: 'Christine Bergnaum'
                      email:
                        type: string
                        example: ivy19@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-12T12:43:01.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: heusvw
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ljerde@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: emco
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 638
                      name: 'Melany Breitenberg'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 639
                      name: 'Mrs. Hertha VonRueden III'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: corporis
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 10
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 7
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами.'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Degree
    description: 'Методы связанные с уровнями кубков. Например всероссийский, областной и т.д.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RaceResult
    description: 'Управление результатами гонок.'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
