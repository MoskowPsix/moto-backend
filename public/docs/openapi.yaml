openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 27
                      name: 'Аркадий Борисович Пахомов'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 28
                      name: 'Влад Александрович Авдеев'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: porro
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 16
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 4|gJeeeFDm9UeXGNZvjxh12DxEm1lSGkzLYXP7CTkOe19bcb2c
                  token_type: Bearer
                  user:
                    id: 20
                    name: 'Дроздова Клементина Львовна'
                    email: maslova.taisiy@example.org
                    email_verified_at: '2025-01-30T13:26:03.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 4|gJeeeFDm9UeXGNZvjxh12DxEm1lSGkzLYXP7CTkOe19bcb2c
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
                      name:
                        type: string
                        example: 'Дроздова Клементина Львовна'
                      email:
                        type: string
                        example: maslova.taisiy@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-30T13:26:03.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: evie60@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: '[nX8\?w}hH5L?@DW'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 5|RSN10Cus80hRcI6yif51ICtJchZvfr6dFowPXqF382b9afb9
                  token_type: Bearer
                  user:
                    id: 21
                    name: 'Ника Фёдоровна Жданова'
                    email: cgorskova@example.net
                    email_verified_at: '2025-01-30T13:26:03.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 5|RSN10Cus80hRcI6yif51ICtJchZvfr6dFowPXqF382b9afb9
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 21
                      name:
                        type: string
                        example: 'Ника Фёдоровна Жданова'
                      email:
                        type: string
                        example: cgorskova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-30T13:26:03.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: turdcymcyztutycguvruxmj
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: glesch@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: ')Jc}pLWp_;-b3D'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: maxime
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 18
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: '2011-06-18'
                    city: Подольск
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: 8-800-289-0578
                    start_number: '406'
                    group: Штурман
                    rank_number: '99999'
                    rank: Телохранитель
                    community: 'МКК Микро'
                    coach: 'Марк Иванович Маслов'
                    moto_stamp: Prof.
                    engine: Miss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '2011-06-18'
                      city:
                        type: string
                        example: Подольск
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: 8-800-289-0578
                      start_number:
                        type: string
                        example: '406'
                      group:
                        type: string
                        example: Штурман
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Телохранитель
                      community:
                        type: string
                        example: 'МКК Микро'
                      coach:
                        type: string
                        example: 'Марк Иванович Маслов'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Miss
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: sequi
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T13:26:03'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: itaque
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: iure
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: pariatur
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Miss
                    surname: Mr.
                    patronymic: Prof.
                    date_of_birth: '2020-06-01'
                    city: Москва
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(35222) 97-6316'
                    start_number: '891'
                    group: Фотограф
                    rank_number: '100000'
                    rank: Телохранитель
                    community: 'ОАО ITВекторКазаньТрест'
                    coach: 'Фёдор Фёдорович Дьячков'
                    moto_stamp: Prof.
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Miss
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '2020-06-01'
                      city:
                        type: string
                        example: Москва
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(35222) 97-6316'
                      start_number:
                        type: string
                        example: '891'
                      group:
                        type: string
                        example: Фотограф
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Телохранитель
                      community:
                        type: string
                        example: 'ОАО ITВекторКазаньТрест'
                      coach:
                        type: string
                        example: 'Фёдор Фёдорович Дьячков'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Mr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T13:26:04'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: soluta
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 15
                      name: 'Иван Сергеевич Стрелков'
                      desc: 'Repudiandae molestiae aliquam repellat ipsa. Sed temporibus impedit atque. Minus molestias et aliquam alias. Omnis deserunt suscipit dicta omnis aperiam.'
                      is_work: false
                      date_start: '2025-01-30T13:26:03.000000Z'
                      images: null
                      contacts: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 16
                      name: 'Валерия Андреевна Казакова'
                      desc: 'Assumenda nihil sint eos et accusantium perspiciatis. Sed quo placeat aut perferendis officiis. Sed consequuntur nostrum molestias ut et rem quos.'
                      is_work: false
                      date_start: '2025-01-30T13:26:03.000000Z'
                      images: null
                      contacts: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: debitis
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 12
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 1
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 18
                    name: 'Елена Романовна Маркова'
                    desc: 'Aliquam sunt et rerum ducimus. Aut alias est magnam. Inventore at placeat sed maxime.'
                    is_work: false
                    date_start: '2025-01-30T13:26:03.000000Z'
                    images: null
                    contacts: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 18
                      name:
                        type: string
                        example: 'Елена Романовна Маркова'
                      desc:
                        type: string
                        example: 'Aliquam sunt et rerum ducimus. Aut alias est magnam. Inventore at placeat sed maxime.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-01-30T13:26:03.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: fbyjiqswdmzvjvbzjaeaztcjykwmhktbneqkgaawdawdqrddbuddsjaaihutwyzbagintvhvr
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: cumque
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T13:26:03'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 4
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 17
                    name: 'Комарова Рената Львовна'
                    desc: 'Blanditiis voluptas est amet temporibus iure. Ut aut ut quibusdam. Aut possimus voluptate quos voluptas repellat sed.'
                    is_work: true
                    date_start: '2025-01-30T13:26:03.000000Z'
                    images: null
                    contacts: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 17
                      name:
                        type: string
                        example: 'Комарова Рената Львовна'
                      desc:
                        type: string
                        example: 'Blanditiis voluptas est amet temporibus iure. Ut aut ut quibusdam. Aut possimus voluptate quos voluptas repellat sed.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-30T13:26:03.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 26
                    name: 'Родионова Мальвина Романовна'
                    email: belykov.iskra@example.net
                    email_verified_at: '2025-01-30T13:26:03.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 26
                      name:
                        type: string
                        example: 'Родионова Мальвина Романовна'
                      email:
                        type: string
                        example: belykov.iskra@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-30T13:26:03.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 14
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 15
                      name: Учёный
                      address: '378442, Нижегородская область, город Домодедово, проезд Домодедовская, 74'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Quos sed officia nam architecto. Consequuntur omnis dolor optio iste. Quis dolores quia rerum fugit. Voluptas et mollitia velit ut. Iusto exercitationem labore quidem enim rerum provident. Voluptatum et error nisi nemo ratione aut autem. Molestias eligendi quia enim corrupti. Laboriosam quo quia sit dignissimos ut laborum et. Iusto nobis provident repudiandae quis aut accusantium rerum. Aspernatur maiores veritatis totam quisquam dolor. Dolores nemo error ad id.'
                      length: 225
                      turns: 53
                      free: false
                      is_work: false
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 16
                      name: Штурман
                      address: '987374, Астраханская область, город Зарайск, проезд Гагарина, 15'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Ut autem magnam sapiente quia. Aut iusto quia fuga repellat autem eos officia. Consequatur quis asperiores in sit repellat magnam deleniti laboriosam. Aut laudantium consequuntur non voluptatem voluptas. Nobis expedita libero rem esse eos distinctio tempore. Quod repudiandae ratione quis. Rerum quo enim enim repudiandae. Aspernatur sequi et distinctio. Veritatis sed sit architecto sed minus eos blanditiis. Sed temporibus fugit placeat autem molestiae quo a.'
                      length: 78
                      turns: 31
                      free: false
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: corporis
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 10
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 18
                    name: 'Финансовый советник'
                    address: '446423, Брянская область, город Люберцы, спуск Чехова, 74'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Autem et dolor vel delectus. Est temporibus recusandae non nobis dolores molestiae. Voluptas recusandae at et voluptate. Tenetur et provident autem autem ab iure dolores deleniti. Sed consequatur consectetur quisquam minima. Vel occaecati quidem numquam velit voluptates enim. Asperiores aperiam minus veritatis sequi rem. At qui reiciendis eum. Aut sed illo omnis harum vitae consequatur dolor ut.'
                    length: 880
                    turns: 37
                    free: true
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 18
                      name:
                        type: string
                        example: 'Финансовый советник'
                      address:
                        type: string
                        example: '446423, Брянская область, город Люберцы, спуск Чехова, 74'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Autem et dolor vel delectus. Est temporibus recusandae non nobis dolores molestiae. Voluptas recusandae at et voluptate. Tenetur et provident autem autem ab iure dolores deleniti. Sed consequatur consectetur quisquam minima. Vel occaecati quidem numquam velit voluptates enim. Asperiores aperiam minus veritatis sequi rem. At qui reiciendis eum. Aut sed illo omnis harum vitae consequatur dolor ut.'
                      length:
                        type: integer
                        example: 880
                      turns:
                        type: integer
                        example: 37
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: wotedwxdzlzbffizxjnkrdwjilbdenqmpcgchbhrnbtetzcqnthtftzxjtipaxrkrzfrqlgkgg
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 6
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["nesciunt","soluta"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["ut","et"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 17
                    name: Телохранитель
                    address: '160726, Иркутская область, город Раменское, ул. Косиора, 56'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Quis placeat enim atque aut. Qui cumque quisquam quis iste. Tempore et sapiente aperiam corrupti iure sint et. Voluptatibus deleniti dignissimos alias quos. Magnam dolores illo libero officiis pariatur aliquam reiciendis. Quidem eius hic sint ut ipsam necessitatibus. Ea qui consectetur quisquam. Alias ab et aut exercitationem similique. Natus ipsam modi minus facilis. Ipsum quasi incidunt eligendi est in animi.'
                    length: 176
                    turns: 86
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 17
                      name:
                        type: string
                        example: Телохранитель
                      address:
                        type: string
                        example: '160726, Иркутская область, город Раменское, ул. Косиора, 56'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Quis placeat enim atque aut. Qui cumque quisquam quis iste. Tempore et sapiente aperiam corrupti iure sint et. Voluptatibus deleniti dignissimos alias quos. Magnam dolores illo libero officiis pariatur aliquam reiciendis. Quidem eius hic sint ut ipsam necessitatibus. Ea qui consectetur quisquam. Alias ab et aut exercitationem similique. Natus ipsam modi minus facilis. Ipsum quasi incidunt eligendi est in animi.'
                      length:
                        type: integer
                        example: 176
                      turns:
                        type: integer
                        example: 86
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 23
                    name: 'Филиппов Влад Борисович'
                    email: anisimov.inessa@example.net
                    email_verified_at: '2025-01-30T13:26:03.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 23
                      name:
                        type: string
                        example: 'Филиппов Влад Борисович'
                      email:
                        type: string
                        example: anisimov.inessa@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-30T13:26:03.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 24
                    name: 'Юдина Алла Сергеевна'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 24
                      name:
                        type: string
                        example: 'Юдина Алла Сергеевна'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 25
                    name: 'Маслов Валерий Иванович'
                    email: robert.sarapova@example.org
                    email_verified_at: '2025-01-30T13:26:03.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 25
                      name:
                        type: string
                        example: 'Маслов Валерий Иванович'
                      email:
                        type: string
                        example: robert.sarapova@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-30T13:26:03.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: hcwqxzvalvpojsfotvoyy
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: zulauf.stanton@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
