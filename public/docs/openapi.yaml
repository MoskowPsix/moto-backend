openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: messages.appointment_race.create.success
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: messages.appointment_race.create.success
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: messages.appointment_race.delete.success
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: messages.appointment_race.delete.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 18
                      name: 'Madyson Waelchi'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 19
                      name: 'Mrs. Josianne Schultz Jr.'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 15
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 4|R2Oj0pFWAZgnD8W4gcn9iqRndB1aCePsajhDHMxidb99bdf9
                  token_type: Bearer
                  user:
                    id: 11
                    name: 'Fletcher Murray'
                    email: hbeer@example.org
                    email_verified_at: '2025-02-18T11:15:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 4|R2Oj0pFWAZgnD8W4gcn9iqRndB1aCePsajhDHMxidb99bdf9
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      name:
                        type: string
                        example: 'Fletcher Murray'
                      email:
                        type: string
                        example: hbeer@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-18T11:15:09.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table. Must be at least 3 characters.'
                  example: hhoeger@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: '@vhX[&g'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 5|y9uALD6H1KjmiuUrM7oPfwVjbNvlcwUqohTjs2JAfb416e56
                  token_type: Bearer
                  user:
                    id: 12
                    name: 'Carleton Monahan'
                    email: nathanial54@example.com
                    email_verified_at: '2025-02-18T11:15:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 5|y9uALD6H1KjmiuUrM7oPfwVjbNvlcwUqohTjs2JAfb416e56
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12
                      name:
                        type: string
                        example: 'Carleton Monahan'
                      email:
                        type: string
                        example: nathanial54@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-18T11:15:10.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: fbnf
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: koelpin.jaquan@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '"764_>>*Lpd:Ip{,\Ly'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: dignissimos
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: ullam
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
              required:
                - type
                - file
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: null
                      name: null
                      type: null
                      path: null
                      data: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: null
                    name: null
                    type: null
                    path: null
                    data: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      type:
                        type: string
                        example: null
                      path:
                        type: string
                        example: null
                      data:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 14
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: null
                      name: 'Lyla Paucek'
                      description: 'Animi aspernatur qui dolores tenetur. Similique possimus maiores omnis deleniti ut. Animi recusandae voluptas atque recusandae at itaque quo.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: null
                      name: 'Sedrick Kirlin'
                      description: 'Quia qui ut velit est consequatur commodi sint. Modi nulla et ea commodi eum qui sed. Quia recusandae aspernatur cupiditate. Quia accusantium deserunt rerum enim nulla.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 6
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: null
                    name: 'Esta Reinger III'
                    description: 'Aut ullam quo eum reprehenderit. Corporis maiores minima impedit nemo vel. Ad culpa voluptatem enim accusamus quo beatae. Sit illo magni deleniti dolorum.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: 'Esta Reinger III'
                      description:
                        type: string
                        example: 'Aut ullam quo eum reprehenderit. Corporis maiores minima impedit nemo vel. Ad culpa voluptatem enim accusamus quo beatae. Sit illo magni deleniti dolorum.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: amdsxcqtj
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Et voluptatem beatae rerum totam beatae.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: null
                    name: 'Dominique Altenwerth'
                    description: 'Sint sit eius amet debitis. Repellat odio et quo consequuntur dolores est est. Ut illo tenetur omnis reiciendis animi. Officia repudiandae omnis culpa aut maxime. Ratione et est iure molestias.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: 'Dominique Altenwerth'
                      description:
                        type: string
                        example: 'Sint sit eius amet debitis. Repellat odio et quo consequuntur dolores est est. Ut illo tenetur omnis reiciendis animi. Officia repudiandae omnis culpa aut maxime. Ratione et est iure molestias.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 14
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 13
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: null
                    name: 'Desiree Von'
                    description: 'Autem est rerum aspernatur sit. Sed nisi ut eveniet porro sunt. Rerum et dolores enim adipisci. At quia quia quod aut nulla.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: 'Desiree Von'
                      description:
                        type: string
                        example: 'Autem est rerum aspernatur sit. Sed nisi ut eveniet porro sunt. Rerum et dolores enim adipisci. At quia quia quod aut nulla.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: upm
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Consectetur qui nulla error ratione.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 19
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Prof.
                    surname: Dr.
                    patronymic: Dr.
                    date_of_birth: '1970-02-27'
                    city: Wymanburgh
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: 1-713-537-4809
                    start_number: '313'
                    group: 'Automotive Body Repairer'
                    rank_number: '100000'
                    rank: 'Medical Scientists'
                    community: 'Brekke, Dooley and Jaskolski'
                    coach: 'Amy Larkin DDS'
                    moto_stamp: Prof.
                    engine: Mr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '1970-02-27'
                      city:
                        type: string
                        example: Wymanburgh
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 1-713-537-4809
                      start_number:
                        type: string
                        example: '313'
                      group:
                        type: string
                        example: 'Automotive Body Repairer'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Medical Scientists'
                      community:
                        type: string
                        example: 'Brekke, Dooley and Jaskolski'
                      coach:
                        type: string
                        example: 'Amy Larkin DDS'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Mr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: dolorum
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-18T11:15:13'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: libero
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: commodi
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 19
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: rem
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: optio
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Dr.
                    surname: Dr.
                    patronymic: Prof.
                    date_of_birth: '2015-11-30'
                    city: 'New Lisandrofort'
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '+1 (412) 654-6120'
                    start_number: '299'
                    group: 'Transportation Inspector'
                    rank_number: '99999'
                    rank: 'Home Economics Teacher'
                    community: 'Luettgen, Bode and Reichel'
                    coach: 'Maggie Bins Jr.'
                    moto_stamp: Mr.
                    engine: Prof.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '2015-11-30'
                      city:
                        type: string
                        example: 'New Lisandrofort'
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+1 (412) 654-6120'
                      start_number:
                        type: string
                        example: '299'
                      group:
                        type: string
                        example: 'Transportation Inspector'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Home Economics Teacher'
                      community:
                        type: string
                        example: 'Luettgen, Bode and Reichel'
                      coach:
                        type: string
                        example: 'Maggie Bins Jr.'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-18T11:15:14'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: facilis
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: quaerat
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: ratione
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: provident
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: numquam
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 23
                      name: 'Miss Rosemarie Boyle'
                      desc: 'Nesciunt ut id ut ab. Labore qui iusto sed ab nisi iste. Quia non et alias et voluptatem. Minima qui maiores voluptatem necessitatibus nihil.'
                      is_work: true
                      date_start: '2025-02-18T06:43:33.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 24
                      name: 'Rosalinda Macejkovic'
                      desc: 'Perspiciatis similique quas laudantium voluptas. Est recusandae numquam omnis recusandae id praesentium. Ut non quam alias ullam qui. Omnis pariatur facilis nam dolor dignissimos sit.'
                      is_work: false
                      date_start: '2025-02-18T17:53:29.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 10
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 19
                  items:
                    type: integer
                    nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 26
                    name: 'Mr. Reginald Abernathy DDS'
                    desc: 'Ut est consequuntur nisi earum. Hic saepe molestiae et quidem perferendis soluta. Earum voluptatum eum recusandae ut.'
                    is_work: true
                    date_start: '2025-02-18T01:27:57.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 26
                      name:
                        type: string
                        example: 'Mr. Reginald Abernathy DDS'
                      desc:
                        type: string
                        example: 'Ut est consequuntur nisi earum. Hic saepe molestiae et quidem perferendis soluta. Earum voluptatum eum recusandae ut.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-18T01:27:57.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: gpncyhpdsa
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-18T11:15:13'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 19
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 5
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 25
                    name: 'Kurt Crooks'
                    desc: 'Molestias eos ipsam vel impedit. Aut soluta explicabo quas eum aspernatur earum. Doloribus enim qui in at et harum. Rerum aut quis rerum optio excepturi impedit nihil vel.'
                    is_work: true
                    date_start: '2025-02-18T07:59:25.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 25
                      name:
                        type: string
                        example: 'Kurt Crooks'
                      desc:
                        type: string
                        example: 'Molestias eos ipsam vel impedit. Aut soluta explicabo quas eum aspernatur earum. Doloribus enim qui in at et harum. Rerum aut quis rerum optio excepturi impedit nihil vel.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-18T07:59:25.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 27
                    name: 'Prof. Maya Stanton DDS'
                    desc: 'Et est doloribus soluta sint. Consequuntur sit rerum facere et omnis. Voluptatem vel porro dicta nesciunt.'
                    is_work: true
                    date_start: '2025-02-18T01:19:30.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 27
                      name:
                        type: string
                        example: 'Prof. Maya Stanton DDS'
                      desc:
                        type: string
                        example: 'Et est doloribus soluta sint. Consequuntur sit rerum facere et omnis. Voluptatem vel porro dicta nesciunt.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-18T01:19:30.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: zwijv
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: vero
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-02-18T11:15:13'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 20
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - laborum
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 6
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 28
                    name: 'Laura Schulist'
                    desc: 'Consequatur quibusdam nulla omnis veniam aperiam. Quis porro et illo saepe aut possimus quis.'
                    is_work: true
                    date_start: '2025-02-18T19:49:48.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 28
                      name:
                        type: string
                        example: 'Laura Schulist'
                      desc:
                        type: string
                        example: 'Consequatur quibusdam nulla omnis veniam aperiam. Quis porro et illo saepe aut possimus quis.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-18T19:49:48.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 17
                    name: 'Ivory Hyatt'
                    email: sabina.parisian@example.org
                    email_verified_at: '2025-02-18T11:15:12.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 17
                      name:
                        type: string
                        example: 'Ivory Hyatt'
                      email:
                        type: string
                        example: sabina.parisian@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-18T11:15:12.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 16
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 25
                      name: 'Team Assembler'
                      address: "9403 Buckridge Lodge Suite 160\nLake Trishaside, ID 27846"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Tempora ullam error laboriosam dolorem. Voluptas est qui praesentium magnam aut reprehenderit. Odit dolore et enim modi. Omnis ut fugit iste fugiat doloribus fugiat nisi. Minima animi consequatur hic aut amet. Numquam illum in ut asperiores temporibus. Nisi dignissimos iusto magnam. Ut iure nihil nam qui qui sequi. Impedit quaerat a est tempora laudantium assumenda iusto.'
                      length: 785
                      turns: 7
                      free: true
                      is_work: false
                      spec: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 26
                      name: 'Fishing OR Forestry Supervisor'
                      address: "3090 Yvonne Fall\nSteuberside, TX 94532"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Velit dignissimos itaque doloremque doloremque et et. Laboriosam recusandae alias sed exercitationem iusto temporibus molestiae. Nesciunt doloribus et aspernatur tempora ullam libero distinctio enim. Cupiditate reiciendis dolorem laborum nisi et ducimus. Aut quo ullam doloribus minima mollitia enim cum. Qui laboriosam at debitis sit. Explicabo deserunt non quaerat fugit inventore. Fugiat cumque autem aperiam id facere.'
                      length: 251
                      turns: 70
                      free: false
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quidem
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 14
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 28
                    name: 'Preschool Education Administrators'
                    address: "89323 Earl Camp Apt. 512\nAlfordberg, PA 44410-7631"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Eligendi quia sequi occaecati sequi dolores rem soluta. Possimus autem qui ducimus voluptas soluta deleniti. Eaque et maiores sed aut id consectetur iure animi. Minus consequuntur consequatur temporibus blanditiis eos. Cum quibusdam a quae eaque praesentium quia. Consequatur in voluptatem et ea qui aliquam maxime. Perferendis quam eveniet quis a eveniet. Repellendus iusto non quo esse.'
                    length: 286
                    turns: 22
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 28
                      name:
                        type: string
                        example: 'Preschool Education Administrators'
                      address:
                        type: string
                        example: "89323 Earl Camp Apt. 512\nAlfordberg, PA 44410-7631"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Eligendi quia sequi occaecati sequi dolores rem soluta. Possimus autem qui ducimus voluptas soluta deleniti. Eaque et maiores sed aut id consectetur iure animi. Minus consequuntur consequatur temporibus blanditiis eos. Cum quibusdam a quae eaque praesentium quia. Consequatur in voluptatem et ea qui aliquam maxime. Perferendis quam eveniet quis a eveniet. Repellendus iusto non quo esse.'
                      length:
                        type: integer
                        example: 286
                      turns:
                        type: integer
                        example: 22
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: mdqxhobcrebowzznbtrqlaefvhndgaqsqyhodvdrtmpyilxlx
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 15
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["mollitia","animi"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["ut","debitis"]'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 10
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 27
                    name: 'Computer Scientist'
                    address: "8121 Koelpin Extension Suite 188\nNorth Gissellefurt, ID 53193"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Et odit consequatur nostrum dolor quis commodi ut. Maiores rerum beatae veritatis nostrum iste. Sed omnis voluptatem repudiandae voluptatem eos. Voluptates sed odit quia tempore. Qui occaecati consequatur magnam aut. Voluptatum unde necessitatibus iusto eligendi. Nam totam nemo doloribus. Et magni voluptatem aut dolore at. Aut commodi eaque et eveniet praesentium aut. Vitae accusantium minima fugit. Adipisci blanditiis et est. Est sit rerum ut nihil saepe.'
                    length: 326
                    turns: 57
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 27
                      name:
                        type: string
                        example: 'Computer Scientist'
                      address:
                        type: string
                        example: "8121 Koelpin Extension Suite 188\nNorth Gissellefurt, ID 53193"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Et odit consequatur nostrum dolor quis commodi ut. Maiores rerum beatae veritatis nostrum iste. Sed omnis voluptatem repudiandae voluptatem eos. Voluptates sed odit quia tempore. Qui occaecati consequatur magnam aut. Voluptatum unde necessitatibus iusto eligendi. Nam totam nemo doloribus. Et magni voluptatem aut dolore at. Aut commodi eaque et eveniet praesentium aut. Vitae accusantium minima fugit. Adipisci blanditiis et est. Est sit rerum ut nihil saepe.'
                      length:
                        type: integer
                        example: 326
                      turns:
                        type: integer
                        example: 57
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 29
                    name: 'Underground Mining'
                    address: "90893 Stoltenberg Gateway Apt. 818\nSouth Hillary, ID 40812-5675"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Suscipit ipsa eius harum id. Dignissimos sunt iste qui aliquam adipisci esse. Accusamus autem hic qui minima iusto quos facere asperiores. Sint est consequatur consequatur. Accusamus commodi omnis porro voluptas quibusdam aut magni delectus. Quasi consectetur animi eum non. Voluptatem dolor non sequi beatae. Porro pariatur aut itaque impedit ullam rem iusto. Temporibus nobis et inventore nulla. Dolorem beatae iste ipsum omnis.'
                    length: 518
                    turns: 26
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: 'Underground Mining'
                      address:
                        type: string
                        example: "90893 Stoltenberg Gateway Apt. 818\nSouth Hillary, ID 40812-5675"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Suscipit ipsa eius harum id. Dignissimos sunt iste qui aliquam adipisci esse. Accusamus autem hic qui minima iusto quos facere asperiores. Sint est consequatur consequatur. Accusamus commodi omnis porro voluptas quibusdam aut magni delectus. Quasi consectetur animi eum non. Voluptatem dolor non sequi beatae. Porro pariatur aut itaque impedit ullam rem iusto. Temporibus nobis et inventore nulla. Dolorem beatae iste ipsum omnis.'
                      length:
                        type: integer
                        example: 518
                      turns:
                        type: integer
                        example: 26
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: ahjdewtjgijcaooyxaznkigculsgeptenogexuhjktbouek
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - officiis
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 13
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["quibusdam","veritatis"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["aliquid","laudantium"]'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 2
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 14
                    name: 'Emmy Hamill'
                    email: iosinski@example.org
                    email_verified_at: '2025-02-18T11:15:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: 'Emmy Hamill'
                      email:
                        type: string
                        example: iosinski@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-18T11:15:10.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 15
                    name: 'Mr. Cordell Lindgren'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Mr. Cordell Lindgren'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 16
                    name: 'Royal Cronin'
                    email: deja80@example.org
                    email_verified_at: '2025-02-18T11:15:11.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Royal Cronin'
                      email:
                        type: string
                        example: deja80@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-18T11:15:11.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: rljqkqycbczlr
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: sydni79@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 7
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
