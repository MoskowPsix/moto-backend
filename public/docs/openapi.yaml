openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: dolor
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: omnis
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:45'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: natus
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: dolor
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 14
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: eaque
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: iste
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: earum
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: earum
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: error
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: quis
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 17
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Получить участников в гонке'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 726
                      name: 'Chadd Huels'
                      email: kwiegand@example.com
                      email_verified_at: '2025-05-19T06:15:46.000000Z'
                      created_at: '2025-05-19T06:15:46.000000Z'
                      updated_at: '2025-05-19T06:15:46.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 727
                      name: 'Prof. Ian DuBuque DVM'
                      email: hannah45@example.org
                      email_verified_at: '2025-05-19T06:15:46.000000Z'
                      created_at: '2025-05-19T06:15:46.000000Z'
                      updated_at: '2025-05-19T06:15:46.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 19
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 728
                    name: 'Wellington Kuhic'
                    email: lucio04@example.net
                    email_verified_at: '2025-05-19T06:15:46.000000Z'
                    created_at: '2025-05-19T06:15:46.000000Z'
                    updated_at: '2025-05-19T06:15:46.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 728
                      name:
                        type: string
                        example: 'Wellington Kuhic'
                      email:
                        type: string
                        example: lucio04@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-19T06:15:46.000000Z'
                      created_at:
                        type: string
                        example: '2025-05-19T06:15:46.000000Z'
                      updated_at:
                        type: string
                        example: '2025-05-19T06:15:46.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 1
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/export':
    get:
      summary: Export
      operationId: export
      description: 'Экспорт результатов'
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/import':
    post:
      summary: Import
      operationId: import
      description: 'Импорт результатов'
      parameters: []
      responses: {  }
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/checked':
    post:
      summary: checkedForCommission
      operationId: checkedForCommission
      description: 'Подтверждение записи участника гонки.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.checked.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.checked.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                checked:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - checked
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: 60
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 201
                    name: 'Deshawn Nolan'
                    desc: 'Commodi alias dolores totam id et. Pariatur sit repellendus est qui. Aut sunt fuga omnis qui quibusdam dolor mollitia dolorem. Placeat quidem ut animi ullam exercitationem dolores provident.'
                    price: '6.8852664e+07'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 201
                      name:
                        type: string
                        example: 'Deshawn Nolan'
                      desc:
                        type: string
                        example: 'Commodi alias dolores totam id et. Pariatur sit repellendus est qui. Aut sunt fuga omnis qui quibusdam dolor mollitia dolorem. Placeat quidem ut animi ullam exercitationem dolores provident.'
                      price:
                        type: string
                        example: '6.8852664e+07'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nxshvcspqvky
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cjwispjklqjcckcdesgys
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 26147.22016013
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 10
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 202
                    name: 'Jaylin Shanahan'
                    desc: 'Sed ipsa molestias placeat ipsum quos ex. Tenetur nesciunt quia est animi voluptatem corrupti. Recusandae possimus eum aspernatur aut est vel exercitationem.'
                    price: '21960'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 202
                      name:
                        type: string
                        example: 'Jaylin Shanahan'
                      desc:
                        type: string
                        example: 'Sed ipsa molestias placeat ipsum quos ex. Tenetur nesciunt quia est animi voluptatem corrupti. Recusandae possimus eum aspernatur aut est vel exercitationem.'
                      price:
                        type: string
                        example: '21960'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zrbixar
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: npfiuxmofmlzxwg
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 370412.54151
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 16
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 203
                    name: 'Cynthia West'
                    desc: 'Ab dignissimos est quibusdam tempore omnis dolorum. Ex dolorem id tempora sequi nihil accusamus. Sunt omnis consequatur placeat cum consequatur.'
                    price: '56461'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 203
                      name:
                        type: string
                        example: 'Cynthia West'
                      desc:
                        type: string
                        example: 'Ab dignissimos est quibusdam tempore omnis dolorum. Ex dolorem id tempora sequi nihil accusamus. Sunt omnis consequatur placeat cum consequatur.'
                      price:
                        type: string
                        example: '56461'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 15
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 121|pFwobpJYsn9E5n698LXjjqwMjI5Q5CX6FO0xGS9Rc5d33b6c
                  token_type: Bearer
                  user:
                    id: 716
                    name: 'Dennis Bednar'
                    email: velda.kub@example.org
                    email_verified_at: '2025-05-19T06:15:30.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 121|pFwobpJYsn9E5n698LXjjqwMjI5Q5CX6FO0xGS9Rc5d33b6c
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 716
                      name:
                        type: string
                        example: 'Dennis Bednar'
                      email:
                        type: string
                        example: velda.kub@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-19T06:15:30.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters.'
                  example: mable.leuschke@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: 'KY8:]rCS_yv.B2~9JATo'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 122|rluVygubmqL1zRXwvbRFvh3Kra4KOIL4IfoBq4t698a8c977
                  token_type: Bearer
                  user:
                    id: 717
                    name: 'Ms. Annabelle Brown MD'
                    email: eveline.jaskolski@example.net
                    email_verified_at: '2025-05-19T06:15:35.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 122|rluVygubmqL1zRXwvbRFvh3Kra4KOIL4IfoBq4t698a8c977
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 717
                      name:
                        type: string
                        example: 'Ms. Annabelle Brown MD'
                      email:
                        type: string
                        example: eveline.jaskolski@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-19T06:15:35.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: bxxqkeuvmypbl
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: vhill@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'Yl\P?rKVQl73W'''
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: ut
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: qpulrsjvvi
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: azy
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 123|8IaPBOrlrjOEkC9rkttazlz7zTJf63pR80He2emH29a36481
                  token_type: Bearer
                  user:
                    id: 719
                    name: 'Prof. Andreane Watsica'
                    email: selena20@example.org
                    email_verified_at: '2025-05-19T06:15:35.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 123|8IaPBOrlrjOEkC9rkttazlz7zTJf63pR80He2emH29a36481
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 719
                      name:
                        type: string
                        example: 'Prof. Andreane Watsica'
                      email:
                        type: string
                        example: selena20@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-19T06:15:35.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 4 characters.'
                  example: te
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: jowdkiqueix
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: sint
                  nullable: false
              required:
                - key
                - phone
      security: []
  '/api/phone/{userId}/delete':
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление телефона'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.phone.delete.success
                  phone:
                    number: null
                    last_num: null
                    number_verified_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.phone.delete.success
                  phone:
                    type: object
                    properties:
                      number:
                        type: string
                        example: null
                      last_num:
                        type: string
                        example: null
                      number_verified_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: quaerat
        required: true
        schema:
          type: string
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: null
                      name: null
                      full_name: null
                      coach: null
                      city: null
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: null
                      name: null
                      full_name: null
                      coach: null
                      city: null
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 19
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 5
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: quos
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: null
                    name: null
                    full_name: null
                    coach: null
                    city: null
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zssygbfbtsrysges
                  nullable: false
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mmusysvxezkyr
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ewmnqdfsagcphbvxthhcvyean
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lwiykx
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: null
                    name: null
                    full_name: null
                    coach: null
                    city: null
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: est
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: null
                    name: null
                    full_name: null
                    coach: null
                    city: null
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zhgnlb
                  nullable: true
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gypcxxcp
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: niv
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qjhstbrlrosi
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 3
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.delete.success
                  command:
                    id: null
                    name: null
                    full_name: null
                    coach: null
                    city: null
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.delete.success
                  command:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.add_couch.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.add_couch.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: cupiditate
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.member_toggle.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.member_toggle.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 729
                    name: 'Sigmund Weimann IV'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 729
                      name:
                        type: string
                        example: 'Sigmund Weimann IV'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 3
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 11
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 730
                    name: 'Mr. Haley Koss DVM'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 730
                      name:
                        type: string
                        example: 'Mr. Haley Koss DVM'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 22
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 731
                    name: 'Fabiola Price'
                    email: dmurray@example.com
                    email_verified_at: '2025-05-19T06:15:53.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 731
                      name:
                        type: string
                        example: 'Fabiola Price'
                      email:
                        type: string
                        example: dmurray@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-19T06:15:53.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 11
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 10
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 143
                    name: 'Dr. Eileen Dooley Sr.'
                    year: 2009
                    stages: '10'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 143
                      name:
                        type: string
                        example: 'Dr. Eileen Dooley Sr.'
                      year:
                        type: integer
                        example: 2009
                      stages:
                        type: string
                        example: '10'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 24
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: cumque
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 146
                    name: 'Dr. Vernie Blanda MD'
                    year: 1973
                    stages: '4'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 146
                      name:
                        type: string
                        example: 'Dr. Vernie Blanda MD'
                      year:
                        type: integer
                        example: 1973
                      stages:
                        type: string
                        example: '4'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: foqegkulevgjxhweubvro
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: uwkxlovkd
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: quis
        required: true
        schema:
          type: string
  '/api/cups/race/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение кубков по id гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_race_id.success
                  cup:
                    id: 144
                    name: 'Dr. Lyla Heathcote'
                    year: 1990
                    stages: '1'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_race_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 144
                      name:
                        type: string
                        example: 'Dr. Lyla Heathcote'
                      year:
                        type: integer
                        example: 1990
                      stages:
                        type: string
                        example: '1'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                raceId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the race table.'
                  example: 9
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 145
                    name: 'Prof. Braeden Friesen III'
                    year: 2021
                    stages: '1'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 145
                      name:
                        type: string
                        example: 'Prof. Braeden Friesen III'
                      year:
                        type: integer
                        example: 2021
                      stages:
                        type: string
                        example: '1'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nfszyuhaomftfybhfd
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kmilcjzga
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
              required:
                - name
                - year
  /api/degree:
    get:
      summary: get
      operationId: get
      description: 'Получить все уровни.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.degree.get.success
                    degree:
                      id: null
                      name: null
                      desc: null
                  -
                    status: success
                    message: messages.degree.get.success
                    degree:
                      id: null
                      name: null
                      desc: null
      tags:
        - Degree
      security: []
  '/api/degree/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение уровня по id.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.degree.get_for_ids.success
                  degree:
                    id: null
                    name: null
                    desc: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.degree.get_for_ids.success
                  degree:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Degree
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the degree.'
        example: 12
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 361
                    name: file_682acc909f4a9
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 361
                      name:
                        type: string
                        example: file_682acc909f4a9
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: notarius
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://www.cummerata.net/'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 362
                      name: file_682acc90ca75f
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 363
                      name: file_682acc90d688a
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 1
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 364
                    name: file_682acc9110f8f
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 364
                      name:
                        type: string
                        example: file_682acc9110f8f
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 365
                    name: file_682acc913e04e
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 365
                      name:
                        type: string
                        example: file_682acc913e04e
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    post:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.verify_docs_for_commission.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.verify_docs_for_commission.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checked:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                comment:
                  type: string
                  description: ''
                  example: quos
                  nullable: true
              required:
                - checked
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 214
                    status: false
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 214
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 20
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:40'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 215
                  status: false
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 215
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  /api/districts:
    get:
      summary: ''
      operationId: getApiDistricts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.district.get.success
                  districts: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.district.get.success
                  districts:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.favorite_user.toggle.success_remove
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.favorite_user.toggle.success_remove
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 216
                      name: 'Dr. Curt Lind Jr.'
                      description: 'Qui provident accusamus et in sint et culpa laborum. Magni ut soluta voluptas consequatur officia. Eaque dolor deserunt ea alias natus accusamus ab.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 217
                      name: 'Murl Runolfsson'
                      description: 'Quis eligendi necessitatibus molestiae dicta temporibus et. Consequatur sunt qui quaerat autem dolor numquam. Voluptatem quasi necessitatibus ipsa laudantium enim.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: pariatur
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 17
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 219
                    name: 'Dr. Jeramy Bernhard MD'
                    description: 'Similique quia porro iure vel voluptas. Voluptatem qui cumque sed et odio quidem veniam quidem. Et officiis aut numquam blanditiis quisquam ad est quia.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 219
                      name:
                        type: string
                        example: 'Dr. Jeramy Bernhard MD'
                      description:
                        type: string
                        example: 'Similique quia porro iure vel voluptas. Voluptatem qui cumque sed et odio quidem veniam quidem. Et officiis aut numquam blanditiis quisquam ad est quia.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jhrbdb
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Quia voluptatum accusantium corporis repudiandae quos cum.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 218
                    name: 'Mrs. Daphnee Aufderhar'
                    description: 'Suscipit cupiditate voluptatem aut et eligendi eligendi animi. Sed ut et id omnis optio. Expedita distinctio enim quia eum.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 218
                      name:
                        type: string
                        example: 'Mrs. Daphnee Aufderhar'
                      description:
                        type: string
                        example: 'Suscipit cupiditate voluptatem aut et eligendi eligendi animi. Sed ut et id omnis optio. Expedita distinctio enim quia eum.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 14
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 220
                    name: 'Gladys Cronin'
                    description: 'Repudiandae delectus iusto aliquam earum. Id et sunt voluptatem sed. Accusamus vel veritatis tempore delectus autem non dolorem voluptatem.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 220
                      name:
                        type: string
                        example: 'Gladys Cronin'
                      description:
                        type: string
                        example: 'Repudiandae delectus iusto aliquam earum. Id et sunt voluptatem sed. Accusamus vel veritatis tempore delectus autem non dolorem voluptatem.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tkehxrbh
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Aut dolor consequatur aut nobis tempora cumque.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 17
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 8
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Miss
                    surname: Prof.
                    patronymic: Prof.
                    date_of_birth: '1977-12-14'
                    city: 'North Janae'
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(972) 821-5376'
                    start_number: '743'
                    group: 'HR Manager'
                    rank_number: '100000'
                    rank: 'Watch Repairer'
                    community: 'Wintheiser, Fritsch and Von'
                    coach: 'Rosina Durgan'
                    moto_stamp: Mr.
                    engine: Dr.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Miss
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '1977-12-14'
                      city:
                        type: string
                        example: 'North Janae'
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(972) 821-5376'
                      start_number:
                        type: string
                        example: '743'
                      group:
                        type: string
                        example: 'HR Manager'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Watch Repairer'
                      community:
                        type: string
                        example: 'Wintheiser, Fritsch and Von'
                      coach:
                        type: string
                        example: 'Rosina Durgan'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:43'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: rem
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 11
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: cumque
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: earum
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: excepturi
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: ipsam
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 1
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 5
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Mrs.
                    date_of_birth: '1993-03-15'
                    city: 'East Cory'
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: 760-503-0604
                    start_number: '940'
                    group: 'Personal Service Worker'
                    rank_number: '99999'
                    rank: Lawyer
                    community: 'Dickens LLC'
                    coach: 'Prof. Fausto Weissnat DVM'
                    moto_stamp: Ms.
                    engine: Ms.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1993-03-15'
                      city:
                        type: string
                        example: 'East Cory'
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: 760-503-0604
                      start_number:
                        type: string
                        example: '940'
                      group:
                        type: string
                        example: 'Personal Service Worker'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Lawyer
                      community:
                        type: string
                        example: 'Dickens LLC'
                      coach:
                        type: string
                        example: 'Prof. Fausto Weissnat DVM'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Ms.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: pariatur
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:44'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: illo
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: quae
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: officia
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: itaque
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: minima
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: blanditiis
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 16
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 366
                      name: 'Prof. Ally Schiller DVM'
                      desc: 'Ipsam omnis ut explicabo sunt autem optio aut. Aliquam omnis aspernatur adipisci quae et necessitatibus. Nisi quod possimus ducimus est autem a. Doloremque repudiandae quia ut in in in nihil.'
                      is_work: false
                      date_start: '2025-05-19T04:46:04.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 367
                      name: 'Sister Keebler'
                      desc: 'Odio voluptas ratione odio reiciendis. Molestiae officia occaecati ut temporibus. Alias delectus assumenda qui ut.'
                      is_work: false
                      date_start: '2025-05-19T07:46:28.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: porro
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 19
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 20
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:40'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:40'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 4
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 3
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: id
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: minus
                  nullable: true
                degreeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the degrees table.'
                  example:
                    - 11
                  items:
                    type: integer
              required:
                - degreeIds
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 369
                    name: 'Amalia Schuster'
                    desc: 'Reiciendis similique sunt nisi quo culpa. Sapiente impedit ut quos cum ex. Quisquam totam deserunt dolor aut. Est nihil sit sunt itaque quam.'
                    is_work: false
                    date_start: '2025-05-19T09:06:08.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 369
                      name:
                        type: string
                        example: 'Amalia Schuster'
                      desc:
                        type: string
                        example: 'Reiciendis similique sunt nisi quo culpa. Sapiente impedit ut quos cum ex. Quisquam totam deserunt dolor aut. Est nihil sit sunt itaque quam.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-19T09:06:08.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: jvbcebscwgqfhchnnxhingivnpeeumjpvq
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:41'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:41'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:41'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 15
                  nullable: true
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: dolorem
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 14
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 8
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 368
                    name: 'Gustave Russel IV'
                    desc: 'Enim et ex est sit. Facilis enim voluptates et voluptate eum quas. Nihil nostrum nostrum ut eum minima earum nobis.'
                    is_work: false
                    date_start: '2025-05-19T00:20:42.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 368
                      name:
                        type: string
                        example: 'Gustave Russel IV'
                      desc:
                        type: string
                        example: 'Enim et ex est sit. Facilis enim voluptates et voluptate eum quas. Nihil nostrum nostrum ut eum minima earum nobis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-19T00:20:42.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 10
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.delete.success
                  race:
                    id: 373
                    name: 'Ericka Funk'
                    desc: 'Ratione atque nihil a quo. Tempore qui nostrum consequuntur et. Nihil eveniet doloremque aperiam sint sit officiis. Doloribus excepturi eum nihil expedita suscipit sit beatae.'
                    is_work: false
                    date_start: '2025-05-19T07:12:27.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.delete.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 373
                      name:
                        type: string
                        example: 'Ericka Funk'
                      desc:
                        type: string
                        example: 'Ratione atque nihil a quo. Tempore qui nostrum consequuntur et. Nihil eveniet doloremque aperiam sint sit officiis. Doloribus excepturi eum nihil expedita suscipit sit beatae.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-19T07:12:27.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 370
                    name: 'Virginie Runolfsdottir'
                    desc: 'Quisquam quia veniam suscipit accusantium nobis ab debitis. Necessitatibus occaecati minus dicta hic non reiciendis et. Quia rem est voluptas vel corporis.'
                    is_work: false
                    date_start: '2025-05-19T04:56:50.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 370
                      name:
                        type: string
                        example: 'Virginie Runolfsdottir'
                      desc:
                        type: string
                        example: 'Quisquam quia veniam suscipit accusantium nobis ab debitis. Necessitatibus occaecati minus dicta hic non reiciendis et. Quia rem est voluptas vel corporis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-19T04:56:50.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: bpjznsprhzccwkyvxbdxwuwybknmvaegpolzmvhigxcdodgfjgwseuhwcqpsvgyghizqlctrdevuwov
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:41'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:41'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-19T06:15:41'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 1
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - cupiditate
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 1
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 14
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 371
                    name: 'Freda Stokes'
                    desc: 'Velit explicabo ullam aliquid rem laborum sunt voluptatem. Exercitationem asperiores quidem debitis.'
                    is_work: false
                    date_start: '2025-05-19T17:56:46.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 371
                      name:
                        type: string
                        example: 'Freda Stokes'
                      desc:
                        type: string
                        example: 'Velit explicabo ullam aliquid rem laborum sunt voluptatem. Exercitationem asperiores quidem debitis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-19T17:56:46.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_allowed
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_allowed
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 19
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/add-document':
    post:
      summary: addDocument
      operationId: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.document.success
                  race:
                    id: 374
                    name: 'Tod Fisher'
                    desc: 'Et magnam temporibus totam natus minus quas. Aliquam ab et rem ducimus modi. Nesciunt aperiam error sequi officia laborum.'
                    is_work: true
                    date_start: '2025-05-19T07:50:34.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.document.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 374
                      name:
                        type: string
                        example: 'Tod Fisher'
                      desc:
                        type: string
                        example: 'Et magnam temporibus totam natus minus quas. Aliquam ab et rem ducimus modi. Nesciunt aperiam error sequi officia laborum.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-19T07:50:34.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdfFiles:
                  type: array
                  description: 'Must be a file.'
                  items:
                    type: string
                    format: binary
                pdfFilesDel:
                  type: array
                  description: ''
                  example:
                    - incidunt
                  items:
                    type: string
              required:
                - pdfFiles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/race/{id}/results':
    get:
      summary: get
      operationId: get
      description: 'Получение результатов гонки по фильтрам.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: 100
                      place: 10
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: 100
                      place: 10
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RaceResult
      security: []
    post:
      summary: create
      operationId: create
      description: 'Сохранение результатов.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race_result.create.success
                  result:
                    scores: 100
                    place: 10
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race_result.create.success
                  result:
                    type: object
                    properties:
                      scores:
                        type: integer
                        example: 100
                      place:
                        type: integer
                        example: 10
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RaceResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: false
                cupId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example: 16
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 10
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 17
                  nullable: false
                scores:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
                place:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
              required:
                - userId
                - gradeId
                - scores
                - place
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: flo33@example.com
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.krajcik.biz/adipisci-odio-quaerat-ut-vel-error-est-itaque'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: unde
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '<1Vuj]'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: rerum
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 725
                    name: 'Colleen Terry'
                    email: rippin.trey@example.net
                    email_verified_at: '2025-05-19T06:15:40.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 725
                      name:
                        type: string
                        example: 'Colleen Terry'
                      email:
                        type: string
                        example: rippin.trey@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-19T06:15:40.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 14
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 67
                      name: 'Amara Mann III'
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 68
                      name: 'Mr. Abdiel Abbott Sr.'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 53
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 53
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: uvaxvvvevfmsdclreu
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ugmxxrmejfqchmdhdpx
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mcaqrouigvyeahkm
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wtybxphwqzzgdsclxge
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 259
                      name: 'Occupational Therapist Assistant'
                      address: "4593 Morar Alley\nKaleyview, MT 54492-5036"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Est aut doloribus autem quia debitis est veritatis. Dolore perferendis enim quis eum. Dolor dolor debitis rerum aut molestias pariatur tempora. Facilis deserunt eligendi nostrum. Optio voluptate aspernatur officia enim. Cumque exercitationem maiores non in. Doloribus omnis minima aliquam laboriosam nulla. Quam optio magni ipsam rem ducimus voluptatem. Vel sed iusto minima modi. Magni autem facilis iste iusto. Est tempore nesciunt vel et qui.'
                      length: 684
                      turns: 56
                      free: false
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 58
                        name: Самарская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      requisites: null
                      offer: null
                      store: null
                      attendance: []
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 260
                      name: 'Poultry Cutter'
                      address: "27153 White Cliff\nPort Dereckshire, CT 69687-6616"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Sed autem voluptates modi aliquid dolor nihil. Alias sequi iusto sequi temporibus pariatur repudiandae magnam eveniet. Architecto est explicabo ut sunt consequatur laudantium placeat. Maiores eaque porro voluptatem officia. Aut laborum corporis ut voluptates est quo. Facere et magni iure deserunt. In dignissimos maiores quod est incidunt officiis. Cupiditate ea est assumenda quam.'
                      length: 409
                      turns: 81
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 77
                        name: Хакасия
                        type: республика
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      requisites: null
                      offer: null
                      store: null
                      attendance: []
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                storeIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 16
                  nullable: true
                checkStore:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 19
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 262
                    name: 'Marine Cargo Inspector'
                    address: "86041 Sven Causeway\nLake Odell, WA 68176-4083"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Cum totam accusamus reprehenderit quo aperiam. Odio eum tempora quibusdam officiis vel at et rerum. Et corrupti autem voluptates fugit totam est. Aperiam nam laudantium laborum voluptatem voluptatem delectus ut. Delectus qui omnis odio aspernatur. Magnam iusto in minus numquam. Excepturi consectetur dolor dolorem aliquam. Sunt quis itaque est cupiditate accusamus. Fugit repellat tenetur et.'
                    length: 215
                    turns: 57
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 72
                      name: Тыва
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    requisites: null
                    offer: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 262
                      name:
                        type: string
                        example: 'Marine Cargo Inspector'
                      address:
                        type: string
                        example: "86041 Sven Causeway\nLake Odell, WA 68176-4083"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Cum totam accusamus reprehenderit quo aperiam. Odio eum tempora quibusdam officiis vel at et rerum. Et corrupti autem voluptates fugit totam est. Aperiam nam laudantium laborum voluptatem voluptatem delectus ut. Delectus qui omnis odio aspernatur. Magnam iusto in minus numquam. Excepturi consectetur dolor dolorem aliquam. Sunt quis itaque est cupiditate accusamus. Fugit repellat tenetur et.'
                      length:
                        type: integer
                        example: 215
                      turns:
                        type: integer
                        example: 57
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 72
                          name:
                            type: string
                            example: Тыва
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: gpxwwhbpcmhuqgjzkhkjrlgkukbtskegucjgykwesiccrsonsuedlbvm
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 1
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 10
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                requisitesName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lzd
                  nullable: true
                requisitesEmail:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: winona25@example.com
                  nullable: true
                requisitesPhone:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rxi
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 5
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 261
                    name: 'Wellhead Pumper'
                    address: "5543 Lebsack Way\nEast Breannaview, NH 75749-5140"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Nemo modi sunt eius ex. Voluptatibus aut qui vero porro atque. Modi occaecati impedit quia quo ut. Accusantium tempora voluptatem voluptas ut rem fugit pariatur. Quis dolores sunt ducimus voluptate pariatur quia aut. Excepturi sequi praesentium sed quisquam quas facere omnis officia. Sed et eaque voluptas eum ut harum ut. Maxime officiis unde et doloribus illo. Quia reprehenderit sed est ut quia. Magni quos a debitis reprehenderit nesciunt. Quae sed perspiciatis qui sed rerum blanditiis quas.'
                    length: 539
                    turns: 46
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 57
                      name: Рязанская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    requisites: null
                    offer: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 261
                      name:
                        type: string
                        example: 'Wellhead Pumper'
                      address:
                        type: string
                        example: "5543 Lebsack Way\nEast Breannaview, NH 75749-5140"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Nemo modi sunt eius ex. Voluptatibus aut qui vero porro atque. Modi occaecati impedit quia quo ut. Accusantium tempora voluptatem voluptas ut rem fugit pariatur. Quis dolores sunt ducimus voluptate pariatur quia aut. Excepturi sequi praesentium sed quisquam quas facere omnis officia. Sed et eaque voluptas eum ut harum ut. Maxime officiis unde et doloribus illo. Quia reprehenderit sed est ut quia. Magni quos a debitis reprehenderit nesciunt. Quae sed perspiciatis qui sed rerum blanditiis quas.'
                      length:
                        type: integer
                        example: 539
                      turns:
                        type: integer
                        example: 46
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 57
                          name:
                            type: string
                            example: Рязанская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 263
                    name: Designer
                    address: "29978 Lebsack Hill Suite 204\nSouth Henrietteton, RI 25351"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Expedita atque est sed blanditiis velit amet sit. Incidunt ducimus sunt voluptatum qui. Dolorum dolores architecto nemo cumque labore facilis cum. Recusandae sed esse qui ut animi animi eos. Sit hic eius sequi aut similique. Ea adipisci autem quia sunt atque. Autem magnam dignissimos sequi odit quisquam. Ea ex dolorem optio sed exercitationem et. Inventore quia ea est sed. Rerum quisquam laudantium dicta delectus quidem architecto. Nihil non officiis aut fuga occaecati aut.'
                    length: 493
                    turns: 46
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 31
                      name: Костромская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    requisites: null
                    offer: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 263
                      name:
                        type: string
                        example: Designer
                      address:
                        type: string
                        example: "29978 Lebsack Hill Suite 204\nSouth Henrietteton, RI 25351"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Expedita atque est sed blanditiis velit amet sit. Incidunt ducimus sunt voluptatum qui. Dolorum dolores architecto nemo cumque labore facilis cum. Recusandae sed esse qui ut animi animi eos. Sit hic eius sequi aut similique. Ea adipisci autem quia sunt atque. Autem magnam dignissimos sequi odit quisquam. Ea ex dolorem optio sed exercitationem et. Inventore quia ea est sed. Rerum quisquam laudantium dicta delectus quidem architecto. Nihil non officiis aut fuga occaecati aut.'
                      length:
                        type: integer
                        example: 493
                      turns:
                        type: integer
                        example: 46
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 31
                          name:
                            type: string
                            example: Костромская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: sccpfucxkkkqirgrlizrqxmulpcaegigdsvhft
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: error
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - non
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 17
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: dolorum
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                requisitesName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: aygiyqfqbzcpsrq
                  nullable: true
                requisitesEmail:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jasmin.lowe@example.net
                  nullable: true
                requisitesPhone:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mxjcsskfu
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 18
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.delete.success
                  track:
                    id: 264
                    name: 'Construction Equipment Operator'
                    address: "474 Elenor Drives\nNorth Freedaview, OH 76745-2995"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Fugit possimus voluptatem delectus harum tenetur. Sint quaerat recusandae voluptas. Hic et exercitationem amet dolorum sunt expedita nihil. Earum voluptate molestiae architecto explicabo nobis eos quaerat sed. Repellat repellat aut sint voluptatum et illum. Et facere minima eveniet sed rerum libero. Dolore nesciunt necessitatibus est excepturi iste cupiditate inventore. Quo rerum et libero omnis. Odio animi nisi magnam ut eaque dolor. Omnis quia labore ipsam ratione.'
                    length: 241
                    turns: 40
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 81
                      name: 'Чувашская Республика'
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    requisites: null
                    offer: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.delete.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 264
                      name:
                        type: string
                        example: 'Construction Equipment Operator'
                      address:
                        type: string
                        example: "474 Elenor Drives\nNorth Freedaview, OH 76745-2995"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Fugit possimus voluptatem delectus harum tenetur. Sint quaerat recusandae voluptas. Hic et exercitationem amet dolorum sunt expedita nihil. Earum voluptate molestiae architecto explicabo nobis eos quaerat sed. Repellat repellat aut sint voluptatum et illum. Et facere minima eveniet sed rerum libero. Dolore nesciunt necessitatibus est excepturi iste cupiditate inventore. Quo rerum et libero omnis. Odio animi nisi magnam ut eaque dolor. Omnis quia labore ipsam ratione.'
                      length:
                        type: integer
                        example: 241
                      turns:
                        type: integer
                        example: 40
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 81
                          name:
                            type: string
                            example: 'Чувашская Республика'
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 8
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 720
                    name: 'Rebekah Bins'
                    email: estevan66@example.org
                    email_verified_at: '2025-05-19T06:15:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 720
                      name:
                        type: string
                        example: 'Rebekah Bins'
                      email:
                        type: string
                        example: estevan66@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-19T06:15:36.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.delete.success
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 721
                    name: 'Mr. Thad Dicki PhD'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 721
                      name:
                        type: string
                        example: 'Mr. Thad Dicki PhD'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 722
                    name: 'Ms. Madelynn Russel'
                    email: aleen51@example.net
                    email_verified_at: '2025-05-19T06:15:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 722
                      name:
                        type: string
                        example: 'Ms. Madelynn Russel'
                      email:
                        type: string
                        example: aleen51@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-19T06:15:36.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: gbxq
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: rwalter@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: rfyuicmexatr
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 723
                      name: 'Clementina Reinger'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 724
                      name: 'Prof. Kaya Wolff'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quae
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 8
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 14
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами.'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Degree
    description: 'Методы связанные с уровнями кубков. Например всероссийский, областной и т.д.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RaceResult
    description: 'Управление результатами гонок.'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
