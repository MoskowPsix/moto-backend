openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: nemo
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:58'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: soluta
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: vitae
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: cumque
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 24
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: nam
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: laborum
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: assumenda
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: excepturi
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 5
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 556
                      name: 'Ed Tillman'
                      email: wjacobs@example.com
                      email_verified_at: '2025-04-23T06:54:58.000000Z'
                      created_at: '2025-04-23T06:54:58.000000Z'
                      updated_at: '2025-04-23T06:54:58.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 557
                      name: 'Mr. Leopold Wisozk Jr.'
                      email: giovanna15@example.com
                      email_verified_at: '2025-04-23T06:54:58.000000Z'
                      created_at: '2025-04-23T06:54:58.000000Z'
                      updated_at: '2025-04-23T06:54:58.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 1
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 558
                    name: 'Dr. Kaleb Walter MD'
                    email: agustin.dickens@example.com
                    email_verified_at: '2025-04-23T06:54:59.000000Z'
                    created_at: '2025-04-23T06:54:59.000000Z'
                    updated_at: '2025-04-23T06:54:59.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 558
                      name:
                        type: string
                        example: 'Dr. Kaleb Walter MD'
                      email:
                        type: string
                        example: agustin.dickens@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-23T06:54:59.000000Z'
                      created_at:
                        type: string
                        example: '2025-04-23T06:54:59.000000Z'
                      updated_at:
                        type: string
                        example: '2025-04-23T06:54:59.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: facilis
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 10
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table/export':
    get:
      summary: Export
      operationId: export
      description: 'Экспорт заявок'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 160
                    name: 'Sammy Schmitt V'
                    desc: 'Sed temporibus nostrum consequatur assumenda molestiae. Ut id numquam unde rerum id officia. Esse cupiditate necessitatibus aut vero in praesentium eos.'
                    price: '718849'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 160
                      name:
                        type: string
                        example: 'Sammy Schmitt V'
                      desc:
                        type: string
                        example: 'Sed temporibus nostrum consequatur assumenda molestiae. Ut id numquam unde rerum id officia. Esse cupiditate necessitatibus aut vero in praesentium eos.'
                      price:
                        type: string
                        example: '718849'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: enbdxncesxxqkvx
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zhrnxrislppsxmr
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 4568.577
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 9
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 161
                    name: 'Cale Smitham'
                    desc: 'Nulla explicabo suscipit quis eum. Dolorum unde ut hic aut. Sed nesciunt consectetur magnam cupiditate.'
                    price: '88041'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 161
                      name:
                        type: string
                        example: 'Cale Smitham'
                      desc:
                        type: string
                        example: 'Nulla explicabo suscipit quis eum. Dolorum unde ut hic aut. Sed nesciunt consectetur magnam cupiditate.'
                      price:
                        type: string
                        example: '88041'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: w
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ncxjgksfnfrry
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 6284570.0
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 12
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 162
                    name: 'Corine Stanton'
                    desc: 'Sed hic ad rerum est soluta quis occaecati. Nesciunt sed consectetur culpa voluptatibus aliquam deleniti modi perferendis. Non repellat quas aut dolorum et ut.'
                    price: '731'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 162
                      name:
                        type: string
                        example: 'Corine Stanton'
                      desc:
                        type: string
                        example: 'Sed hic ad rerum est soluta quis occaecati. Nesciunt sed consectetur culpa voluptatibus aliquam deleniti modi perferendis. Non repellat quas aut dolorum et ut.'
                      price:
                        type: string
                        example: '731'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 13
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 90|tcl1rZCgoMhIkypjCgSDNgiHRUU6KCFP2Xzd8nLE0e5f7bb2
                  token_type: Bearer
                  user:
                    id: 546
                    name: 'Misty Douglas'
                    email: hgrady@example.net
                    email_verified_at: '2025-04-23T06:54:47.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 90|tcl1rZCgoMhIkypjCgSDNgiHRUU6KCFP2Xzd8nLE0e5f7bb2
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 546
                      name:
                        type: string
                        example: 'Misty Douglas'
                      email:
                        type: string
                        example: hgrady@example.net
                      email_verified_at:
                        type: string
                        example: '2025-04-23T06:54:47.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters.'
                  example: brisa04@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: 'kM8Pu&\7I'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 91|BltdHH8YHQWiov1htzG8oLqOvM0bMk11FoQxfxTBda767577
                  token_type: Bearer
                  user:
                    id: 547
                    name: 'Dortha Turcotte DDS'
                    email: carolanne40@example.net
                    email_verified_at: '2025-04-23T06:54:48.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 91|BltdHH8YHQWiov1htzG8oLqOvM0bMk11FoQxfxTBda767577
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 547
                      name:
                        type: string
                        example: 'Dortha Turcotte DDS'
                      email:
                        type: string
                        example: carolanne40@example.net
                      email_verified_at:
                        type: string
                        example: '2025-04-23T06:54:48.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: xxovww
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: clara.borer@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '>B~(&>'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: quo
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: ohsklnlvrj
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: om
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 92|SfWQPP7ijYVeLWVX03GraOVzpDsnczOqfr2p1t86bd01fd4e
                  token_type: Bearer
                  user:
                    id: 549
                    name: 'Amie Cummerata'
                    email: orion.morar@example.com
                    email_verified_at: '2025-04-23T06:54:49.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 92|SfWQPP7ijYVeLWVX03GraOVzpDsnczOqfr2p1t86bd01fd4e
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 549
                      name:
                        type: string
                        example: 'Amie Cummerata'
                      email:
                        type: string
                        example: orion.morar@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-23T06:54:49.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 4 characters.'
                  example: sx
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: gykitzza
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: sit
                  nullable: false
              required:
                - key
                - phone
      security: []
  '/api/phone/{userId}/delete':
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление телефона'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.phone.delete.success
                  phone:
                    number: null
                    last_num: null
                    number_verified_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.phone.delete.success
                  phone:
                    type: object
                    properties:
                      number:
                        type: string
                        example: null
                      last_num:
                        type: string
                        example: null
                      number_verified_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 201
                      name: 'Chanel Macejkovic'
                      full_name: null
                      coach: null
                      city: Veronicafurt
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 202
                      name: 'Hanna Lubowitz'
                      full_name: null
                      coach: null
                      city: 'West Marianne'
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 24
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: repellendus
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 204
                    name: 'Miss Theodora Harris'
                    full_name: null
                    coach: null
                    city: 'West Darien'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 204
                      name:
                        type: string
                        example: 'Miss Theodora Harris'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'West Darien'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mwjoyjxu
                  nullable: false
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rsraymkyhovucixgv
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tgcsqr
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 5
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: csqjbqfgoi
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 203
                    name: 'Ms. Nayeli Anderson'
                    full_name: null
                    coach: null
                    city: 'Port Santiagoburgh'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 203
                      name:
                        type: string
                        example: 'Ms. Nayeli Anderson'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'Port Santiagoburgh'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 10
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: exercitationem
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 205
                    name: 'Ms. Vallie Ebert'
                    full_name: null
                    coach: null
                    city: Alizeland
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 205
                      name:
                        type: string
                        example: 'Ms. Vallie Ebert'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Alizeland
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wczmgogt
                  nullable: true
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: srgzaynijumfzhvnymp
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qrbnhxcknlkvnlbpevkrug
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fwbqwgezyjqkliqdckfivsj
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.delete.success
                  command:
                    id: 206
                    name: 'Tracey Collins II'
                    full_name: null
                    coach: null
                    city: 'New Demarcoside'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.delete.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 206
                      name:
                        type: string
                        example: 'Tracey Collins II'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'New Demarcoside'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.add_couch.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.add_couch.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: officiis
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.member_toggle.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.member_toggle.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 559
                    name: 'Laverna Mitchell DDS'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 559
                      name:
                        type: string
                        example: 'Laverna Mitchell DDS'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 14
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 1
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 560
                    name: 'Prof. Augustus Schulist PhD'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 560
                      name:
                        type: string
                        example: 'Prof. Augustus Schulist PhD'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 24
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 561
                    name: 'Rickey Will'
                    email: reta56@example.org
                    email_verified_at: '2025-04-23T06:55:01.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 561
                      name:
                        type: string
                        example: 'Rickey Will'
                      email:
                        type: string
                        example: reta56@example.org
                      email_verified_at:
                        type: string
                        example: '2025-04-23T06:55:01.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 9
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 103
                    name: 'Ms. Alyce Gerlach'
                    year: 1970
                    stages: '2'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 103
                      name:
                        type: string
                        example: 'Ms. Alyce Gerlach'
                      year:
                        type: integer
                        example: 1970
                      stages:
                        type: string
                        example: '2'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 24
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 106
                    name: 'Dr. Carmine Rau II'
                    year: 1978
                    stages: '6'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 106
                      name:
                        type: string
                        example: 'Dr. Carmine Rau II'
                      year:
                        type: integer
                        example: 1978
                      stages:
                        type: string
                        example: '6'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: arcjruemcpkwwbdsrpuxcfeva
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bvo
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: libero
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: tenetur
        required: true
        schema:
          type: string
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 105
                    name: 'Serenity Sipes'
                    year: 1981
                    stages: '4'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 105
                      name:
                        type: string
                        example: 'Serenity Sipes'
                      year:
                        type: integer
                        example: 1981
                      stages:
                        type: string
                        example: '4'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: npbtjfiidafv
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gttib
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 16
                  nullable: true
              required:
                - name
                - year
  /api/degree:
    get:
      summary: get
      operationId: get
      description: 'Получить все уровни.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.degree.get.success
                    degree:
                      id: null
                      name: null
                      desc: null
                  -
                    status: success
                    message: messages.degree.get.success
                    degree:
                      id: null
                      name: null
                      desc: null
      tags:
        - Degree
      security: []
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 311
                    name: file_68088ec13c21d
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 311
                      name:
                        type: string
                        example: file_68088ec13c21d
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: notarius
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://streich.com/esse-esse-ut-magni-earum-dolorem-ab-iure.html'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: officia
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 312
                      name: file_68088ec15c168
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 313
                      name: file_68088ec1666a5
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 10
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 18
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 314
                    name: file_68088ec191376
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 314
                      name:
                        type: string
                        example: file_68088ec191376
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 315
                    name: file_68088ec1bec27
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 315
                      name:
                        type: string
                        example: file_68088ec1bec27
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: cumque
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    get:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.verify_docs_for_commission.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.verify_docs_for_commission.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 166
                    status: false
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 166
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 5
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:53'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 167
                  status: false
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 167
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.favorite_user.toggle.success_remove
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.favorite_user.toggle.success_remove
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 157
                      name: 'Miss Vernice Price PhD'
                      description: 'Qui veritatis cupiditate consequatur odio delectus aut rem. Perspiciatis sit libero maiores voluptas vitae. Optio fugit nemo ratione sint.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 158
                      name: 'Darrion Kerluke'
                      description: 'Vitae porro fuga ipsa non. Qui provident non eaque sequi. Cumque beatae voluptatum labore eos maxime repellendus.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: inventore
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 15
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 160
                    name: 'Marisol Wunsch'
                    description: 'Et et iusto vel rerum aut qui amet. Aut ea nihil explicabo commodi.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 160
                      name:
                        type: string
                        example: 'Marisol Wunsch'
                      description:
                        type: string
                        example: 'Et et iusto vel rerum aut qui amet. Aut ea nihil explicabo commodi.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: s
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Accusantium maiores voluptas nisi culpa qui.'
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 2
                  nullable: false
              required:
                - name
                - gradeId
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 159
                    name: 'Alexys Kunze'
                    description: 'Numquam expedita molestiae eaque id qui aut. Recusandae corporis dignissimos qui sint vero voluptatibus magnam. Ab aperiam ut explicabo aut omnis occaecati est omnis.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 159
                      name:
                        type: string
                        example: 'Alexys Kunze'
                      description:
                        type: string
                        example: 'Numquam expedita molestiae eaque id qui aut. Recusandae corporis dignissimos qui sint vero voluptatibus magnam. Ab aperiam ut explicabo aut omnis occaecati est omnis.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 5
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 161
                    name: 'Ms. Joanne Metz'
                    description: 'Deserunt nostrum eos dicta in. Porro esse ut ab. Incidunt debitis omnis non quibusdam. Ducimus quidem dignissimos necessitatibus modi voluptas eveniet cupiditate.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 161
                      name:
                        type: string
                        example: 'Ms. Joanne Metz'
                      description:
                        type: string
                        example: 'Deserunt nostrum eos dicta in. Porro esse ut ab. Incidunt debitis omnis non quibusdam. Ducimus quidem dignissimos necessitatibus modi voluptas eveniet cupiditate.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: 'n'
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Sit voluptatum perspiciatis hic.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 19
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 2
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Mr.
                    surname: Prof.
                    patronymic: Prof.
                    date_of_birth: '1990-09-19'
                    city: Minervabury
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: 1-862-564-1150
                    start_number: '500'
                    group: 'Occupational Therapist'
                    rank_number: '99999'
                    rank: 'Food Preparation Worker'
                    community: 'Abernathy Group'
                    coach: 'Rodrigo Aufderhar'
                    moto_stamp: Dr.
                    engine: Prof.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '1990-09-19'
                      city:
                        type: string
                        example: Minervabury
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 1-862-564-1150
                      start_number:
                        type: string
                        example: '500'
                      group:
                        type: string
                        example: 'Occupational Therapist'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Food Preparation Worker'
                      community:
                        type: string
                        example: 'Abernathy Group'
                      coach:
                        type: string
                        example: 'Rodrigo Aufderhar'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: repellendus
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:56'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 12
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: minima
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: atque
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: libero
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 14
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: '1986-06-22'
                    city: Davionmouth
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: 760-559-9984
                    start_number: '570'
                    group: 'Musician OR Singer'
                    rank_number: '99999'
                    rank: 'City Planning Aide'
                    community: 'Stark, Upton and Stokes'
                    coach: 'Dr. Glennie Trantow III'
                    moto_stamp: Mr.
                    engine: Dr.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '1986-06-22'
                      city:
                        type: string
                        example: Davionmouth
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 760-559-9984
                      start_number:
                        type: string
                        example: '570'
                      group:
                        type: string
                        example: 'Musician OR Singer'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'City Planning Aide'
                      community:
                        type: string
                        example: 'Stark, Upton and Stokes'
                      coach:
                        type: string
                        example: 'Dr. Glennie Trantow III'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:56'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: inventore
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: illum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: labore
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 20
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 255
                      name: "Theo D'Amore"
                      desc: 'Repellat voluptatem assumenda rerum molestias quas. Et qui modi ducimus et atque. Corrupti sequi nesciunt sunt.'
                      is_work: true
                      date_start: '2025-04-23T13:46:35.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 256
                      name: 'Dr. Roma Kris Sr.'
                      desc: 'Voluptatum possimus nemo repellendus id ullam. Aliquid harum laborum molestiae rem labore quasi. Voluptatibus ea explicabo et sit.'
                      is_work: false
                      date_start: '2025-04-23T18:34:35.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 10
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 1
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:53'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:53'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 4
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: at
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 258
                    name: 'Alice Bogan'
                    desc: 'Rerum qui ea ipsa dolorum blanditiis. Quae nemo cupiditate occaecati. Perferendis rerum deserunt est quia. Repellendus corporis neque rerum consequatur dolores sit at.'
                    is_work: false
                    date_start: '2025-04-23T23:53:08.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 258
                      name:
                        type: string
                        example: 'Alice Bogan'
                      desc:
                        type: string
                        example: 'Rerum qui ea ipsa dolorum blanditiis. Quae nemo cupiditate occaecati. Perferendis rerum deserunt est quia. Repellendus corporis neque rerum consequatur dolores sit at.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-23T23:53:08.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: dvkrxmzlvswxruioeafqigkubdrzchamtgoieynqwhoipnhyfasdxyhvfawydwvtmjdxxftcrrpwhlspiupitt
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:54'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:54'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:54'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 15
                  nullable: true
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 7
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: perferendis
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 19
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 18
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 257
                    name: 'Lucinda Lemke PhD'
                    desc: 'Quasi laudantium eius quidem sint est. Dolor sit dignissimos et. Sint facilis consequatur aut veritatis et ut et omnis.'
                    is_work: false
                    date_start: '2025-04-23T05:51:12.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 257
                      name:
                        type: string
                        example: 'Lucinda Lemke PhD'
                      desc:
                        type: string
                        example: 'Quasi laudantium eius quidem sint est. Dolor sit dignissimos et. Sint facilis consequatur aut veritatis et ut et omnis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-23T05:51:12.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.delete.success
                  race:
                    id: 262
                    name: 'Chaim Bogisich'
                    desc: 'Sapiente quod omnis delectus quo eos vero. Magnam in laudantium sed distinctio.'
                    is_work: false
                    date_start: '2025-04-23T06:12:37.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.delete.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 262
                      name:
                        type: string
                        example: 'Chaim Bogisich'
                      desc:
                        type: string
                        example: 'Sapiente quod omnis delectus quo eos vero. Magnam in laudantium sed distinctio.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-23T06:12:37.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 259
                    name: 'Prof. Jeanette Reichel DVM'
                    desc: 'Alias et corporis dolor ut eligendi. Mollitia sint qui qui qui. Blanditiis natus voluptates eveniet dolor ex.'
                    is_work: false
                    date_start: '2025-04-23T23:31:18.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 259
                      name:
                        type: string
                        example: 'Prof. Jeanette Reichel DVM'
                      desc:
                        type: string
                        example: 'Alias et corporis dolor ut eligendi. Mollitia sint qui qui qui. Blanditiis natus voluptates eveniet dolor ex.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-23T23:31:18.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: afirgodijcqacwnsbdhajlcvpsmncr
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: illo
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:54'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:54'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-23T06:54:54'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 4
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - dolorem
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 13
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 1
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 260
                    name: 'Kirk Kassulke'
                    desc: 'Et explicabo ut ipsa omnis consequatur harum. Ea nobis aperiam occaecati esse cumque. Atque dicta tempora totam omnis dolore sequi soluta illum. Amet sint magnam cupiditate minus.'
                    is_work: true
                    date_start: '2025-04-23T07:06:43.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 260
                      name:
                        type: string
                        example: 'Kirk Kassulke'
                      desc:
                        type: string
                        example: 'Et explicabo ut ipsa omnis consequatur harum. Ea nobis aperiam occaecati esse cumque. Atque dicta tempora totam omnis dolore sequi soluta illum. Amet sint magnam cupiditate minus.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-04-23T07:06:43.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_allowed
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_allowed
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 1
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/add-document':
    post:
      summary: addDocument
      operationId: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.document.success
                  race:
                    id: 263
                    name: 'Ms. Nelda Kunde Jr.'
                    desc: 'Modi maxime esse est autem. Qui consequatur non omnis similique impedit rerum nostrum. Sed ad corporis temporibus incidunt excepturi rem. Tempora aut sapiente ullam blanditiis.'
                    is_work: false
                    date_start: '2025-04-23T06:52:19.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.document.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 263
                      name:
                        type: string
                        example: 'Ms. Nelda Kunde Jr.'
                      desc:
                        type: string
                        example: 'Modi maxime esse est autem. Qui consequatur non omnis similique impedit rerum nostrum. Sed ad corporis temporibus incidunt excepturi rem. Tempora aut sapiente ullam blanditiis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-23T06:52:19.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdfFiles:
                  type: array
                  description: 'Must be a file.'
                  items:
                    type: string
                    format: binary
                pdfFilesDel:
                  type: array
                  description: ''
                  example:
                    - est
                  items:
                    type: string
              required:
                - pdfFiles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: emmitt01@example.net
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.ruecker.com/'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: L0jJ<IfR3c
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: quo
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 555
                    name: 'Ms. Leonie Dibbert III'
                    email: quinton.turner@example.com
                    email_verified_at: '2025-04-23T06:54:53.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 555
                      name:
                        type: string
                        example: 'Ms. Leonie Dibbert III'
                      email:
                        type: string
                        example: quinton.turner@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-23T06:54:53.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 4
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 47
                      name: 'Arely Mitchell'
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 48
                      name: 'Ms. Kaitlin Grady Jr.'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 42
                    login: 'Velit quo voluptas tempora et aut nobis. Dolores deleniti assumenda exercitationem amet recusandae. Dignissimos et rerum perspiciatis molestiae est. Officiis tempore eum ex eligendi reiciendis iusto.'
                    password_1: ';I|*geYo-!-'
                    password_2: 'h+F"4RSb_M@`H-BS)[n'
                    token: 'Sit similique deserunt reiciendis adipisci adipisci et. Magni quia nisi aliquam et. Consequatur nihil aut aspernatur. Ex quae impedit officia doloribus et commodi.'
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                      login:
                        type: string
                        example: 'Velit quo voluptas tempora et aut nobis. Dolores deleniti assumenda exercitationem amet recusandae. Dignissimos et rerum perspiciatis molestiae est. Officiis tempore eum ex eligendi reiciendis iusto.'
                      password_1:
                        type: string
                        example: ';I|*geYo-!-'
                      password_2:
                        type: string
                        example: 'h+F"4RSb_M@`H-BS)[n'
                      token:
                        type: string
                        example: 'Sit similique deserunt reiciendis adipisci adipisci et. Magni quia nisi aliquam et. Consequatur nihil aut aspernatur. Ex quae impedit officia doloribus et commodi.'
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fbgtglkqkbd
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kykcvnmhomppynbmjf
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: uejkm
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: f
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 190
                      name: 'Director Of Talent Acquisition'
                      address: "62298 Enrique Skyway Suite 082\nHannaberg, AK 43740"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Aut doloremque dicta nisi nulla quod est sed sequi. Corporis ea ipsam ipsam veritatis sit. Enim nihil repellat qui cupiditate ea ea dignissimos ex. Illum quas officiis molestias quis. Voluptas est veritatis harum amet libero. Non et impedit blanditiis et nesciunt ea numquam. Et qui est illo sapiente. Neque qui quis provident dolores. Quas et ex dolore. Veritatis ducimus unde numquam reprehenderit. Maxime deleniti culpa illum voluptates quo dolore facilis quod.'
                      length: 623
                      turns: 11
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 16
                        name: Еврейская
                        type: 'автономная область'
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 191
                      name: 'Human Resources Manager'
                      address: "97935 Ashlee Cliff Apt. 131\nRusselstad, SC 41489"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Id dicta veniam dolorem ut quisquam dolorem et. Earum nam esse ipsam nihil rerum numquam. Est eos placeat aut assumenda rerum occaecati. Ex ut delectus asperiores inventore velit maxime. Molestias voluptatem impedit voluptas cum unde. Odio quaerat sint modi ipsa aperiam beatae. Quia et nam molestias. Facilis ducimus soluta qui doloremque doloremque temporibus. Et sit et quis doloremque officia alias eos.'
                      length: 645
                      turns: 7
                      free: true
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 47
                        name: Новгородская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 15
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 1
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 193
                    name: 'Biological Scientist'
                    address: "6318 Noble Stravenue Apt. 331\nMayertville, OR 78881"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Voluptas in nostrum ipsum earum. Animi quidem expedita aut delectus voluptates veritatis. Error enim qui voluptas ipsa aut. Eligendi iste quae provident aut et. Magni a aspernatur vitae possimus quia adipisci doloribus repudiandae. Deleniti voluptas fuga omnis nam. Sint sed repudiandae et alias. Ex et nisi et atque quidem et et. Quas architecto quam placeat aliquid in sit ratione. Nisi dolor optio officia asperiores autem fugit. Deleniti adipisci fuga et cum eligendi ut.'
                    length: 133
                    turns: 72
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 86
                      name: 'Чувашская Республика'
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 193
                      name:
                        type: string
                        example: 'Biological Scientist'
                      address:
                        type: string
                        example: "6318 Noble Stravenue Apt. 331\nMayertville, OR 78881"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Voluptas in nostrum ipsum earum. Animi quidem expedita aut delectus voluptates veritatis. Error enim qui voluptas ipsa aut. Eligendi iste quae provident aut et. Magni a aspernatur vitae possimus quia adipisci doloribus repudiandae. Deleniti voluptas fuga omnis nam. Sint sed repudiandae et alias. Ex et nisi et atque quidem et et. Quas architecto quam placeat aliquid in sit ratione. Nisi dolor optio officia asperiores autem fugit. Deleniti adipisci fuga et cum eligendi ut.'
                      length:
                        type: integer
                        example: 133
                      turns:
                        type: integer
                        example: 72
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 86
                          name:
                            type: string
                            example: 'Чувашская Республика'
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: mvipswkprkwvjjqqoidscvhgkjrgznpvwtvnqpwkm
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 5
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 4
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 3
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 192
                    name: 'Lay-Out Worker'
                    address: "1072 Wunsch Ports Suite 486\nAntwonfort, NC 61265-5770"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Numquam sit magni necessitatibus itaque quos. Molestiae eius maiores sit qui. Et magni temporibus culpa. Nesciunt nesciunt quaerat qui sunt nam. Deserunt sit culpa ut dolore cumque possimus. Dignissimos facere explicabo exercitationem quis voluptatem quos beatae. Facere non quia veniam impedit id saepe. Qui suscipit quos ea provident. Non debitis dolorum nobis ducimus non labore eum. Nobis qui id ipsam porro ducimus ullam nulla dignissimos.'
                    length: 57
                    turns: 52
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 79
                      name: Челябинская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 192
                      name:
                        type: string
                        example: 'Lay-Out Worker'
                      address:
                        type: string
                        example: "1072 Wunsch Ports Suite 486\nAntwonfort, NC 61265-5770"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Numquam sit magni necessitatibus itaque quos. Molestiae eius maiores sit qui. Et magni temporibus culpa. Nesciunt nesciunt quaerat qui sunt nam. Deserunt sit culpa ut dolore cumque possimus. Dignissimos facere explicabo exercitationem quis voluptatem quos beatae. Facere non quia veniam impedit id saepe. Qui suscipit quos ea provident. Non debitis dolorum nobis ducimus non labore eum. Nobis qui id ipsam porro ducimus ullam nulla dignissimos.'
                      length:
                        type: integer
                        example: 57
                      turns:
                        type: integer
                        example: 52
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 79
                          name:
                            type: string
                            example: Челябинская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 194
                    name: Woodworker
                    address: "322 Lesch Overpass\nAnahistad, VA 36700"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Possimus est quos sequi voluptatem autem eaque veritatis quis. Hic delectus reprehenderit ut recusandae neque quibusdam deleniti. Blanditiis molestiae ducimus molestiae aut voluptatum. Sed voluptatem sunt non id doloremque earum magni sed. Rerum aliquid aut tempora at quod adipisci cupiditate. Distinctio maiores sit quam natus.'
                    length: 512
                    turns: 2
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 54
                      name: Приморский
                      type: край
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 194
                      name:
                        type: string
                        example: Woodworker
                      address:
                        type: string
                        example: "322 Lesch Overpass\nAnahistad, VA 36700"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Possimus est quos sequi voluptatem autem eaque veritatis quis. Hic delectus reprehenderit ut recusandae neque quibusdam deleniti. Blanditiis molestiae ducimus molestiae aut voluptatum. Sed voluptatem sunt non id doloremque earum magni sed. Rerum aliquid aut tempora at quod adipisci cupiditate. Distinctio maiores sit quam natus.'
                      length:
                        type: integer
                        example: 512
                      turns:
                        type: integer
                        example: 2
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 54
                          name:
                            type: string
                            example: Приморский
                          type:
                            type: string
                            example: край
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: uqrclteqrmrsbbsruxlewtwinbkkconhvokblvxulpxbstsmvkj
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - minima
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 13
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 16
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 17
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.delete.success
                  track:
                    id: 195
                    name: 'Clinical Psychologist'
                    address: "85956 Lawrence Court Apt. 867\nPort Rodburgh, IA 21494"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Beatae minus tempora earum temporibus. Enim doloribus perferendis necessitatibus quia. Ut atque magni est eveniet. Iure iusto tempore eligendi illum vel. Alias tenetur amet sit. Maiores at omnis nulla sed quasi molestiae. Dolorum enim sunt et aut eveniet eligendi. Quia cumque error sint qui id. Temporibus quod repellendus consequatur voluptatem aliquam velit. Quis animi hic vero aut aut.'
                    length: 715
                    turns: 44
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 1
                      name: Адыгея
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.delete.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 195
                      name:
                        type: string
                        example: 'Clinical Psychologist'
                      address:
                        type: string
                        example: "85956 Lawrence Court Apt. 867\nPort Rodburgh, IA 21494"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Beatae minus tempora earum temporibus. Enim doloribus perferendis necessitatibus quia. Ut atque magni est eveniet. Iure iusto tempore eligendi illum vel. Alias tenetur amet sit. Maiores at omnis nulla sed quasi molestiae. Dolorum enim sunt et aut eveniet eligendi. Quia cumque error sint qui id. Temporibus quod repellendus consequatur voluptatem aliquam velit. Quis animi hic vero aut aut.'
                      length:
                        type: integer
                        example: 715
                      turns:
                        type: integer
                        example: 44
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Адыгея
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 5
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 550
                    name: 'Leopold Adams'
                    email: rowan.schuppe@example.com
                    email_verified_at: '2025-04-23T06:54:49.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 550
                      name:
                        type: string
                        example: 'Leopold Adams'
                      email:
                        type: string
                        example: rowan.schuppe@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-23T06:54:49.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.delete.success
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 551
                    name: 'Emiliano Smith'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 551
                      name:
                        type: string
                        example: 'Emiliano Smith'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 552
                    name: 'Henry Schultz'
                    email: marcelina.macejkovic@example.net
                    email_verified_at: '2025-04-23T06:54:50.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 552
                      name:
                        type: string
                        example: 'Henry Schultz'
                      email:
                        type: string
                        example: marcelina.macejkovic@example.net
                      email_verified_at:
                        type: string
                        example: '2025-04-23T06:54:50.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: ekc
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: bode.leonard@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: k
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 553
                      name: 'Prof. Isai Waters Sr.'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 554
                      name: 'Prof. Lillie Breitenberg'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 15
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 15
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Degree
    description: 'Методы связанные с уровнями кубков. Например всероссийский, областной и т.д.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
