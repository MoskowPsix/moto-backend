openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 104|KkdxLRdLXoXvqXn2acc4K7w3f9VhPD6wHTcObTGKecae5bf1
                  token_type: Bearer
                  user:
                    id: 196
                    name: 'Воронов Макар Алексеевич'
                    email: regorov@example.org
                    email_verified_at: '2025-01-29T12:11:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 104|KkdxLRdLXoXvqXn2acc4K7w3f9VhPD6wHTcObTGKecae5bf1
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 196
                      name:
                        type: string
                        example: 'Воронов Макар Алексеевич'
                      email:
                        type: string
                        example: regorov@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:11:10.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: pink42@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'FY9D$`cE!3N=NM@vh#)C'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 105|CIZwIW9YpZxQ1YUx7L46JBicgQkLPxQJZTbFoZrm1c226e34
                  token_type: Bearer
                  user:
                    id: 197
                    name: 'Суворов Валерий Борисович'
                    email: olesy.bolsakov@example.com
                    email_verified_at: '2025-01-29T12:11:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 105|CIZwIW9YpZxQ1YUx7L46JBicgQkLPxQJZTbFoZrm1c226e34
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 197
                      name:
                        type: string
                        example: 'Суворов Валерий Борисович'
                      email:
                        type: string
                        example: olesy.bolsakov@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:11:10.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: knfmjfhbsn
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: augusta41@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: pV\RrIjRh;
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: sunt
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 6
                    name: file_6794e9d44d9fb
                    type: polis
                    path: no-file
                    data:
                      polisNumber: '1231231231'
                      issuedWhom: 'Лордом Старокм'
                      itWorksDate: 12.08.2028
                      polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: file_6794e9d44d9fb
                      type:
                        type: string
                        example: polis
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          polisNumber:
                            type: string
                            example: '1231231231'
                          issuedWhom:
                            type: string
                            example: 'Лордом Старокм'
                          itWorksDate:
                            type: string
                            example: 12.08.2028
                          polisFileLink:
                            type: string
                            example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 6
                      name: file_6794e9d44d9fb
                      type: polis
                      path: no-file
                      data:
                        polisNumber: '1231231231'
                        issuedWhom: 'Лордом Старокм'
                        itWorksDate: 12.08.2028
                        polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 6
                      name: file_6794e9d44d9fb
                      type: polis
                      path: no-file
                      data:
                        polisNumber: '1231231231'
                        issuedWhom: 'Лордом Старокм'
                        itWorksDate: 12.08.2028
                        polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 6
                    name: file_6794e9d44d9fb
                    type: polis
                    path: no-file
                    data:
                      polisNumber: '1231231231'
                      issuedWhom: 'Лордом Старокм'
                      itWorksDate: 12.08.2028
                      polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: file_6794e9d44d9fb
                      type:
                        type: string
                        example: polis
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          polisNumber:
                            type: string
                            example: '1231231231'
                          issuedWhom:
                            type: string
                            example: 'Лордом Старокм'
                          itWorksDate:
                            type: string
                            example: 12.08.2028
                          polisFileLink:
                            type: string
                            example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 6
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 6
                  name: file_6794e9d44d9fb
                  type: polis
                  path: no-file
                  data:
                    polisNumber: '1231231231'
                    issuedWhom: 'Лордом Старокм'
                    itWorksDate: 12.08.2028
                    polisFileLink: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  user_id: 3
                  created_at: '2025-01-25T13:40:36.000000Z'
                  updated_at: '2025-01-25T13:40:36.000000Z'
                properties:
                  id:
                    type: integer
                    example: 6
                  name:
                    type: string
                    example: file_6794e9d44d9fb
                  type:
                    type: string
                    example: polis
                  path:
                    type: string
                    example: no-file
                  data:
                    type: object
                    properties:
                      polisNumber:
                        type: string
                        example: '1231231231'
                      issuedWhom:
                        type: string
                        example: 'Лордом Старокм'
                      itWorksDate:
                        type: string
                        example: 12.08.2028
                      polisFileLink:
                        type: string
                        example: 'https://auto.today/media/res/6/5/7/5/3/65753.pvny0c.1280.jpg'
                  user_id:
                    type: integer
                    example: 3
                  created_at:
                    type: string
                    example: '2025-01-25T13:40:36.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-25T13:40:36.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 6
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: '2020-09-01'
                    city: Раменское
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(35222) 52-1744'
                    start_number: '331'
                    group: Ветеринар
                    rank_number: '99999'
                    rank: Сторож
                    community: 'ООО ЖелДорЦемент'
                    coach: 'Лебедев Валериан Дмитриевич'
                    moto_stamp: Prof.
                    engine: Mrs.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '2020-09-01'
                      city:
                        type: string
                        example: Раменское
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(35222) 52-1744'
                      start_number:
                        type: string
                        example: '331'
                      group:
                        type: string
                        example: Ветеринар
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Сторож
                      community:
                        type: string
                        example: 'ООО ЖелДорЦемент'
                      coach:
                        type: string
                        example: 'Лебедев Валериан Дмитриевич'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Mrs.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: quos
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: nemo
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-29T12:11:11'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: accusantium
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: excepturi
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: deleniti
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Prof.
                    surname: Prof.
                    patronymic: Mrs.
                    date_of_birth: '2000-01-14'
                    city: Подольск
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(495) 931-4212'
                    start_number: '795'
                    group: Пианист
                    rank_number: '100000'
                    rank: 'Горный проводник'
                    community: 'ПАО ТелеХозСтрой'
                    coach: 'Мельников Матвей Александрович'
                    moto_stamp: Ms.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '2000-01-14'
                      city:
                        type: string
                        example: Подольск
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(495) 931-4212'
                      start_number:
                        type: string
                        example: '795'
                      group:
                        type: string
                        example: Пианист
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Горный проводник'
                      community:
                        type: string
                        example: 'ПАО ТелеХозСтрой'
                      coach:
                        type: string
                        example: 'Мельников Матвей Александрович'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Dr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-29T12:11:11'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: id
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: eligendi
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quae
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: impedit
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 114
                      name: 'Павел Александрович Волков'
                      desc: 'Id ut ipsa et consequatur dolor dolor est. Aut maiores et assumenda dignissimos. Nisi nulla quasi sit blanditiis veniam in dolor. Voluptas nostrum unde placeat et. Eos et et quia quaerat nam.'
                      is_work: false
                      date_start: '2025-01-29T12:11:11.000000Z'
                      images: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 115
                      name: 'Ираклий Львович Гурьев'
                      desc: 'Inventore id soluta in ipsam consequatur. Et expedita vel molestiae error qui illo hic sit. Vitae tenetur hic dolorum possimus dicta porro. In possimus consequatur laudantium odit.'
                      is_work: false
                      date_start: '2025-01-29T12:11:11.000000Z'
                      images: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 14
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 10
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 117
                    name: 'Антонов Николай Алексеевич'
                    desc: 'Aut voluptates optio accusantium ut et quo. Qui aliquam possimus sed ullam qui. Rerum et distinctio quas placeat quisquam officiis.'
                    is_work: false
                    date_start: '2025-01-29T12:11:11.000000Z'
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 117
                      name:
                        type: string
                        example: 'Антонов Николай Алексеевич'
                      desc:
                        type: string
                        example: 'Aut voluptates optio accusantium ut et quo. Qui aliquam possimus sed ullam qui. Rerum et distinctio quas placeat quisquam officiis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-01-29T12:11:11.000000Z'
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: ljvvcnxvtdeecftswjxnulxvayjnkyxtyyidktvefxkoenjxjzslibpdokpzeozpbzpeefovnlsfdbh
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-29T12:11:11'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 4
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 116
                    name: 'Меркушева Марина Сергеевна'
                    desc: 'Deleniti praesentium repudiandae dicta placeat. Mollitia debitis minima ipsum. Ipsa alias consequatur vel consequatur aliquam. Sed repellat aut minus vel enim quam. Ipsa maiores id nihil.'
                    is_work: true
                    date_start: '2025-01-29T12:11:11.000000Z'
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 116
                      name:
                        type: string
                        example: 'Меркушева Марина Сергеевна'
                      desc:
                        type: string
                        example: 'Deleniti praesentium repudiandae dicta placeat. Mollitia debitis minima ipsum. Ipsa alias consequatur vel consequatur aliquam. Sed repellat aut minus vel enim quam. Ipsa maiores id nihil.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-29T12:11:11.000000Z'
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 13
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 201
                    name: 'Макаров Денис Борисович'
                    email: aivanov@example.org
                    email_verified_at: '2025-01-29T12:11:11.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 201
                      name:
                        type: string
                        example: 'Макаров Денис Борисович'
                      email:
                        type: string
                        example: aivanov@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:11:11.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 19
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 121
                      name: Водолаз
                      address: '205215, Архангельская область, город Пушкино, бульвар Ладыгина, 46'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Laboriosam eum quaerat tempore aut consequatur numquam. Porro quasi minus qui natus aut est cupiditate ut. Et incidunt deserunt provident quasi. Sed qui minima voluptates aut aperiam aspernatur vel. Sed iure aperiam suscipit facere ratione. Nobis nostrum non iusto non alias aut illum. Autem corporis odio porro enim. Consequuntur magnam sit atque at numquam blanditiis et. Rerum quidem eaque vel vitae. Quis qui recusandae quia suscipit odit illo. Labore a aperiam repellendus ut ut repudiandae.'
                      length: 569
                      turns: 56
                      free: true
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 122
                      name: Промоутер
                      address: '093825, Волгоградская область, город Серпухов, пер. Будапештсткая, 76'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Debitis excepturi rem aliquid vitae. Et consequatur illo consequuntur magnam fuga. Facilis est eum voluptas. Rem iste non aut odio consequatur. Ducimus sint provident harum ipsam quasi facilis consequuntur. Sit dolor et doloremque et. Voluptates reiciendis dolor architecto voluptate. Exercitationem accusantium et nihil sit atque non ullam. Praesentium ipsa quos debitis eos natus et sed. At minima ut saepe sapiente. Et ut non excepturi vel aut aut.'
                      length: 273
                      turns: 13
                      free: false
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 3
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 124
                    name: Сторож
                    address: '952633, Кировская область, город Коломна, пр. Косиора, 22'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Vel autem non assumenda asperiores itaque. Doloribus unde sint dolores commodi cumque totam ullam aut. Sit rerum nihil voluptas. Suscipit aut deserunt repudiandae voluptatem nihil nesciunt culpa deserunt. Qui a rerum ut rem nihil. Provident beatae repudiandae nam id fugit accusamus dolorum. Et eos est consequatur quis laborum delectus. Esse illo eum eum quasi veritatis commodi. Saepe rerum maxime sit et minima aliquam. Et aliquid voluptas possimus totam quis nemo et ex.'
                    length: 652
                    turns: 34
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 124
                      name:
                        type: string
                        example: Сторож
                      address:
                        type: string
                        example: '952633, Кировская область, город Коломна, пр. Косиора, 22'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Vel autem non assumenda asperiores itaque. Doloribus unde sint dolores commodi cumque totam ullam aut. Sit rerum nihil voluptas. Suscipit aut deserunt repudiandae voluptatem nihil nesciunt culpa deserunt. Qui a rerum ut rem nihil. Provident beatae repudiandae nam id fugit accusamus dolorum. Et eos est consequatur quis laborum delectus. Esse illo eum eum quasi veritatis commodi. Saepe rerum maxime sit et minima aliquam. Et aliquid voluptas possimus totam quis nemo et ex.'
                      length:
                        type: integer
                        example: 652
                      turns:
                        type: integer
                        example: 34
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: igjmpfidoxxkycrkrjtlkhefdlejfmmpcbeey
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: similique
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 13
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["eligendi","minus"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 123
                    name: Детектив
                    address: '387093, Оренбургская область, город Волоколамск, шоссе Ленина, 61'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Quam iusto et saepe ad voluptates vel. Inventore repudiandae consequatur recusandae libero assumenda nemo. Eos vel voluptatem blanditiis iste itaque. Consequuntur dolorem ratione voluptatum et. Iure libero id dignissimos voluptates eius. Rem quia a modi enim distinctio tempore et. Est numquam sequi ea quaerat error ut sunt. Molestiae impedit dolor nihil autem perferendis ipsum.'
                    length: 565
                    turns: 60
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
                      name:
                        type: string
                        example: Детектив
                      address:
                        type: string
                        example: '387093, Оренбургская область, город Волоколамск, шоссе Ленина, 61'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Quam iusto et saepe ad voluptates vel. Inventore repudiandae consequatur recusandae libero assumenda nemo. Eos vel voluptatem blanditiis iste itaque. Consequuntur dolorem ratione voluptatum et. Iure libero id dignissimos voluptates eius. Rem quia a modi enim distinctio tempore et. Est numquam sequi ea quaerat error ut sunt. Molestiae impedit dolor nihil autem perferendis ipsum.'
                      length:
                        type: integer
                        example: 565
                      turns:
                        type: integer
                        example: 60
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 36
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 199
                    name: 'Марк Борисович Овчинников'
                    email: klementina81@example.org
                    email_verified_at: '2025-01-29T12:11:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 199
                      name:
                        type: string
                        example: 'Марк Борисович Овчинников'
                      email:
                        type: string
                        example: klementina81@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:11:10.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 200
                    name: 'Носков Захар Романович'
                    email: egorov.nikita@example.com
                    email_verified_at: '2025-01-29T12:11:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 200
                      name:
                        type: string
                        example: 'Носков Захар Романович'
                      email:
                        type: string
                        example: egorov.nikita@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-29T12:11:10.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: bghuxijfurfyqzjxppa
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: tjacobs@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
