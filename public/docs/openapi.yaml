openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Запись на гонку успешно создана.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Запись на гонку успешно создана.'
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Запрашиваемый ресурс не найден.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Запрашиваемый ресурс не найден.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:29'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: suscipit
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: quod
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 20
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: dignissimos
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: sit
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: placeat
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: laboriosam
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: culpa
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 5
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                transactionId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the transactions table.'
                  example: 6
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Получить участников в гонке'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 1109
                      name: 'Светлана Владимировна Громова'
                      email: emelynov.georgii@example.org
                      email_verified_at: '2025-05-31T12:27:29.000000Z'
                      created_at: '2025-05-31T12:27:29.000000Z'
                      updated_at: '2025-05-31T12:27:29.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 1110
                      name: 'Майя Дмитриевна Дроздова'
                      email: tit18@example.com
                      email_verified_at: '2025-05-31T12:27:29.000000Z'
                      created_at: '2025-05-31T12:27:29.000000Z'
                      updated_at: '2025-05-31T12:27:29.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 16
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/pdf':
    get:
      summary: GetAppointmentPDF
      operationId: getAppointmentPDF
      description: 'Возвращает документ заявки гонщика для комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: non
        required: true
        schema:
          type: string
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 1111
                    name: 'Дроздов Вячеслав Алексеевич'
                    email: yna.kulakov@example.net
                    email_verified_at: '2025-05-31T12:27:29.000000Z'
                    created_at: '2025-05-31T12:27:29.000000Z'
                    updated_at: '2025-05-31T12:27:29.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1111
                      name:
                        type: string
                        example: 'Дроздов Вячеслав Алексеевич'
                      email:
                        type: string
                        example: yna.kulakov@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-31T12:27:29.000000Z'
                      created_at:
                        type: string
                        example: '2025-05-31T12:27:29.000000Z'
                      updated_at:
                        type: string
                        example: '2025-05-31T12:27:29.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sequi
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 13
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/export':
    get:
      summary: Export
      operationId: export
      description: 'Экспорт результатов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/import':
    post:
      summary: Import
      operationId: import
      description: 'Импорт результатов'
      parameters: []
      responses: {  }
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/checked':
    post:
      summary: checkedForCommission
      operationId: checkedForCommission
      description: 'Подтверждение записи участника гонки.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Заявка отменена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Заявка отменена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: ''
                  example: esse
                  nullable: true
                checked:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - checked
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: 107
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно создана.'
                  attendance:
                    id: 178
                    name: 'Егор Максимович Королёв'
                    desc: 'Neque non eius quidem ipsa ut. Dolorum adipisci consequatur qui esse. Assumenda aut blanditiis sit placeat. Nobis unde fuga itaque neque. Quisquam sed occaecati ipsa consequuntur.'
                    price: '1978'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно создана.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 178
                      name:
                        type: string
                        example: 'Егор Максимович Королёв'
                      desc:
                        type: string
                        example: 'Neque non eius quidem ipsa ut. Dolorum adipisci consequatur qui esse. Assumenda aut blanditiis sit placeat. Nobis unde fuga itaque neque. Quisquam sed occaecati ipsa consequuntur.'
                      price:
                        type: string
                        example: '1978'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: mfqpoaxjkch
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: hxu
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 47227.98722
                  nullable: false
                tax:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: qhcnfnj
                  nullable: false
                usn_income_outcome:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: lkhtoauosoghbsmalbhga
                  nullable: false
                trackId:
                  type: integer
                  description: 'This field is required when <code>raceId</code> is not present.  The <code>id</code> of an existing record in the tracks table.'
                  example: 11
                  nullable: false
                raceId:
                  type: integer
                  description: 'This field is required when <code>trackId</code> is not present.  The <code>id</code> of an existing record in the races table.'
                  example: 1
                  nullable: false
              required:
                - name
                - desc
                - price
                - tax
                - usn_income_outcome
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно изменена.'
                  attendance:
                    id: 179
                    name: 'Николай Андреевич Симонов'
                    desc: 'Doloremque expedita adipisci mollitia. Sed odit expedita nemo ea omnis amet. Recusandae dolorum rerum totam voluptatem.'
                    price: '7.1830904e+07'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно изменена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 179
                      name:
                        type: string
                        example: 'Николай Андреевич Симонов'
                      desc:
                        type: string
                        example: 'Doloremque expedita adipisci mollitia. Sed odit expedita nemo ea omnis amet. Recusandae dolorum rerum totam voluptatem.'
                      price:
                        type: string
                        example: '7.1830904e+07'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: yditgxqoydwvwioxyekxhf
                  nullable: true
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: lttpykmadw
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 6363747.6845261
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 8
                  nullable: true
                raceId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 18
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно удалена.'
                  attendance:
                    id: 180
                    name: 'Дарья Алексеевна Гурьева'
                    desc: 'Ut numquam enim eum eum adipisci. Et iure sapiente modi voluptatem ex. Repellendus et aut et enim. Quam consequatur quidem delectus rerum iusto.'
                    price: '190'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно удалена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 180
                      name:
                        type: string
                        example: 'Дарья Алексеевна Гурьева'
                      desc:
                        type: string
                        example: 'Ut numquam enim eum eum adipisci. Et iure sapiente modi voluptatem ex. Repellendus et aut et enim. Quam consequatur quidem delectus rerum iusto.'
                      price:
                        type: string
                        example: '190'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 19
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 158
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались.'
                  access_token: 1018|AGi54bYfwZU5dDKMepP4ZnmTcFc9JEqGJSPaHpRhf4d6f512
                  token_type: Bearer
                  user:
                    id: 1099
                    name: 'Степанов Тимур Львович'
                    email: sidorova.irina@example.org
                    email_verified_at: '2025-05-31T12:27:26.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались.'
                  access_token:
                    type: string
                    example: 1018|AGi54bYfwZU5dDKMepP4ZnmTcFc9JEqGJSPaHpRhf4d6f512
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1099
                      name:
                        type: string
                        example: 'Степанов Тимур Львович'
                      email:
                        type: string
                        example: sidorova.irina@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-31T12:27:26.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Такая почта не существует.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Такая почта не существует.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. Количество символов в поле value должно быть не меньше 3.'
                  example: koelpin.maryjane@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'faLP6nunk7[QlQL]G.'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы.'
                  access_token: 1019|f9KmlUTOftu2luX6dcSPixOaVYTTJfz8FIPKfeJYdceeddbc
                  token_type: Bearer
                  user:
                    id: 1100
                    name: 'Данила Дмитриевич Суханов'
                    email: belov.renata@example.com
                    email_verified_at: '2025-05-31T12:27:27.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы.'
                  access_token:
                    type: string
                    example: 1019|f9KmlUTOftu2luX6dcSPixOaVYTTJfz8FIPKfeJYdceeddbc
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1100
                      name:
                        type: string
                        example: 'Данила Дмитриевич Суханов'
                      email:
                        type: string
                        example: belov.renata@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-31T12:27:27.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Такая почта не существует.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Такая почта не существует.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: otjkdlraaimdtfxjijbgvi
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: boconner@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'i2.&a&^u$^m'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: cupiditate
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: kswcc
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: uaskdqszcn
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались.'
                  access_token: 1020|vtgPAbM3f7ecCoC7i3srQaNTWwQqhJUX3Ci76841bb59acec
                  token_type: Bearer
                  user:
                    id: 1102
                    name: 'Дарья Андреевна Емельянова'
                    email: innokentii65@example.com
                    email_verified_at: '2025-05-31T12:27:27.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались.'
                  access_token:
                    type: string
                    example: 1020|vtgPAbM3f7ecCoC7i3srQaNTWwQqhJUX3Ci76841bb59acec
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1102
                      name:
                        type: string
                        example: 'Дарья Андреевна Емельянова'
                      email:
                        type: string
                        example: innokentii65@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-31T12:27:27.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 4.'
                  example: xsrd
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: wdhasducxghe
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: earum
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: false
              required:
                - key
                - phone
      security: []
  '/api/phone/{userId}/delete':
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление телефона'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Телефон успешно удалён'
                  phone:
                    number: null
                    last_num: null
                    number_verified_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Телефон успешно удалён'
                  phone:
                    type: object
                    properties:
                      number:
                        type: string
                        example: null
                      last_num:
                        type: string
                        example: null
                      number_verified_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: aut
        required: true
        schema:
          type: string
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Команда успешно получена.'
                    commands:
                      id: 249
                      name: 'Бобров Николай Иванович'
                      full_name: 'Гурьева Инна Дмитриевна'
                      coach: 'Коновалова Альбина Фёдоровна'
                      city: Озёры
                      avatar: null
                  -
                    status: success
                    message: 'Команда успешно получена.'
                    commands:
                      id: 250
                      name: 'Тарас Борисович Мишин'
                      full_name: 'Марина Борисовна Некрасова'
                      coach: 'Павлова Ксения Львовна'
                      city: Люберцы
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 13
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 4
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: deleniti
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно создана.'
                  command:
                    id: 252
                    name: 'Изабелла Сергеевна Орлова'
                    full_name: 'Орехова Варвара Александровна'
                    coach: 'Шилова Валентина Дмитриевна'
                    city: Ногинск
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно создана.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 252
                      name:
                        type: string
                        example: 'Изабелла Сергеевна Орлова'
                      full_name:
                        type: string
                        example: 'Орехова Варвара Александровна'
                      coach:
                        type: string
                        example: 'Шилова Валентина Дмитриевна'
                      city:
                        type: string
                        example: Ногинск
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: wtkaurhznryqrpertzuhushh
                  nullable: false
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ehbkp
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vrxzpaoq
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: kueqcitzndxstg
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда по идентификатору получена успешно.'
                  command:
                    id: 251
                    name: 'Цветкова Анфиса Дмитриевна'
                    full_name: 'Абрам Борисович Шестаков'
                    coach: 'Эмилия Александровна Кононова'
                    city: Дорохово
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда по идентификатору получена успешно.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 251
                      name:
                        type: string
                        example: 'Цветкова Анфиса Дмитриевна'
                      full_name:
                        type: string
                        example: 'Абрам Борисович Шестаков'
                      coach:
                        type: string
                        example: 'Эмилия Александровна Кононова'
                      city:
                        type: string
                        example: Дорохово
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно изменена.'
                  command:
                    id: 253
                    name: 'Доронина Инна Евгеньевна'
                    full_name: 'Горбунов Юлий Евгеньевич'
                    coach: 'Кошелев Милан Дмитриевич'
                    city: 'Сергиев Посад'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно изменена.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 253
                      name:
                        type: string
                        example: 'Доронина Инна Евгеньевна'
                      full_name:
                        type: string
                        example: 'Горбунов Юлий Евгеньевич'
                      coach:
                        type: string
                        example: 'Кошелев Милан Дмитриевич'
                      city:
                        type: string
                        example: 'Сергиев Посад'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: mvjy
                  nullable: true
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vdnetzhuwecyoktxm
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: pejgyqhbtjeunvzgb
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: goelazmcpyv
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно удаленаю'
                  command:
                    id: 254
                    name: 'Рада Фёдоровна Александрова'
                    full_name: 'Лебедев Трофим Дмитриевич'
                    coach: 'Изольда Фёдоровна Назарова'
                    city: Мытищи
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно удаленаю'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 254
                      name:
                        type: string
                        example: 'Рада Фёдоровна Александрова'
                      full_name:
                        type: string
                        example: 'Лебедев Трофим Дмитриевич'
                      coach:
                        type: string
                        example: 'Изольда Фёдоровна Назарова'
                      city:
                        type: string
                        example: Мытищи
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Тренер успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Тренер успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: dolorem
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Участник удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Участник удалён.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 1112
                    name: 'Бронислав Владимирович Архипов'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1112
                      name:
                        type: string
                        example: 'Бронислав Владимирович Архипов'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 16
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 2
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 1113
                    name: 'Сергей Борисович Котов'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1113
                      name:
                        type: string
                        example: 'Сергей Борисович Котов'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: animi
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 11
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 1114
                    name: 'Иосиф Сергеевич Ефремов'
                    email: vyceslav.nosov@example.org
                    email_verified_at: '2025-05-31T12:27:37.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1114
                      name:
                        type: string
                        example: 'Иосиф Сергеевич Ефремов'
                      email:
                        type: string
                        example: vyceslav.nosov@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-31T12:27:37.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 8
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 19
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок по идентификатору получен успешно.'
                  cup:
                    id: 136
                    name: 'Лидия Романовна Третьякова'
                    year: 1979
                    stages: '3'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок по идентификатору получен успешно.'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 136
                      name:
                        type: string
                        example: 'Лидия Романовна Третьякова'
                      year:
                        type: integer
                        example: 1979
                      stages:
                        type: string
                        example: '3'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 4
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок успешно обновлён'
                  cup:
                    id: 139
                    name: 'Ян Владимирович Рожков'
                    year: 2016
                    stages: '5'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок успешно обновлён'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 139
                      name:
                        type: string
                        example: 'Ян Владимирович Рожков'
                      year:
                        type: integer
                        example: 2016
                      stages:
                        type: string
                        example: '5'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vntix
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                stages:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: dxuqvfpkaonyxprgvbtpxyi
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: expedita
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 3
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/cups/race/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение кубков по id гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок по идентификатору гонки получен успешно.'
                  cup:
                    id: 137
                    name: 'Новиков Афанасий Евгеньевич'
                    year: 2018
                    stages: '3'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок по идентификатору гонки получен успешно.'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 137
                      name:
                        type: string
                        example: 'Новиков Афанасий Евгеньевич'
                      year:
                        type: integer
                        example: 2018
                      stages:
                        type: string
                        example: '3'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                raceId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the race table.'
                  example: 3
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок успешно создан'
                  cup:
                    id: 138
                    name: 'Шашкова Флорентина Сергеевна'
                    year: 1971
                    stages: '5'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок успешно создан'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 138
                      name:
                        type: string
                        example: 'Шашкова Флорентина Сергеевна'
                      year:
                        type: integer
                        example: 1971
                      stages:
                        type: string
                        example: '5'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: whjyaakhwpg
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 13
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                stages:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vvtvnqnbwiaebhpplpr
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
              required:
                - name
                - year
  /api/degree:
    get:
      summary: get
      operationId: get
      description: 'Получить все уровни.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Уровни успешно получены.'
                    degree:
                      id: null
                      name: null
                      desc: null
                  -
                    status: success
                    message: 'Уровни успешно получены.'
                    degree:
                      id: null
                      name: null
                      desc: null
      tags:
        - Degree
      security: []
  '/api/degree/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение уровня по id.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Уровень по id успешно получен.'
                  degree:
                    id: null
                    name: null
                    desc: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Уровень по id успешно получен.'
                  degree:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Degree
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the degree.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 1076
                    name: file_683af5b17aee0
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1076
                      name:
                        type: string
                        example: file_683af5b17aee0
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: licenses
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://sanford.biz/aut-reprehenderit-repudiandae-ea-nemo-odit-ut-occaecati.html'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: porro
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: est
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 1077
                      name: file_683af5b183648
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 1078
                      name: file_683af5b1871a4
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 19
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}/files':
    get:
      summary: ''
      operationId: getApiUsersCabinetDocumentsIdFiles
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 1079
                    name: file_683af5b195731
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1079
                      name:
                        type: string
                        example: file_683af5b195731
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно изменён.'
                  document:
                    id: 1080
                    name: file_683af5b19eef7
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно изменён.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1080
                      name:
                        type: string
                        example: file_683af5b19eef7
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    post:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ проверен и изменён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ проверен и изменён.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checked:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                comment:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
              required:
                - checked
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Транзакция успешно создана.'
                  payment_link: null
                  transaction:
                    id: 132
                    status: null
                    date: null
                    user: null
                    attendances: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Транзакция успешно создана.'
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 132
                      status:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
                      attendances:
                        type: array
                        example: []
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 15
                  items:
                    type: integer
                isRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - attendanceIds
      security: []
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.transaction.get_users.success
                    transactions:
                      id: 135
                      status: null
                      date: null
                      user: null
                      attendances: []
                  -
                    status: success
                    message: messages.transaction.get_users.success
                    transactions:
                      id: 136
                      status: null
                      date: null
                      user: null
                      attendances: []
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1.'
                  example: 76
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 50.'
                  example: 5
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: desc
                  nullable: true
                  enum:
                    - asc
                    - desc
                sortField:
                  type: string
                  description: ''
                  example: type
                  nullable: true
                  enum:
                    - created_at
                    - amount
                    - type
      security: []
  '/api/transactions/{id}/regenerate-url':
    post:
      summary: regeneratePayLink
      operationId: regeneratePayLink
      description: 'Сгенерировать ссылку на оплату снова.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Транзакция успешно создана.'
                  payment_link: null
                  transaction:
                    id: 133
                    status: null
                    date: null
                    user: null
                    attendances: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Транзакция успешно создана.'
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 133
                      status:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
                      attendances:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                isRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: 101
        required: true
        schema:
          type: integer
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 134
                  status: null
                  date: null
                  user: null
                  attendances: []
                properties:
                  id:
                    type: integer
                    example: 134
                  status:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
                  attendances:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/transactions/{id}':
    get:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.get_for_id.success
                  transaction:
                    id: 137
                    status: null
                    date: null
                    user: null
                    attendances: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.get_for_id.success
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 137
                      status:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
                      attendances:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: 101
        required: true
        schema:
          type: integer
  /api/districts:
    get:
      summary: ''
      operationId: getApiDistricts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.district.get.success
                  districts:
                    -
                      id: 1
                      name: Александр
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.district.get.success
                  districts:
                    type: array
                    example:
                      -
                        id: 1
                        name: Александр
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Александр
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка удалена из избранного.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка удалена из избранного.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Класс гонки получен успешно.'
                    grades:
                      id: 260
                      name: 'Лидия Романовна Шарапова'
                      description: 'Nihil nobis necessitatibus minus harum reiciendis. Tempora ut aut sequi id.'
                  -
                    status: success
                    message: 'Класс гонки получен успешно.'
                    grades:
                      id: 261
                      name: 'Константинов Милан Александрович'
                      description: 'Labore veniam eos provident dolor rem corrupti rerum. Et nesciunt facere dicta autem. Quasi est ut quidem. Vitae sint autem illo qui aut.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 18
                  nullable: true
                gradeNotParent:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно создан.'
                  grade:
                    id: 263
                    name: 'Виктория Ивановна Большакова'
                    description: 'Asperiores eaque magni sunt dolorem neque ut facilis. Nobis magnam et ut ullam. Et dolore impedit facilis nulla aliquid rerum. Et dolores ducimus ducimus quaerat.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно создан.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 263
                      name:
                        type: string
                        example: 'Виктория Ивановна Большакова'
                      description:
                        type: string
                        example: 'Asperiores eaque magni sunt dolorem neque ut facilis. Nobis magnam et ut ullam. Et dolore impedit facilis nulla aliquid rerum. Et dolores ducimus ducimus quaerat.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ieazmqnwljdudocyjphl
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Illum modi dicta debitis mollitia quis.'
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 13
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки по идентификатору получен успешно.'
                  grade:
                    id: 262
                    name: 'Носова Алла Ивановна'
                    description: 'Qui iusto expedita aliquam dolor debitis. Et officia rerum deserunt amet voluptatem natus officia at. Ea quo accusamus nihil. Dolore in est fuga.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки по идентификатору получен успешно.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 262
                      name:
                        type: string
                        example: 'Носова Алла Ивановна'
                      description:
                        type: string
                        example: 'Qui iusto expedita aliquam dolor debitis. Et officia rerum deserunt amet voluptatem natus officia at. Ea quo accusamus nihil. Dolore in est fuga.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 19
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно изменён.'
                  grade:
                    id: 264
                    name: 'Фаина Сергеевна Федосеева'
                    description: 'Minima illo magnam hic consequatur non ipsam eligendi voluptatem. Ducimus perferendis dolor hic nobis. Ea excepturi et ratione excepturi est.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно изменён.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 264
                      name:
                        type: string
                        example: 'Фаина Сергеевна Федосеева'
                      description:
                        type: string
                        example: 'Minima illo magnam hic consequatur non ipsam eligendi voluptatem. Ducimus perferendis dolor hic nobis. Ea excepturi et ratione excepturi est.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: tsl
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Ut aut cumque quos est sit enim voluptatem.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 3
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 2
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 21
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: consectetur
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Prof.
                    surname: Dr.
                    patronymic: Prof.
                    date_of_birth: '1985-11-22'
                    city: Дмитров
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: '(495) 561-9277'
                    start_number: '920'
                    group: Интеллектуал
                    rank_number: '100000'
                    rank: Детектив
                    community: 'ЗАО Креп'
                    coach: 'Анастасия Дмитриевна Артемьева'
                    moto_stamp: Dr.
                    engine: Mr.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '1985-11-22'
                      city:
                        type: string
                        example: Дмитров
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(495) 561-9277'
                      start_number:
                        type: string
                        example: '920'
                      group:
                        type: string
                        example: Интеллектуал
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Детектив
                      community:
                        type: string
                        example: 'ЗАО Креп'
                      coach:
                        type: string
                        example: 'Анастасия Дмитриевна Артемьева'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Mr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:29'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: suscipit
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 18
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: libero
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: veniam
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: ex
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 7
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Dr.
                    surname: Dr.
                    patronymic: Miss
                    date_of_birth: '1982-05-13'
                    city: Подольск
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(812) 955-70-68'
                    start_number: '934'
                    group: Арт-директор
                    rank_number: '99999'
                    rank: 'Финансовый советник'
                    community: 'ПАО НефтьАвтоТомскПром'
                    coach: 'Лобанов Абрам Сергеевич'
                    moto_stamp: Prof.
                    engine: Dr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '1982-05-13'
                      city:
                        type: string
                        example: Подольск
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(812) 955-70-68'
                      start_number:
                        type: string
                        example: '934'
                      group:
                        type: string
                        example: Арт-директор
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Финансовый советник'
                      community:
                        type: string
                        example: 'ПАО НефтьАвтоТомскПром'
                      coach:
                        type: string
                        example: 'Лобанов Абрам Сергеевич'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:29'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: excepturi
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: amet
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: excepturi
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: vitae
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 6
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 367
                      name: 'Вера Андреевна Пономарёва'
                      desc: 'Qui ab velit aperiam saepe rem aut. Eum omnis dolorem perspiciatis. Reprehenderit iure eos enim commodi consequatur.'
                      is_work: false
                      date_start: '2025-05-31T12:27:39.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                      store: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 368
                      name: 'Валентина Львовна Макарова'
                      desc: 'Vel possimus tempore nostrum accusamus consectetur at voluptates. Autem quaerat voluptatum aspernatur dicta veniam quisquam illum. Quidem modi doloremque voluptatem dolores atque rerum omnis optio.'
                      is_work: true
                      date_start: '2025-05-31T00:31:33.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                      store: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: amet
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 5
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 17
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 18
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:28'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:28'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 11
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                degreeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the degrees table.'
                  example:
                    - 16
                  items:
                    type: integer
              required:
                - degreeIds
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 370
                    name: 'Русаков Сава Александрович'
                    desc: 'Omnis sit cumque commodi autem et numquam eligendi. Commodi tenetur quia nulla eaque aliquid aliquam. Et repellat deserunt voluptatum consequuntur. Voluptas est eum non odit est.'
                    is_work: true
                    date_start: '2025-05-31T09:15:35.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 370
                      name:
                        type: string
                        example: 'Русаков Сава Александрович'
                      desc:
                        type: string
                        example: 'Omnis sit cumque commodi autem et numquam eligendi. Commodi tenetur quia nulla eaque aliquid aliquam. Et repellat deserunt voluptatum consequuntur. Voluptas est eum non odit est.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-31T09:15:35.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: fkyt
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:28'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:28'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:28'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: true
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: libero
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 2
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 1
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 369
                    name: 'Бронислав Александрович Игнатьев'
                    desc: 'Facere consectetur earum non est ea et. Corrupti incidunt incidunt et sint omnis commodi tenetur. Deleniti similique doloribus ratione aut repellendus ab est.'
                    is_work: true
                    date_start: '2025-05-31T20:43:23.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 369
                      name:
                        type: string
                        example: 'Бронислав Александрович Игнатьев'
                      desc:
                        type: string
                        example: 'Facere consectetur earum non est ea et. Corrupti incidunt incidunt et sint omnis commodi tenetur. Deleniti similique doloribus ratione aut repellendus ab est.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-31T20:43:23.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                transactionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно удалена.'
                  race:
                    id: 374
                    name: 'Самойлова Юлия Борисовна'
                    desc: 'Ipsa exercitationem voluptatem sed quidem tempora aut. Sit voluptatem at debitis sunt sit est. Numquam voluptatum sed voluptatem ipsam dolore minus et. Deserunt et et hic aut dolor.'
                    is_work: true
                    date_start: '2025-05-31T22:51:37.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно удалена.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 374
                      name:
                        type: string
                        example: 'Самойлова Юлия Борисовна'
                      desc:
                        type: string
                        example: 'Ipsa exercitationem voluptatem sed quidem tempora aut. Sit voluptatem at debitis sunt sit est. Numquam voluptatum sed voluptatem ipsam dolore minus et. Deserunt et et hic aut dolor.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-31T22:51:37.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/transactions':
    get:
      summary: getTransactionsUserForRaceId
      operationId: getTransactionsUserForRaceId
      description: 'Получение транзакций пользователя по id гонки.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Транзакции пользователя поп id гонки получены успешно.'
                    transactions:
                      id: 138
                      status: null
                      date: null
                      user: null
                      attendances: []
                  -
                    status: success
                    message: 'Транзакции пользователя поп id гонки получены успешно.'
                    transactions:
                      id: 139
                      status: null
                      date: null
                      user: null
                      attendances: []
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 371
                    name: 'Викентий Иванович Мишин'
                    desc: 'In laborum voluptas dolorem et. Officia consequatur sed similique sit. Voluptates architecto deleniti nobis. Ipsa aut quo laudantium optio est voluptate. Ad perferendis minima dolorem qui.'
                    is_work: true
                    date_start: '2025-05-31T01:44:12.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 371
                      name:
                        type: string
                        example: 'Викентий Иванович Мишин'
                      desc:
                        type: string
                        example: 'In laborum voluptas dolorem et. Officia consequatur sed similique sit. Voluptates architecto deleniti nobis. Ipsa aut quo laudantium optio est voluptate. Ad perferendis minima dolorem qui.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-31T01:44:12.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: hbznfzwzickqxepqslauujrooc
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: officia
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:28'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:28'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-31T12:27:28'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - quis
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 17
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 8
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 12
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Состояние гонки успешно изменено на рабочее.'
                  race:
                    id: 372
                    name: 'Симонов Денис Фёдорович'
                    desc: 'Neque eos consequuntur illo. Doloribus non voluptates ut optio fugiat est sed. Et pariatur provident soluta et.'
                    is_work: true
                    date_start: '2025-05-31T23:20:30.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Состояние гонки успешно изменено на рабочее.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 372
                      name:
                        type: string
                        example: 'Симонов Денис Фёдорович'
                      desc:
                        type: string
                        example: 'Neque eos consequuntur illo. Doloribus non voluptates ut optio fugiat est sed. Et pariatur provident soluta et.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-31T23:20:30.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Доступ запрещен.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Доступ запрещен.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 6
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/add-document':
    post:
      summary: addDocument
      operationId: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно добавлен'
                  race:
                    id: 375
                    name: 'Тимофеева Нина Фёдоровна'
                    desc: 'Eveniet ea illo vel. Numquam quia rerum maxime eos odit nobis nostrum. Sint dolor et sint aut sit pariatur maxime pariatur.'
                    is_work: true
                    date_start: '2025-05-31T00:44:45.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно добавлен'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 375
                      name:
                        type: string
                        example: 'Тимофеева Нина Фёдоровна'
                      desc:
                        type: string
                        example: 'Eveniet ea illo vel. Numquam quia rerum maxime eos odit nobis nostrum. Sint dolor et sint aut sit pariatur maxime pariatur.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-31T00:44:45.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdfFiles:
                  type: array
                  description: 'Must be a file.'
                  items:
                    type: string
                    format: binary
                pdfFilesDel:
                  type: array
                  description: ''
                  example:
                    - nostrum
                  items:
                    type: string
              required:
                - pdfFiles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/race/{id}/results':
    get:
      summary: get
      operationId: get
      description: 'Получение результатов гонки по фильтрам.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: 11
                      place: 1
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: 11
                      place: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RaceResult
      security: []
    post:
      summary: create
      operationId: create
      description: 'Сохранение результатов.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Результат гонщика успешно сохранён.'
                  result:
                    scores: 11
                    place: 1
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Результат гонщика успешно сохранён.'
                  result:
                    type: object
                    properties:
                      scores:
                        type: integer
                        example: 11
                      place:
                        type: integer
                        example: 1
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RaceResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: false
                cupId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example: 11
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 19
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 19
                  nullable: false
                scores:
                  type: integer
                  description: ''
                  example: 19
                  nullable: false
                place:
                  type: integer
                  description: ''
                  example: 17
                  nullable: false
              required:
                - userId
                - gradeId
                - scores
                - place
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table.'
                  example: roy.senger@example.com
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://windler.com/maxime-aperiam-cum-voluptatibus-minus-doloremque-rerum-amet.html'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пароль был успешно изменён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пароль был успешно изменён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '8n$DtPp!}'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: labore
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 1108
                    name: 'Вероника Максимовна Симонова'
                    email: fustinova@example.com
                    email_verified_at: '2025-05-31T12:27:28.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1108
                      name:
                        type: string
                        example: 'Вероника Максимовна Симонова'
                      email:
                        type: string
                        example: fustinova@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-31T12:27:28.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 20
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 85
                      name: 'Чернов Ефим Борисович'
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 86
                      name: 'Николаев Владислав Борисович'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 72
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 72
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vggjddzhedwhhxaufiqn
                  nullable: false
                password_1:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: chvlur
                  nullable: false
                password_2:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: kzfjnptkdmbmvqslicodme
                  nullable: false
                token:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: i
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 289
                      name: Архивист
                      address: '460745, Новгородская область, город Домодедово, проезд Ладыгина, 66'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Omnis ut impedit maxime dolores. Quae officiis earum dolores pariatur praesentium sed est. Corporis asperiores nulla voluptatum quasi et dolor id. In enim et praesentium quia perferendis occaecati veniam. Est dolore quos quos neque temporibus. Itaque nam rem autem fugiat. At facere recusandae temporibus sequi velit earum aut. Aut iste eos beatae eos quae voluptate. Ratione odio odio possimus in non dolorem. Dignissimos expedita distinctio doloremque qui veniam.'
                      length: 450
                      turns: 5
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 3
                        name: Алтайский
                        type: край
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                      attendance: []
                      requisites: null
                      offer: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 290
                      name: Водолаз
                      address: '153027, Белгородская область, город Павловский Посад, проезд Гагарина, 69'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Praesentium voluptate ipsa ipsam et fugit. Aliquam est in explicabo tempore. Vel inventore harum et inventore est repellendus sed ullam. Architecto alias excepturi nulla magnam a. Eveniet in commodi mollitia beatae non. Sint aperiam iusto eius et quasi et eum. Dolorem vero aut et veniam est. Dicta et fuga quia sunt qui rerum ea. Et praesentium recusandae odit sunt quis et nesciunt fugit. Perferendis libero animi eum architecto. Perspiciatis dolores velit sint.'
                      length: 739
                      turns: 43
                      free: true
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 67
                        name: Тамбовская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                      attendance: []
                      requisites: null
                      offer: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                storeIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 7
                  nullable: true
                checkStore:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 12
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: ipsa
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 292
                    name: Абразивоструйщик
                    address: '014488, Челябинская область, город Чехов, пл. Ломоносова, 22'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Expedita aut qui nesciunt magni tempore beatae et. Sit aut nam nostrum vel quos sunt eligendi praesentium. Distinctio vel odit quasi sit autem nemo. Soluta aliquid dolor ducimus est rerum. Voluptate qui dicta amet dicta autem et natus. Omnis ratione id delectus aperiam quaerat est dolore. At quis dolorem voluptatem qui non culpa. Laudantium nostrum impedit nisi quia enim ipsam non. Corrupti et laboriosam tempore dicta dolor ut eligendi.'
                    length: 460
                    turns: 2
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 63
                      name: Севастополь
                      type: город
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 292
                      name:
                        type: string
                        example: Абразивоструйщик
                      address:
                        type: string
                        example: '014488, Челябинская область, город Чехов, пл. Ломоносова, 22'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Expedita aut qui nesciunt magni tempore beatae et. Sit aut nam nostrum vel quos sunt eligendi praesentium. Distinctio vel odit quasi sit autem nemo. Soluta aliquid dolor ducimus est rerum. Voluptate qui dicta amet dicta autem et natus. Omnis ratione id delectus aperiam quaerat est dolore. At quis dolorem voluptatem qui non culpa. Laudantium nostrum impedit nisi quia enim ipsam non. Corrupti et laboriosam tempore dicta dolor ut eligendi.'
                      length:
                        type: integer
                        example: 460
                      turns:
                        type: integer
                        example: 2
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 63
                          name:
                            type: string
                            example: Севастополь
                          type:
                            type: string
                            example: город
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: rfhqtmpqtoqwnoqwcpislfdhozqyqqyiztmlwmwvvayoaayrygrpvvqvjtmxceiezmexwitrbc
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: eos
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 3
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 6
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                requisitesName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: stxzxvkxtaayvewymvyq
                  nullable: true
                requisitesEmail:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: nitzsche.eveline@example.com
                  nullable: true
                requisitesPhone:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: maimdmymgoqpazkyuy
                  nullable: true
                requisitesINN:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: gpisahetttnbffxfq
                  nullable: true
                requisitesPricePolitics:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: aumwzxcnukzki
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 291
                    name: Бухгалтер
                    address: '738422, Новосибирская область, город Озёры, пл. Ладыгина, 65'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Est eos nihil perferendis aut odio libero tempora. Accusantium est est unde assumenda cumque. Eveniet molestias est ipsum voluptas quibusdam. Recusandae voluptate eveniet eaque numquam. Aut aliquid quo pariatur dolores. Modi voluptatum repellendus cumque corporis. Voluptates molestiae sunt illo consequatur. Sit laboriosam fuga quia et quo saepe autem similique. Omnis et quibusdam dolore deserunt. Velit et ut dicta itaque. Et et nihil itaque enim impedit. Possimus quo iusto eum optio qui.'
                    length: 214
                    turns: 80
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 48
                      name: Новосибирская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 291
                      name:
                        type: string
                        example: Бухгалтер
                      address:
                        type: string
                        example: '738422, Новосибирская область, город Озёры, пл. Ладыгина, 65'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Est eos nihil perferendis aut odio libero tempora. Accusantium est est unde assumenda cumque. Eveniet molestias est ipsum voluptas quibusdam. Recusandae voluptate eveniet eaque numquam. Aut aliquid quo pariatur dolores. Modi voluptatum repellendus cumque corporis. Voluptates molestiae sunt illo consequatur. Sit laboriosam fuga quia et quo saepe autem similique. Omnis et quibusdam dolore deserunt. Velit et ut dicta itaque. Et et nihil itaque enim impedit. Possimus quo iusto eum optio qui.'
                      length:
                        type: integer
                        example: 214
                      turns:
                        type: integer
                        example: 80
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 48
                          name:
                            type: string
                            example: Новосибирская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно изменён.'
                  track:
                    id: 293
                    name: Егерь
                    address: '023267, Иркутская область, город Воскресенск, проезд Славы, 84'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Voluptas perferendis voluptas sequi vero repudiandae ea quasi dolore. Expedita et delectus amet laboriosam qui minus. Sapiente doloremque aut qui. Voluptas architecto in magnam dolore culpa assumenda. Cum distinctio excepturi aut adipisci praesentium voluptas aut. Hic cumque et similique itaque sunt occaecati. Et fugiat odio voluptatum. Sunt ipsam ipsum voluptate maiores veritatis totam. Quos fugit maiores eos ad facilis sed quidem. Aliquid numquam aut aut.'
                    length: 242
                    turns: 7
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 81
                      name: 'Чувашская Республика'
                      type: Республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно изменён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 293
                      name:
                        type: string
                        example: Егерь
                      address:
                        type: string
                        example: '023267, Иркутская область, город Воскресенск, проезд Славы, 84'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Voluptas perferendis voluptas sequi vero repudiandae ea quasi dolore. Expedita et delectus amet laboriosam qui minus. Sapiente doloremque aut qui. Voluptas architecto in magnam dolore culpa assumenda. Cum distinctio excepturi aut adipisci praesentium voluptas aut. Hic cumque et similique itaque sunt occaecati. Et fugiat odio voluptatum. Sunt ipsam ipsum voluptate maiores veritatis totam. Quos fugit maiores eos ad facilis sed quidem. Aliquid numquam aut aut.'
                      length:
                        type: integer
                        example: 242
                      turns:
                        type: integer
                        example: 7
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 81
                          name:
                            type: string
                            example: 'Чувашская Республика'
                          type:
                            type: string
                            example: Республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: etxyhqzmmomcgjqvwfitc
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - rerum
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 10
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 19
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 12
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                requisitesName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: binolixvcfdwjwsbhgxh
                  nullable: true
                requisitesEmail:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: hschultz@example.org
                  nullable: true
                requisitesPhone:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: hcpstp
                  nullable: true
                requisitesINN:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ltlfjdetlfgjbbxrj
                  nullable: true
                requisitesPricePolitics:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: rtvvcrcbljrsaframmqxayzs
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно удалён.'
                  track:
                    id: 294
                    name: Офис-менеджер
                    address: '226259, Курганская область, город Павловский Посад, спуск Чехова, 74'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Iste hic et est blanditiis aut at sapiente. Est necessitatibus nisi et in quis optio laborum. Iure consequatur repellendus maiores ut ab ut asperiores. Quis tempora odio placeat consequatur nostrum consectetur qui aperiam. Harum quia dolores dolorum eum nihil asperiores sint. Vero culpa eos voluptatum. Est nesciunt earum molestiae culpa voluptas odio. Sapiente pariatur sit harum quos quia.'
                    length: 996
                    turns: 88
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 10
                      name: Бурятия
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно удалён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 294
                      name:
                        type: string
                        example: Офис-менеджер
                      address:
                        type: string
                        example: '226259, Курганская область, город Павловский Посад, спуск Чехова, 74'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Iste hic et est blanditiis aut at sapiente. Est necessitatibus nisi et in quis optio laborum. Iure consequatur repellendus maiores ut ab ut asperiores. Quis tempora odio placeat consequatur nostrum consectetur qui aperiam. Harum quia dolores dolorum eum nihil asperiores sint. Vero culpa eos voluptatum. Est nesciunt earum molestiae culpa voluptas odio. Sapiente pariatur sit harum quos quia.'
                      length:
                        type: integer
                        example: 996
                      turns:
                        type: integer
                        example: 88
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 10
                          name:
                            type: string
                            example: Бурятия
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 17
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно.'
                  user:
                    id: 1103
                    name: 'Прохор Александрович Архипов'
                    email: kzuravleva@example.net
                    email_verified_at: '2025-05-31T12:27:27.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1103
                      name:
                        type: string
                        example: 'Прохор Александрович Архипов'
                      email:
                        type: string
                        example: kzuravleva@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-31T12:27:27.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь был успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь был успешно удалён.'
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь получен успешно.'
                  user:
                    id: 1104
                    name: 'Галкин Гордей Фёдорович'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1104
                      name:
                        type: string
                        example: 'Галкин Гордей Фёдорович'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 14
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  user:
                    id: 1105
                    name: 'Пономарёв Ярослав Романович'
                    email: alisa93@example.net
                    email_verified_at: '2025-05-31T12:27:27.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1105
                      name:
                        type: string
                        example: 'Пономарёв Ярослав Романович'
                      email:
                        type: string
                        example: alisa93@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-31T12:27:27.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: mcpcqrihwrvxre
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: kunde.kieran@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: mbrhcqncdc
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 1106
                      name: 'Тарас Фёдорович Дорофеев'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 1107
                      name: 'Роман Алексеевич Воронов'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: facilis
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: minima
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 18
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Код для подтверждения электронной почты отправлена на вашу почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Код для подтверждения электронной почты отправлена на вашу почту.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Почта уже подтверждена.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Почта уже подтверждена.'
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ваша почта успешно подтверждена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ваша почта успешно подтверждена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Почта уже подтверждена.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Почта уже подтверждена.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Код не подходит.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Код не подходит.'
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 19
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами.'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Degree
    description: 'Методы связанные с уровнями кубков. Например всероссийский, областной и т.д.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками.'
  -
    name: RaceResult
    description: 'Управление результатами гонок.'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
