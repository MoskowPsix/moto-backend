openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 78
                      name: 'Изольда Борисовна Казакова'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 79
                      name: 'Степан Владимирович Маслов'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: animi
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 25
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 22|fGjmGCuTJspH2hIkJ51ewQWSp0Dk1W8UVs8cment05850277
                  token_type: Bearer
                  user:
                    id: 71
                    name: 'Светлана Алексеевна Смирнова'
                    email: pkapustina@example.com
                    email_verified_at: '2025-02-05T06:50:07.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 22|fGjmGCuTJspH2hIkJ51ewQWSp0Dk1W8UVs8cment05850277
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 71
                      name:
                        type: string
                        example: 'Светлана Алексеевна Смирнова'
                      email:
                        type: string
                        example: pkapustina@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-05T06:50:07.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: walsh.shyann@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: '$5}bC-vb[ft'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 23|C9UXuR7uopsALx5SeoaUWc4rvP7RSb5rWwBtGVWQeec14aeb
                  token_type: Bearer
                  user:
                    id: 72
                    name: 'Прохор Иванович Герасимов'
                    email: vbirykov@example.net
                    email_verified_at: '2025-02-05T06:50:07.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 23|C9UXuR7uopsALx5SeoaUWc4rvP7RSb5rWwBtGVWQeec14aeb
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 72
                      name:
                        type: string
                        example: 'Прохор Иванович Герасимов'
                      email:
                        type: string
                        example: vbirykov@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-05T06:50:07.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: dzudam
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: thea97@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 's61^g[2Oe'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: earum
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: nobis
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: sunt
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно изменён.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно изменён.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: '2008-06-27'
                    city: Люберцы
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '+7 (922) 501-9914'
                    start_number: '548'
                    group: Радист
                    rank_number: '99999'
                    rank: Офис-менеджер
                    community: 'ЗАО СофтСеверМотор'
                    coach: 'Лебедева Марта Александровна'
                    moto_stamp: Prof.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '2008-06-27'
                      city:
                        type: string
                        example: Люберцы
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+7 (922) 501-9914'
                      start_number:
                        type: string
                        example: '548'
                      group:
                        type: string
                        example: Радист
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Офис-менеджер
                      community:
                        type: string
                        example: 'ЗАО СофтСеверМотор'
                      coach:
                        type: string
                        example: 'Лебедева Марта Александровна'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Dr.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-05T06:50:08'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: occaecati
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Mrs.
                    date_of_birth: '1996-10-12'
                    city: Талдом
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '+7 (922) 758-2844'
                    start_number: '829'
                    group: Продюсер
                    rank_number: '99999'
                    rank: Бизнес-аналитик
                    community: 'ПАО Асбоцемент'
                    coach: 'Крюков Кирилл Фёдорович'
                    moto_stamp: Prof.
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1996-10-12'
                      city:
                        type: string
                        example: Талдом
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '+7 (922) 758-2844'
                      start_number:
                        type: string
                        example: '829'
                      group:
                        type: string
                        example: Продюсер
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Бизнес-аналитик
                      community:
                        type: string
                        example: 'ПАО Асбоцемент'
                      coach:
                        type: string
                        example: 'Крюков Кирилл Фёдорович'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Mr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: dolorum
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-05T06:50:08'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: inventore
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: ipsam
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: rem
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: eveniet
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 49
                      name: 'Баранова Злата Евгеньевна'
                      desc: 'Velit veniam sit sit dolor itaque. Magnam et debitis est id consequatur. Neque quia voluptatem quo et quos voluptas officia. Nostrum tempora sit ut adipisci pariatur.'
                      is_work: true
                      date_start: '2025-02-05T06:33:21.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 50
                      name: 'Раиса Борисовна Евсеева'
                      desc: 'Molestias fugiat laudantium officia voluptate iusto quia qui. Sit nihil asperiores sequi et corporis et. Illo distinctio porro est corrupti. Rerum magnam inventore voluptatem nemo eius in.'
                      is_work: false
                      date_start: '2025-02-05T12:18:55.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: exercitationem
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 15
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 14
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 52
                    name: 'Алексеев Стефан Алексеевич'
                    desc: 'Autem molestiae possimus dolore sint quos. Quibusdam pariatur fuga dolorum corrupti sunt voluptatum quia. Eum hic accusamus sapiente mollitia perferendis.'
                    is_work: true
                    date_start: '2025-02-05T08:12:56.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 52
                      name:
                        type: string
                        example: 'Алексеев Стефан Алексеевич'
                      desc:
                        type: string
                        example: 'Autem molestiae possimus dolore sint quos. Quibusdam pariatur fuga dolorum corrupti sunt voluptatum quia. Eum hic accusamus sapiente mollitia perferendis.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-05T08:12:56.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: dmnxbipsvrfgqsaluzacqkpupijdhpwddoz
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-05T06:50:08'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 3
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 51
                    name: 'Борисова София Евгеньевна'
                    desc: 'Voluptas doloremque cum animi nihil sint ducimus facere. Sed debitis laborum dolorem nihil itaque illum. Ut veritatis voluptatem impedit rerum. Nulla expedita qui est voluptatem.'
                    is_work: false
                    date_start: '2025-02-05T01:11:43.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 51
                      name:
                        type: string
                        example: 'Борисова София Евгеньевна'
                      desc:
                        type: string
                        example: 'Voluptas doloremque cum animi nihil sint ducimus facere. Sed debitis laborum dolorem nihil itaque illum. Ut veritatis voluptatem impedit rerum. Nulla expedita qui est voluptatem.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-02-05T01:11:43.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 53
                    name: 'Дьячкова Лилия Максимовна'
                    desc: 'Et aliquid at quisquam eum sapiente. Vero laudantium laboriosam et ex. Enim et nesciunt quia. Accusantium cumque inventore dolores rerum.'
                    is_work: true
                    date_start: '2025-02-05T16:12:35.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 53
                      name:
                        type: string
                        example: 'Дьячкова Лилия Максимовна'
                      desc:
                        type: string
                        example: 'Et aliquid at quisquam eum sapiente. Vero laudantium laboriosam et ex. Enim et nesciunt quia. Accusantium cumque inventore dolores rerum.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-05T16:12:35.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: obuhauknqmrorxwbqstkxkzshchrmfjxcrtozumzcogsmnpupmncbipzbdiihtyfbelmetfe
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-05T06:50:08'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 11
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - cum
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 77
                    name: 'Алиса Андреевна Семёнова'
                    email: anfisa61@example.net
                    email_verified_at: '2025-02-05T06:50:08.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 77
                      name:
                        type: string
                        example: 'Алиса Андреевна Семёнова'
                      email:
                        type: string
                        example: anfisa61@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-05T06:50:08.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 9
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 39
                      name: Водитель
                      address: '740913, Псковская область, город Шатура, спуск Славы, 13'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Facere temporibus beatae id voluptatem eius consequuntur aliquam. Fugiat quibusdam cupiditate porro quae architecto occaecati eius similique. Quod similique nam ut tenetur consequatur. Ad id aspernatur molestiae laboriosam. Non velit deserunt rem tenetur. Facere dolorum voluptas sit quis. Qui ut velit fugiat et. Rerum ut voluptatibus rerum aperiam ab impedit. Ratione vero repellendus doloribus quis.'
                      length: 249
                      turns: 44
                      free: false
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 40
                      name: Арт-директор
                      address: '045561, Воронежская область, город Красногорск, спуск Ладыгина, 94'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Deleniti nulla nemo ut quo soluta. Architecto qui illo officiis quibusdam. Soluta maiores voluptatem aut rerum harum. Voluptatem modi laudantium voluptatem ea adipisci molestiae neque reiciendis. Debitis illo blanditiis alias harum autem reiciendis. In et est qui cum quam quia accusantium. Minus ut aut fugiat ut exercitationem. Ducimus ipsa iusto sapiente animi culpa nisi. Non voluptas fuga ut veritatis. Soluta distinctio et et mollitia labore nisi vitae. Quis est et facere.'
                      length: 474
                      turns: 88
                      free: true
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 5
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 42
                    name: 'Креативный директор'
                    address: '100531, Вологодская область, город Егорьевск, въезд Ленина, 22'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Fuga impedit accusantium maiores quis et. Et facilis eum inventore rerum. Aperiam perspiciatis impedit ut velit nisi aliquid. Reiciendis vitae illo ut culpa distinctio et. Voluptatibus sint pariatur reprehenderit modi consequatur quam eos sit. Quod aut nesciunt molestias illo id. Ut quia reprehenderit id magnam iusto ut officia. Et vero molestiae quo esse ut quidem dolore dolorum. Distinctio tempora quidem unde provident quo sit. Nulla quibusdam est incidunt porro non. Ea hic quae earum.'
                    length: 761
                    turns: 81
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                      name:
                        type: string
                        example: 'Креативный директор'
                      address:
                        type: string
                        example: '100531, Вологодская область, город Егорьевск, въезд Ленина, 22'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Fuga impedit accusantium maiores quis et. Et facilis eum inventore rerum. Aperiam perspiciatis impedit ut velit nisi aliquid. Reiciendis vitae illo ut culpa distinctio et. Voluptatibus sint pariatur reprehenderit modi consequatur quam eos sit. Quod aut nesciunt molestias illo id. Ut quia reprehenderit id magnam iusto ut officia. Et vero molestiae quo esse ut quidem dolore dolorum. Distinctio tempora quidem unde provident quo sit. Nulla quibusdam est incidunt porro non. Ea hic quae earum.'
                      length:
                        type: integer
                        example: 761
                      turns:
                        type: integer
                        example: 81
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: rosulodvrqnuqnplndljfjlvyszdcyvuofbkrftjrcf
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: quam
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 13
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["blanditiis","ex"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["nihil","laboriosam"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 41
                    name: Жокей
                    address: '784906, Ярославская область, город Люберцы, въезд Бухарестская, 61'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Sunt voluptatum itaque cumque quod. Laudantium est aspernatur eum magni quasi et eos. Provident enim id deleniti eius. Quam fugit ipsam corrupti qui a distinctio atque blanditiis. Dolorem quis sed quam tempore voluptatibus. Nisi ut voluptatum itaque voluptatum sed at repellendus.'
                    length: 654
                    turns: 99
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 41
                      name:
                        type: string
                        example: Жокей
                      address:
                        type: string
                        example: '784906, Ярославская область, город Люберцы, въезд Бухарестская, 61'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Sunt voluptatum itaque cumque quod. Laudantium est aspernatur eum magni quasi et eos. Provident enim id deleniti eius. Quam fugit ipsam corrupti qui a distinctio atque blanditiis. Dolorem quis sed quam tempore voluptatibus. Nisi ut voluptatum itaque voluptatum sed at repellendus.'
                      length:
                        type: integer
                        example: 654
                      turns:
                        type: integer
                        example: 99
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 74
                    name: 'Калинин Филипп Александрович'
                    email: rozkov.dmitrii@example.net
                    email_verified_at: '2025-02-05T06:50:07.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 74
                      name:
                        type: string
                        example: 'Калинин Филипп Александрович'
                      email:
                        type: string
                        example: rozkov.dmitrii@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-05T06:50:07.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь получен успешно.'
                  user:
                    id: 75
                    name: 'Киселёв Лаврентий Сергеевич'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 75
                      name:
                        type: string
                        example: 'Киселёв Лаврентий Сергеевич'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  user:
                    id: 76
                    name: 'Лихачёва Антонина Максимовна'
                    email: bobylev.abram@example.com
                    email_verified_at: '2025-02-05T06:50:07.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 76
                      name:
                        type: string
                        example: 'Лихачёва Антонина Максимовна'
                      email:
                        type: string
                        example: bobylev.abram@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-05T06:50:07.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: wmeicmiwlkmxk
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: qoberbrunner@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Код для подтверждения электронной почты отправлена на вашу почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Код для подтверждения электронной почты отправлена на вашу почту.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Почта уже подтверждена'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Почта уже подтверждена'
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ваша почта успешно подтверждена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ваша почта успешно подтверждена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Почта уже подтверждена'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Почта уже подтверждена'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Код не подходит'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Код не подходит'
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 15
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
