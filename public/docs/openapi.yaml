openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 10
                      name: 'Жанна Борисовна Беляева'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 11
                      name: 'Юдина Лилия Андреевна'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 1
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 6|PDzZH2N2v2Y8dZ096SXajx8sc4x7Ij67cotgHIa1f918c179
                  token_type: Bearer
                  user:
                    id: 4
                    name: 'Вера Евгеньевна Аксёнова'
                    email: elena.petrov@example.net
                    email_verified_at: '2025-01-30T10:01:38.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 6|PDzZH2N2v2Y8dZ096SXajx8sc4x7Ij67cotgHIa1f918c179
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Вера Евгеньевна Аксёнова'
                      email:
                        type: string
                        example: elena.petrov@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:01:38.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: cummings.meta@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: '|Pjb(aZ~=BTOI'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 7|xZLp4sqmqUexi9BflGb2yNDYSNeiG9XITTtgGGHY4f9b4d6e
                  token_type: Bearer
                  user:
                    id: 5
                    name: 'Эрик Алексеевич Галкин'
                    email: vadim.zimin@example.net
                    email_verified_at: '2025-01-30T10:01:38.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 7|xZLp4sqmqUexi9BflGb2yNDYSNeiG9XITTtgGGHY4f9b4d6e
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: 'Эрик Алексеевич Галкин'
                      email:
                        type: string
                        example: vadim.zimin@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:01:38.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: kcedktuustnmya
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: miles02@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: "07>'8<QJ:"
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: rerum
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 1
                    name: file_679a343379b0a
                    type: polis
                    path: no-file
                    data:
                      polisNumber: null
                      issuedWhom: null
                      itWorksDate: null
                      polisFileLink: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_679a343379b0a
                      type:
                        type: string
                        example: polis
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          polisNumber:
                            type: string
                            example: null
                          issuedWhom:
                            type: string
                            example: null
                          itWorksDate:
                            type: string
                            example: null
                          polisFileLink:
                            type: string
                            example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 1
                      name: file_679a343379b0a
                      type: polis
                      path: no-file
                      data:
                        polisNumber: null
                        issuedWhom: null
                        itWorksDate: null
                        polisFileLink: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 1
                      name: file_679a343379b0a
                      type: polis
                      path: no-file
                      data:
                        polisNumber: null
                        issuedWhom: null
                        itWorksDate: null
                        polisFileLink: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 1
                    name: file_679a343379b0a
                    type: polis
                    path: no-file
                    data:
                      polisNumber: null
                      issuedWhom: null
                      itWorksDate: null
                      polisFileLink: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_679a343379b0a
                      type:
                        type: string
                        example: polis
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          polisNumber:
                            type: string
                            example: null
                          issuedWhom:
                            type: string
                            example: null
                          itWorksDate:
                            type: string
                            example: null
                          polisFileLink:
                            type: string
                            example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: file_679a343379b0a
                  type: polis
                  path: no-file
                  data:
                    polisNumber: null
                    issuedWhom: null
                    itWorksDate: null
                    polisFileLink: null
                  user_id: 3
                  created_at: '2025-01-29T13:59:15.000000Z'
                  updated_at: '2025-01-29T13:59:15.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: file_679a343379b0a
                  type:
                    type: string
                    example: polis
                  path:
                    type: string
                    example: no-file
                  data:
                    type: object
                    properties:
                      polisNumber:
                        type: string
                        example: null
                      issuedWhom:
                        type: string
                        example: null
                      itWorksDate:
                        type: string
                        example: null
                      polisFileLink:
                        type: string
                        example: null
                  user_id:
                    type: integer
                    example: 3
                  created_at:
                    type: string
                    example: '2025-01-29T13:59:15.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-29T13:59:15.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: '1973-04-18'
                    city: Москва
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(35222) 08-2832'
                    start_number: '135'
                    group: Экономист
                    rank_number: '100000'
                    rank: Диктор
                    community: 'ОАО Мотор'
                    coach: 'Изольда Алексеевна Пономарёва'
                    moto_stamp: Dr.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '1973-04-18'
                      city:
                        type: string
                        example: Москва
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(35222) 08-2832'
                      start_number:
                        type: string
                        example: '135'
                      group:
                        type: string
                        example: Экономист
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Диктор
                      community:
                        type: string
                        example: 'ОАО Мотор'
                      coach:
                        type: string
                        example: 'Изольда Алексеевна Пономарёва'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Dr.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: quidem
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T10:01:38'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: veniam
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 13
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: quam
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Prof.
                    date_of_birth: '2015-01-26'
                    city: Можайск
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(495) 837-1471'
                    start_number: '434'
                    group: Садовник
                    rank_number: '99999'
                    rank: Администратор
                    community: 'МФО ТверьТекстиль'
                    coach: 'Наталья Сергеевна Мясникова'
                    moto_stamp: Prof.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '2015-01-26'
                      city:
                        type: string
                        example: Можайск
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(495) 837-1471'
                      start_number:
                        type: string
                        example: '434'
                      group:
                        type: string
                        example: Садовник
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Администратор
                      community:
                        type: string
                        example: 'МФО ТверьТекстиль'
                      coach:
                        type: string
                        example: 'Наталья Сергеевна Мясникова'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Dr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T10:01:38'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: quasi
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: deleniti
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: perferendis
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 13
                      name: 'Леонид Фёдорович Фокин'
                      desc: 'Iure vitae inventore eum enim et. Natus modi modi repellat molestiae. Voluptatem similique officiis voluptatem saepe quibusdam voluptas rerum.'
                      is_work: true
                      date_start: '2025-01-30T10:01:38.000000Z'
                      images: null
                      contacts: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 14
                      name: 'Моисеева Рада Владимировна'
                      desc: 'Nihil dolores ipsam in rerum eligendi. Qui doloremque quaerat eum rem consequuntur. Dicta non commodi necessitatibus ut.'
                      is_work: false
                      date_start: '2025-01-30T10:01:38.000000Z'
                      images: null
                      contacts: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 10
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 2
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 16
                    name: 'Роберт Борисович Кабанов'
                    desc: 'Est quae et minima corporis maxime. Qui inventore et ut aliquid. Et excepturi provident voluptate eum adipisci ipsam ad.'
                    is_work: true
                    date_start: '2025-01-30T10:01:38.000000Z'
                    images: null
                    contacts: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Роберт Борисович Кабанов'
                      desc:
                        type: string
                        example: 'Est quae et minima corporis maxime. Qui inventore et ut aliquid. Et excepturi provident voluptate eum adipisci ipsam ad.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-30T10:01:38.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: okoqrojtlalvqqcwdqtroixxhrjyfliynknjkfsgxhfphw
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-30T10:01:38'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 15
                    name: 'Рожков Прохор Дмитриевич'
                    desc: 'Asperiores maiores et ad similique molestiae iusto at. In aliquid qui velit consequuntur. Nihil id qui et. Laboriosam ipsum voluptatem pariatur culpa et.'
                    is_work: true
                    date_start: '2025-01-30T10:01:38.000000Z'
                    images: null
                    contacts: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Рожков Прохор Дмитриевич'
                      desc:
                        type: string
                        example: 'Asperiores maiores et ad similique molestiae iusto at. In aliquid qui velit consequuntur. Nihil id qui et. Laboriosam ipsum voluptatem pariatur culpa et.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-01-30T10:01:38.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 9
                    name: 'Арсений Евгеньевич Богданов'
                    email: robert.kabanova@example.net
                    email_verified_at: '2025-01-30T10:01:38.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: 'Арсений Евгеньевич Богданов'
                      email:
                        type: string
                        example: robert.kabanova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:01:38.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 14
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 11
                      name: 'Информационный работник'
                      address: '453086, Самарская область, город Видное, пер. Бухарестская, 92'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Velit non est optio rem voluptatem placeat. Aperiam qui tenetur aut aliquam. In magnam omnis explicabo atque expedita et veritatis quisquam. Et aut animi fugiat adipisci. Earum expedita dolor consequatur possimus. Qui vel quia ad ut fuga sint. Nostrum fugiat sed id aut. Non id et commodi est. Est commodi non libero qui laudantium provident earum.'
                      length: 927
                      turns: 97
                      free: true
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 12
                      name: Столяр
                      address: '437763, Свердловская область, город Коломна, пер. Чехова, 47'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Ea eos natus illo aspernatur. In omnis placeat qui praesentium nihil culpa. Ut odio aut illum et eum saepe modi. At eligendi in qui veniam veniam molestiae. Quod cupiditate ab officiis quia odit fuga suscipit earum. Placeat aspernatur illum eveniet ut doloremque quia. Aliquam sint sed eum qui eos corporis voluptate reprehenderit. Ratione ducimus unde aliquid non exercitationem. Ut enim debitis nesciunt. Doloremque expedita consequatur itaque. Omnis maxime atque nam vel vel dolor.'
                      length: 473
                      turns: 83
                      free: false
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 17
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 14
                    name: Промоутер
                    address: '250566, Ярославская область, город Видное, ул. Сталина, 95'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Maxime consequatur ab saepe est qui reiciendis. Modi libero quam quasi non exercitationem perferendis. Aliquid quia ipsa nam quia. Porro necessitatibus quasi natus ut sint culpa ut. Sed quisquam voluptatem deleniti sunt et voluptatem. Incidunt inventore deleniti vel quam blanditiis in. Dolores quas aut aut iste consequatur vel. Maiores perspiciatis molestiae excepturi fugit.'
                    length: 173
                    turns: 42
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: Промоутер
                      address:
                        type: string
                        example: '250566, Ярославская область, город Видное, ул. Сталина, 95'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Maxime consequatur ab saepe est qui reiciendis. Modi libero quam quasi non exercitationem perferendis. Aliquid quia ipsa nam quia. Porro necessitatibus quasi natus ut sint culpa ut. Sed quisquam voluptatem deleniti sunt et voluptatem. Incidunt inventore deleniti vel quam blanditiis in. Dolores quas aut aut iste consequatur vel. Maiores perspiciatis molestiae excepturi fugit.'
                      length:
                        type: integer
                        example: 173
                      turns:
                        type: integer
                        example: 42
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: pwiuzpzstruoxxyifwymjtzjsgspqkqd
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: dicta
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 18
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["est","dolorum"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["est","aliquam"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 13
                    name: Автоинструктор
                    address: '753128, Амурская область, город Егорьевск, въезд Домодедовская, 76'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Rerum aliquam necessitatibus quaerat sunt et. Sed sed aperiam est voluptatum ad omnis. Sint et sint in distinctio qui eum distinctio. Quia asperiores sit quia culpa dicta nostrum totam. Consequatur est iusto aliquam. Rem eum deleniti porro similique perspiciatis. Vel natus nobis consequuntur. Quia rerum sapiente voluptatibus ipsam voluptas.'
                    length: 184
                    turns: 22
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: Автоинструктор
                      address:
                        type: string
                        example: '753128, Амурская область, город Егорьевск, въезд Домодедовская, 76'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Rerum aliquam necessitatibus quaerat sunt et. Sed sed aperiam est voluptatum ad omnis. Sint et sint in distinctio qui eum distinctio. Quia asperiores sit quia culpa dicta nostrum totam. Consequatur est iusto aliquam. Rem eum deleniti porro similique perspiciatis. Vel natus nobis consequuntur. Quia rerum sapiente voluptatibus ipsam voluptas.'
                      length:
                        type: integer
                        example: 184
                      turns:
                        type: integer
                        example: 22
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 7
                    name: 'Дроздов Ян Борисович'
                    email: kirill.panfilova@example.org
                    email_verified_at: '2025-01-30T10:01:38.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 7
                      name:
                        type: string
                        example: 'Дроздов Ян Борисович'
                      email:
                        type: string
                        example: kirill.panfilova@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:01:38.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 8
                    name: 'Игорь Владимирович Наумов'
                    email: nfedotova@example.net
                    email_verified_at: '2025-01-30T10:01:38.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 8
                      name:
                        type: string
                        example: 'Игорь Владимирович Наумов'
                      email:
                        type: string
                        example: nfedotova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-30T10:01:38.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: kiknjpxozuxltpr
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: toy.floyd@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
