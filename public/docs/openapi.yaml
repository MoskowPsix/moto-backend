openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 27
                      name: 'Нестеров Иван Владимирович'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 28
                      name: 'Жуков Рафаил Александрович'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 12
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 8|yXaZIt2vZ7RsJmU2lNMclsmcv2MqvRzBBh32JUUke96701b9
                  token_type: Bearer
                  user:
                    id: 20
                    name: 'Федосья Алексеевна Орехова'
                    email: rbirykova@example.org
                    email_verified_at: '2025-02-04T07:27:53.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 8|yXaZIt2vZ7RsJmU2lNMclsmcv2MqvRzBBh32JUUke96701b9
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
                      name:
                        type: string
                        example: 'Федосья Алексеевна Орехова'
                      email:
                        type: string
                        example: rbirykova@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-04T07:27:53.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: hjacobson@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'mR4C:uu,k'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 9|io43YOkaxxNjxMtCOOQfzcnjzUJf6EJVGtM9tw7Ne02ad4d0
                  token_type: Bearer
                  user:
                    id: 21
                    name: 'Ширяева Жанна Львовна'
                    email: karpova.vsevolod@example.com
                    email_verified_at: '2025-02-04T07:27:53.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 9|io43YOkaxxNjxMtCOOQfzcnjzUJf6EJVGtM9tw7Ne02ad4d0
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 21
                      name:
                        type: string
                        example: 'Ширяева Жанна Львовна'
                      email:
                        type: string
                        example: karpova.vsevolod@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-04T07:27:53.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: zvvanzzlfyglmebooyhqwv
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: oschmeler@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '1Zxj&2kc`~i'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: maxime
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: autem
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 9
                  name: file_67a1c13b2f577
                  type: licenses
                  path: no-file
                  data: '{"licensesNumber":"11112222","licensesFileLink":"ssssssssss"}'
                  user_id: 1
                  created_at: '2025-02-04T07:26:51.000000Z'
                  updated_at: '2025-02-04T07:26:51.000000Z'
                properties:
                  id:
                    type: integer
                    example: 9
                  name:
                    type: string
                    example: file_67a1c13b2f577
                  type:
                    type: string
                    example: licenses
                  path:
                    type: string
                    example: no-file
                  data:
                    type: string
                    example: '{"licensesNumber":"11112222","licensesFileLink":"ssssssssss"}'
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2025-02-04T07:26:51.000000Z'
                  updated_at:
                    type: string
                    example: '2025-02-04T07:26:51.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Ms.
                    surname: Mr.
                    patronymic: Miss
                    date_of_birth: '2010-12-10'
                    city: Волоколамск
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: 8-800-225-7271
                    start_number: '276'
                    group: Бизнес-аналитик
                    rank_number: '100000'
                    rank: Пианист
                    community: 'ОАО Лифт'
                    coach: 'Белоусов Гарри Иванович'
                    moto_stamp: Ms.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ms.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '2010-12-10'
                      city:
                        type: string
                        example: Волоколамск
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 8-800-225-7271
                      start_number:
                        type: string
                        example: '276'
                      group:
                        type: string
                        example: Бизнес-аналитик
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Пианист
                      community:
                        type: string
                        example: 'ОАО Лифт'
                      coach:
                        type: string
                        example: 'Белоусов Гарри Иванович'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Dr.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T07:27:53'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: esse
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: quam
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: est
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Prof.
                    surname: Dr.
                    patronymic: Dr.
                    date_of_birth: '1978-11-30'
                    city: Раменское
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '+7 (922) 647-1937'
                    start_number: '117'
                    group: Стилист
                    rank_number: '99999'
                    rank: Критик
                    community: 'ООО Креп'
                    coach: 'Лобанова Изольда Владимировна'
                    moto_stamp: Prof.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '1978-11-30'
                      city:
                        type: string
                        example: Раменское
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+7 (922) 647-1937'
                      start_number:
                        type: string
                        example: '117'
                      group:
                        type: string
                        example: Стилист
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Критик
                      community:
                        type: string
                        example: 'ООО Креп'
                      coach:
                        type: string
                        example: 'Лобанова Изольда Владимировна'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Dr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T07:27:54'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: ratione
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: deserunt
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 24
                      name: 'Валентин Александрович Титов'
                      desc: 'Provident adipisci beatae praesentium illum. Blanditiis sunt et nesciunt sit eum. Sed ipsa impedit eveniet amet architecto deleniti.'
                      is_work: true
                      date_start: '2025-02-04T13:37:07.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 25
                      name: 'Евгений Максимович Киселёв'
                      desc: 'Quod dolores nisi nihil corrupti quasi nostrum. Eum saepe sit dicta delectus dolor enim harum. Quisquam sapiente eaque voluptas consectetur. Aut explicabo sequi magni ut consequatur.'
                      is_work: true
                      date_start: '2025-02-04T03:37:26.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: repellendus
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 24
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 27
                    name: 'Алла Максимовна Брагина'
                    desc: 'Ut sint possimus odit saepe ratione facere. Aliquam veniam est tempora sint. Repudiandae corporis voluptas fugit cum commodi aut tenetur hic.'
                    is_work: true
                    date_start: '2025-02-04T08:30:53.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 27
                      name:
                        type: string
                        example: 'Алла Максимовна Брагина'
                      desc:
                        type: string
                        example: 'Ut sint possimus odit saepe ratione facere. Aliquam veniam est tempora sint. Repudiandae corporis voluptas fugit cum commodi aut tenetur hic.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-04T08:30:53.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: zukoslgcyggkxbnowypmfzstwhwxicuhycjxispgmewtpmthpelvddfwslmctxhlpfzikfkzex
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T07:27:53'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 10
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 26
                    name: 'Шестаков Виль Сергеевич'
                    desc: 'Explicabo nobis vero molestiae sed molestiae explicabo. Nam deserunt cumque architecto repellat beatae voluptatum.'
                    is_work: true
                    date_start: '2025-02-04T00:45:26.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 26
                      name:
                        type: string
                        example: 'Шестаков Виль Сергеевич'
                      desc:
                        type: string
                        example: 'Explicabo nobis vero molestiae sed molestiae explicabo. Nam deserunt cumque architecto repellat beatae voluptatum.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-04T00:45:26.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 26
                    name: 'Маркова Елизавета Максимовна'
                    email: nsarov@example.net
                    email_verified_at: '2025-02-04T07:27:53.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 26
                      name:
                        type: string
                        example: 'Маркова Елизавета Максимовна'
                      email:
                        type: string
                        example: nsarov@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-04T07:27:53.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 13
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 19
                      name: Сторож
                      address: '826007, Омская область, город Истра, наб. Будапештсткая, 37'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Et veritatis sunt aliquid iusto ducimus. Voluptatem quia ipsum reiciendis. Quam quas praesentium totam repellendus itaque modi voluptate. Nihil voluptas quia saepe nostrum esse facilis consequatur. Dolore id atque in odit non commodi enim. Soluta dignissimos reiciendis sit qui cupiditate exercitationem inventore. Nostrum corrupti sequi similique magni expedita.'
                      length: 88
                      turns: 73
                      free: false
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 20
                      name: Администратор
                      address: '472402, Псковская область, город Сергиев Посад, ул. Сталина, 42'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Tenetur facere repellat laborum eius. Ut nihil sed ut non corrupti recusandae omnis. Quidem omnis quasi in hic et sequi et. Consequatur est magnam hic optio asperiores voluptas. Laborum quis quas est non rerum voluptate ut. Est non sapiente quia ad. Dignissimos praesentium quidem nam numquam. Omnis officia aut qui sunt assumenda.'
                      length: 530
                      turns: 83
                      free: true
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 2
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 22
                    name: Водолаз
                    address: '619762, Магаданская область, город Талдом, шоссе Ломоносова, 41'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Dolores dolorem veritatis rerum impedit error. Et recusandae delectus aut omnis architecto. Delectus aperiam iste et. Est quo dignissimos aut in voluptatem. Soluta dolorum est cum cum consequatur enim adipisci. Dolores quasi ab debitis id necessitatibus et. Eum est similique fugit in commodi minus quis. Molestiae et consequatur ratione molestiae nostrum est. Quasi sint et sed voluptatibus voluptas. Cumque minus ad fugit voluptatem et.'
                    length: 958
                    turns: 14
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 22
                      name:
                        type: string
                        example: Водолаз
                      address:
                        type: string
                        example: '619762, Магаданская область, город Талдом, шоссе Ломоносова, 41'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Dolores dolorem veritatis rerum impedit error. Et recusandae delectus aut omnis architecto. Delectus aperiam iste et. Est quo dignissimos aut in voluptatem. Soluta dolorum est cum cum consequatur enim adipisci. Dolores quasi ab debitis id necessitatibus et. Eum est similique fugit in commodi minus quis. Molestiae et consequatur ratione molestiae nostrum est. Quasi sint et sed voluptatibus voluptas. Cumque minus ad fugit voluptatem et.'
                      length:
                        type: integer
                        example: 958
                      turns:
                        type: integer
                        example: 14
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: asuzgjjexrntifbzzoiyhwpnayazazfv
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: error
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 9
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 13
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["ab","sed"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["cum","quas"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 21
                    name: Администратор
                    address: '736498, Мурманская область, город Подольск, пл. Ленина, 73'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Id ut ea soluta impedit aut. Velit alias et excepturi aut natus sit. Deserunt officia quasi ipsum doloremque quas ad earum excepturi. Quod nesciunt ut et ut commodi quod. Incidunt adipisci possimus sit. Quia rerum fugiat eligendi rerum. Molestiae consequuntur minus perferendis qui amet fugiat ullam. Vero maxime numquam qui velit debitis. Voluptas numquam voluptas quo laudantium quaerat mollitia.'
                    length: 119
                    turns: 7
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 21
                      name:
                        type: string
                        example: Администратор
                      address:
                        type: string
                        example: '736498, Мурманская область, город Подольск, пл. Ленина, 73'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Id ut ea soluta impedit aut. Velit alias et excepturi aut natus sit. Deserunt officia quasi ipsum doloremque quas ad earum excepturi. Quod nesciunt ut et ut commodi quod. Incidunt adipisci possimus sit. Quia rerum fugiat eligendi rerum. Molestiae consequuntur minus perferendis qui amet fugiat ullam. Vero maxime numquam qui velit debitis. Voluptas numquam voluptas quo laudantium quaerat mollitia.'
                      length:
                        type: integer
                        example: 119
                      turns:
                        type: integer
                        example: 7
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 23
                    name: 'Тамара Евгеньевна Силина'
                    email: ermakov.platon@example.com
                    email_verified_at: '2025-02-04T07:27:53.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 23
                      name:
                        type: string
                        example: 'Тамара Евгеньевна Силина'
                      email:
                        type: string
                        example: ermakov.platon@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-04T07:27:53.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 24
                    name: 'Илларион Владимирович Ермаков'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 24
                      name:
                        type: string
                        example: 'Илларион Владимирович Ермаков'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 25
                    name: 'Зимина Лидия Ивановна'
                    email: koroleva.polina@example.com
                    email_verified_at: '2025-02-04T07:27:53.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 25
                      name:
                        type: string
                        example: 'Зимина Лидия Ивановна'
                      email:
                        type: string
                        example: koroleva.polina@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-04T07:27:53.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: sxdhzz
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: karelle01@example.org
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses: {  }
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses: {  }
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 5
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
