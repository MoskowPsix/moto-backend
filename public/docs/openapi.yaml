openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: perferendis
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:55'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: illo
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: vero
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 6
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: molestias
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: earum
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: maxime
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: ipsam
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: non
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 6
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 13
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 344
                      name: 'Garrick Fritsch'
                      email: towne.lulu@example.net
                      email_verified_at: '2025-04-11T12:52:55.000000Z'
                      created_at: '2025-04-11T12:52:55.000000Z'
                      updated_at: '2025-04-11T12:52:55.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 345
                      name: 'Floyd Streich'
                      email: rebeka.pouros@example.org
                      email_verified_at: '2025-04-11T12:52:55.000000Z'
                      created_at: '2025-04-11T12:52:55.000000Z'
                      updated_at: '2025-04-11T12:52:55.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 18
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 346
                    name: 'Maryse Beatty'
                    email: julia53@example.net
                    email_verified_at: '2025-04-11T12:52:56.000000Z'
                    created_at: '2025-04-11T12:52:56.000000Z'
                    updated_at: '2025-04-11T12:52:56.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 346
                      name:
                        type: string
                        example: 'Maryse Beatty'
                      email:
                        type: string
                        example: julia53@example.net
                      email_verified_at:
                        type: string
                        example: '2025-04-11T12:52:56.000000Z'
                      created_at:
                        type: string
                        example: '2025-04-11T12:52:56.000000Z'
                      updated_at:
                        type: string
                        example: '2025-04-11T12:52:56.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 107
                    name: 'Tristin Heaney'
                    desc: 'Sit dolores et rerum animi. Nihil quia aut tenetur minus soluta. Vero eligendi sed omnis. Architecto id provident vero.'
                    price: '8.656749e+06'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 107
                      name:
                        type: string
                        example: 'Tristin Heaney'
                      desc:
                        type: string
                        example: 'Sit dolores et rerum animi. Nihil quia aut tenetur minus soluta. Vero eligendi sed omnis. Architecto id provident vero.'
                      price:
                        type: string
                        example: '8.656749e+06'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: crgqakclgrlwhsp
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wfntitlmkbekilkqvfumjrs
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 28044363.462974
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 9
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 108
                    name: 'Ms. Eleonore Dickinson DDS'
                    desc: 'Sequi non alias officiis ullam et. Qui suscipit odio reiciendis. Quisquam voluptates corrupti et atque. Est iste voluptates iure inventore libero vel ut.'
                    price: '88'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 108
                      name:
                        type: string
                        example: 'Ms. Eleonore Dickinson DDS'
                      desc:
                        type: string
                        example: 'Sequi non alias officiis ullam et. Qui suscipit odio reiciendis. Quisquam voluptates corrupti et atque. Est iste voluptates iure inventore libero vel ut.'
                      price:
                        type: string
                        example: '88'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vhkzjscxwi
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: iximzypsmhcdeomwaabmvw
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 91.0
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 14
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 109
                    name: 'Mr. Selmer Lind'
                    desc: 'Pariatur ea numquam incidunt. Iusto voluptas qui maxime alias harum doloremque et.'
                    price: '3.526812e+06'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 109
                      name:
                        type: string
                        example: 'Mr. Selmer Lind'
                      desc:
                        type: string
                        example: 'Pariatur ea numquam incidunt. Iusto voluptas qui maxime alias harum doloremque et.'
                      price:
                        type: string
                        example: '3.526812e+06'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 7
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 52|re9rvkPJLY2AAkiFAdwjQVo7HJFXXoWGj3ql4RPy19a49427
                  token_type: Bearer
                  user:
                    id: 334
                    name: 'Dr. Jamal Simonis'
                    email: jalen49@example.org
                    email_verified_at: '2025-04-11T12:52:45.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 52|re9rvkPJLY2AAkiFAdwjQVo7HJFXXoWGj3ql4RPy19a49427
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 334
                      name:
                        type: string
                        example: 'Dr. Jamal Simonis'
                      email:
                        type: string
                        example: jalen49@example.org
                      email_verified_at:
                        type: string
                        example: '2025-04-11T12:52:45.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters.'
                  example: iparker@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: 'bvKTS(%A"/ism)$)'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 53|oEDu57dS7wCZk3u5NIz0W2FuroU5GN5frJVuFaXuc968b009
                  token_type: Bearer
                  user:
                    id: 335
                    name: 'Prof. Harmony Kessler'
                    email: gtoy@example.com
                    email_verified_at: '2025-04-11T12:52:47.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 53|oEDu57dS7wCZk3u5NIz0W2FuroU5GN5frJVuFaXuc968b009
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 335
                      name:
                        type: string
                        example: 'Prof. Harmony Kessler'
                      email:
                        type: string
                        example: gtoy@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-11T12:52:47.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: eitdflkaxzxiykgpezur
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: rory42@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'ZgJnN*"q21*'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: et
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: fb
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: sotocibk
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 54|4ABXkvzJ4PRa0sLluRprNB4QYD9ZifGg3WaWWkY30588f03d
                  token_type: Bearer
                  user:
                    id: 337
                    name: 'Emilia Jenkins'
                    email: erica.rosenbaum@example.net
                    email_verified_at: '2025-04-11T12:52:47.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 54|4ABXkvzJ4PRa0sLluRprNB4QYD9ZifGg3WaWWkY30588f03d
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 337
                      name:
                        type: string
                        example: 'Emilia Jenkins'
                      email:
                        type: string
                        example: erica.rosenbaum@example.net
                      email_verified_at:
                        type: string
                        example: '2025-04-11T12:52:47.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 4 characters.'
                  example: btjp
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: ppgznusg
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: quasi
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: est
                  nullable: false
              required:
                - key
                - phone
      security: []
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 123
                      name: 'Deron Jerde'
                      full_name: null
                      coach: null
                      city: Champlinburgh
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 124
                      name: 'Dr. Jessica Pacocha'
                      full_name: null
                      coach: null
                      city: 'Port Hazel'
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 9
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: dignissimos
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 126
                    name: 'Miss Pat Hyatt MD'
                    full_name: null
                    coach: null
                    city: 'West Edatown'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 126
                      name:
                        type: string
                        example: 'Miss Pat Hyatt MD'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'West Edatown'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: efjarh
                  nullable: false
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wgyhmncdxvumbcfmpkpgyqj
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: epvkvjupqlarlnvdk
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tqgaeopfqzknqgjueun
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 125
                    name: 'Mr. Alexandro Romaguera'
                    full_name: null
                    coach: null
                    city: 'Port Reilly'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 125
                      name:
                        type: string
                        example: 'Mr. Alexandro Romaguera'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'Port Reilly'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: ipsum
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 127
                    name: 'Randal Kub'
                    full_name: null
                    coach: null
                    city: 'North Cathryn'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 127
                      name:
                        type: string
                        example: 'Randal Kub'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'North Cathryn'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kgeaimamxdolrufxenpsebx
                  nullable: true
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gzedvhicdzirrapltv
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: uyjsccymsdoypqnuehqynzf
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sw
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.delete.success
                  command:
                    id: 128
                    name: 'Mrs. Jayne Williamson IV'
                    full_name: null
                    coach: null
                    city: Kristopherfurt
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.delete.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 128
                      name:
                        type: string
                        example: 'Mrs. Jayne Williamson IV'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Kristopherfurt
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.add_couch.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.add_couch.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: labore
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.member_toggle.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.member_toggle.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 347
                    name: 'Zella Stiedemann'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 347
                      name:
                        type: string
                        example: 'Zella Stiedemann'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 6
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 10
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 348
                    name: 'Isabelle Balistreri'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 348
                      name:
                        type: string
                        example: 'Isabelle Balistreri'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 22
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 349
                    name: 'Luis Romaguera'
                    email: sterling.mosciski@example.org
                    email_verified_at: '2025-04-11T12:52:58.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 349
                      name:
                        type: string
                        example: 'Luis Romaguera'
                      email:
                        type: string
                        example: sterling.mosciski@example.org
                      email_verified_at:
                        type: string
                        example: '2025-04-11T12:52:58.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 51
                    name: 'Edison Wisoky II'
                    year: 1997
                    stages: '8'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 51
                      name:
                        type: string
                        example: 'Edison Wisoky II'
                      year:
                        type: integer
                        example: 1997
                      stages:
                        type: string
                        example: '8'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 11
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ipsum
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: veniam
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 54
                    name: 'Trudie Kuhn'
                    year: 2019
                    stages: '8'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 54
                      name:
                        type: string
                        example: 'Trudie Kuhn'
                      year:
                        type: integer
                        example: 2019
                      stages:
                        type: string
                        example: '8'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lmi
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tlkmbycbbmkbqrmthxfzwto
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: dolor
        required: true
        schema:
          type: string
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 53
                    name: 'Russel Beahan II'
                    year: 1995
                    stages: '8'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 53
                      name:
                        type: string
                        example: 'Russel Beahan II'
                      year:
                        type: integer
                        example: 1995
                      stages:
                        type: string
                        example: '8'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tnmpfeiunjwmigg
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 6
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fm
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 14
                  nullable: true
              required:
                - name
                - year
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 242
                    name: file_67f910a6591a1
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 242
                      name:
                        type: string
                        example: file_67f910a6591a1
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: licenses
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://collins.com/accusantium-dolor-ab-incidunt-voluptatibus-velit'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 243
                      name: file_67f910a67b487
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 244
                      name: file_67f910a68a9ea
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 14
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 2
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 245
                    name: file_67f910a6b9d16
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 245
                      name:
                        type: string
                        example: file_67f910a6b9d16
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 246
                    name: file_67f910a6eba70
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 246
                      name:
                        type: string
                        example: file_67f910a6eba70
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: beatae
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: corporis
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    get:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.verify_docs_for_commission.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.verify_docs_for_commission.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 136
                    status: false
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 136
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 8
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:50'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 137
                  status: false
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 137
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.favorite_user.toggle.success_remove
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.favorite_user.toggle.success_remove
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 92
                      name: 'Mr. Jaeden Carter III'
                      description: 'Enim nam veniam suscipit magni cumque. Repellendus eum omnis quo quod rem quis. Tenetur sequi dolorem corporis consequatur accusantium.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 93
                      name: 'Leann Nitzsche'
                      description: 'Reprehenderit eveniet voluptatem exercitationem quas est nulla quas. Ea iure quo similique eum consequatur. Et non et aut quis atque quis adipisci.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 3
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 95
                    name: 'Brennan Keeling'
                    description: 'Recusandae praesentium et reprehenderit accusamus. Sint harum doloribus quisquam et. Voluptates enim non eaque inventore quae ut labore. Dignissimos sunt vel eaque labore alias.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 95
                      name:
                        type: string
                        example: 'Brennan Keeling'
                      description:
                        type: string
                        example: 'Recusandae praesentium et reprehenderit accusamus. Sint harum doloribus quisquam et. Voluptates enim non eaque inventore quae ut labore. Dignissimos sunt vel eaque labore alias.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jizoixshmc
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Nostrum voluptas aut officiis quaerat voluptate.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 94
                    name: 'Christa Kilback'
                    description: 'Rerum nam consectetur saepe eum asperiores aperiam voluptatem exercitationem. Quia et in qui ut eum.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 94
                      name:
                        type: string
                        example: 'Christa Kilback'
                      description:
                        type: string
                        example: 'Rerum nam consectetur saepe eum asperiores aperiam voluptatem exercitationem. Quia et in qui ut eum.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 4
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 96
                    name: 'Miss Yadira Kunze Sr.'
                    description: 'Enim sapiente dolor ea et consequatur. Nostrum ut minima praesentium aliquid fuga. Consequatur quia sint repudiandae ut voluptatum.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 96
                      name:
                        type: string
                        example: 'Miss Yadira Kunze Sr.'
                      description:
                        type: string
                        example: 'Enim sapiente dolor ea et consequatur. Nostrum ut minima praesentium aliquid fuga. Consequatur quia sint repudiandae ut voluptatum.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wo
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Modi quia officia aliquid ipsum in quas.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 7
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: soluta
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Dr.
                    surname: Dr.
                    patronymic: Dr.
                    date_of_birth: '2007-06-03'
                    city: Daltonbury
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: +1-714-668-8588
                    start_number: '783'
                    group: 'Computer Security Specialist'
                    rank_number: '99999'
                    rank: 'Food Servers'
                    community: 'Crooks LLC'
                    coach: 'Prof. Ariel Kunde V'
                    moto_stamp: Dr.
                    engine: Dr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '2007-06-03'
                      city:
                        type: string
                        example: Daltonbury
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: +1-714-668-8588
                      start_number:
                        type: string
                        example: '783'
                      group:
                        type: string
                        example: 'Computer Security Specialist'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Food Servers'
                      community:
                        type: string
                        example: 'Crooks LLC'
                      coach:
                        type: string
                        example: 'Prof. Ariel Kunde V'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: corporis
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:53'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: esse
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: nemo
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: neque
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 8
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: quae
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: officia
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 5
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 9
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Miss
                    surname: Mr.
                    patronymic: Prof.
                    date_of_birth: '2014-06-07'
                    city: Delbertberg
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: +1.984.412.9261
                    start_number: '321'
                    group: 'Hotel Desk Clerk'
                    rank_number: '99999'
                    rank: 'Hunter and Trapper'
                    community: 'Macejkovic, Kessler and Johnston'
                    coach: 'Grady Lynch'
                    moto_stamp: Dr.
                    engine: Mr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Miss
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '2014-06-07'
                      city:
                        type: string
                        example: Delbertberg
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: +1.984.412.9261
                      start_number:
                        type: string
                        example: '321'
                      group:
                        type: string
                        example: 'Hotel Desk Clerk'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Hunter and Trapper'
                      community:
                        type: string
                        example: 'Macejkovic, Kessler and Johnston'
                      coach:
                        type: string
                        example: 'Grady Lynch'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Mr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: corporis
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:53'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: ratione
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: neque
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: quam
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: commodi
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 4
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 142
                      name: 'Miss Kaylah Osinski I'
                      desc: 'Ab beatae numquam quae omnis. Nam et voluptatem ipsa veniam voluptates quis. A atque ipsum eos vero eos. Incidunt dolor eius tempore provident expedita ut.'
                      is_work: false
                      date_start: '2025-04-11T07:14:17.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 143
                      name: 'Mr. Larry Satterfield II'
                      desc: 'Impedit vero sed tenetur voluptatem non dignissimos provident. Assumenda eum et enim. Vel harum odit est excepturi aut facilis ab. Dolores fugiat est architecto reiciendis enim.'
                      is_work: true
                      date_start: '2025-04-11T19:32:32.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 20
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 13
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 3
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:51'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:51'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 12
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: atque
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 145
                    name: 'Hans Mante'
                    desc: 'Deleniti qui esse sed sit aut ut. Maiores dolor et laboriosam nam aut aut. Dolor error eum id qui omnis. Harum ex quibusdam et suscipit perferendis quos et.'
                    is_work: true
                    date_start: '2025-04-11T06:51:44.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 145
                      name:
                        type: string
                        example: 'Hans Mante'
                      desc:
                        type: string
                        example: 'Deleniti qui esse sed sit aut ut. Maiores dolor et laboriosam nam aut aut. Dolor error eum id qui omnis. Harum ex quibusdam et suscipit perferendis quos et.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-04-11T06:51:44.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: lddkjeimzmkcipxbvhzmmmouhxwdyldxyyrtcmsvpovabzvsysnlcyiivrk
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: amet
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:51'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:51'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:51'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 16
                  nullable: true
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: dolor
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 4
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 14
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 144
                    name: 'Ethelyn Runte'
                    desc: 'Ut facere qui quo. Eaque similique enim deleniti possimus debitis. Quia quis placeat repellat debitis et quas ut. A fugit ea quasi veniam.'
                    is_work: true
                    date_start: '2025-04-11T12:59:45.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 144
                      name:
                        type: string
                        example: 'Ethelyn Runte'
                      desc:
                        type: string
                        example: 'Ut facere qui quo. Eaque similique enim deleniti possimus debitis. Quia quis placeat repellat debitis et quas ut. A fugit ea quasi veniam.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-04-11T12:59:45.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 7
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.delete.success
                  race:
                    id: 149
                    name: 'Tyrel Pollich'
                    desc: 'Aut inventore placeat accusamus placeat dolorum aut veritatis. Atque assumenda et in non consectetur vero sit. Provident molestias repudiandae sed ut ipsa non.'
                    is_work: true
                    date_start: '2025-04-11T19:31:02.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.delete.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 149
                      name:
                        type: string
                        example: 'Tyrel Pollich'
                      desc:
                        type: string
                        example: 'Aut inventore placeat accusamus placeat dolorum aut veritatis. Atque assumenda et in non consectetur vero sit. Provident molestias repudiandae sed ut ipsa non.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-04-11T19:31:02.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 146
                    name: 'Terence Nitzsche'
                    desc: 'Dignissimos sit labore sapiente et ut. Reprehenderit sed repellat aut sapiente ut ut. Soluta ullam repellendus occaecati temporibus.'
                    is_work: false
                    date_start: '2025-04-11T05:13:49.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 146
                      name:
                        type: string
                        example: 'Terence Nitzsche'
                      desc:
                        type: string
                        example: 'Dignissimos sit labore sapiente et ut. Reprehenderit sed repellat aut sapiente ut ut. Soluta ullam repellendus occaecati temporibus.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-11T05:13:49.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: ufgfuukvhnpef
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: quae
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:52'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:52'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-04-11T12:52:52'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 20
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - ut
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 14
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 17
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 147
                    name: 'Montana Howell'
                    desc: 'Debitis omnis nostrum minus dignissimos unde voluptatem soluta. Quia est eos omnis. Fuga sunt qui repellat culpa. Sed quam molestiae a minima voluptatum.'
                    is_work: false
                    date_start: '2025-04-11T04:58:48.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 147
                      name:
                        type: string
                        example: 'Montana Howell'
                      desc:
                        type: string
                        example: 'Debitis omnis nostrum minus dignissimos unde voluptatem soluta. Quia est eos omnis. Fuga sunt qui repellat culpa. Sed quam molestiae a minima voluptatum.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-11T04:58:48.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_allowed
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_allowed
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 5
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: austin41@example.net
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'https://www.schneider.com/adipisci-quia-omnis-et-omnis-vitae-aut-optio'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: ea
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'l<796!QM%K<+Xd:sC2P'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: id
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 343
                    name: 'Leopold Kshlerin Jr.'
                    email: lgerlach@example.com
                    email_verified_at: '2025-04-11T12:52:51.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 343
                      name:
                        type: string
                        example: 'Leopold Kshlerin Jr.'
                      email:
                        type: string
                        example: lgerlach@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-11T12:52:51.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 15
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 21
                      name: 'Sabrina Wehner III'
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 22
                      name: 'Prof. Mathias Wilkinson MD'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 28
                    login: 'Nostrum aliquid totam nam quaerat excepturi et reiciendis natus. Sequi doloremque aut aperiam voluptatem nobis. Error cum sed natus repellat modi praesentium aliquam. Quos repellat placeat officiis.'
                    password_1: 0QlMX%EZ.%%BZLE^5
                    password_2: '+zt$#R8e)JSm,6rZ'
                    token: 'Iure beatae voluptas consequatur qui. Nemo vel ab perspiciatis quas et. Velit incidunt qui odio id omnis quisquam minus.'
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 28
                      login:
                        type: string
                        example: 'Nostrum aliquid totam nam quaerat excepturi et reiciendis natus. Sequi doloremque aut aperiam voluptatem nobis. Error cum sed natus repellat modi praesentium aliquam. Quos repellat placeat officiis.'
                      password_1:
                        type: string
                        example: 0QlMX%EZ.%%BZLE^5
                      password_2:
                        type: string
                        example: '+zt$#R8e)JSm,6rZ'
                      token:
                        type: string
                        example: 'Iure beatae voluptas consequatur qui. Nemo vel ab perspiciatis quas et. Velit incidunt qui odio id omnis quisquam minus.'
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ym
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lx
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jkzwnmdpdirlqiwnfw
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: djs
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 115
                      name: 'Director Of Talent Acquisition'
                      address: "6499 Allie Fall Suite 227\nPort Garrick, ND 96338"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Et sit quam qui dolorum repudiandae itaque dolorem. A eum soluta cupiditate sit. Doloribus tenetur quisquam enim earum quaerat. Iste sit voluptatibus impedit quaerat aut. Labore vel autem voluptatem ratione eius molestiae. Laborum ut quo quidem officiis labore. Ut eum suscipit quae sed. Tenetur vel id sint iusto non. Ipsa amet corrupti nisi autem. Inventore cumque dolores quo voluptatibus eligendi placeat ut.'
                      length: 121
                      turns: 46
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 3
                        name: Алтайский
                        type: край
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 116
                      name: 'Material Moving Worker'
                      address: "1097 Eugenia Valleys\nProhaskastad, MS 22193"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Quisquam dolorem omnis commodi sed eum. Dolores architecto sint et ab minima sapiente aliquam sit. Voluptatem quod labore eaque corrupti reiciendis laborum vitae. Quos sint magnam architecto enim. Consequatur quia aliquid qui commodi. Eum ut iste earum sapiente illum et. Culpa tempore illo nemo dolor et. Inventore aliquid omnis provident. Eaque sunt dolores vero sed odit voluptatibus quam. In reprehenderit numquam iste sunt tempora. Est quia id minima harum numquam minima recusandae.'
                      length: 820
                      turns: 1
                      free: false
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 11
                        name: Владимирская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: maxime
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 7
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 4
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 118
                    name: 'Electrical Engineering Technician'
                    address: "90194 Balistreri Fords Apt. 220\nGradyview, MA 42442"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Sit est facere iure numquam est. Non debitis quidem sapiente et laudantium. Fuga voluptatem facilis dolores voluptatem. Non esse aspernatur odio est autem nulla. Et rerum eos libero accusamus rerum aut enim iusto. Ipsa rerum nemo ad nostrum velit provident. Sequi est quam porro non eos fugit delectus. Qui perferendis at totam in similique veritatis ut qui.'
                    length: 108
                    turns: 4
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 43
                      name: Московская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 118
                      name:
                        type: string
                        example: 'Electrical Engineering Technician'
                      address:
                        type: string
                        example: "90194 Balistreri Fords Apt. 220\nGradyview, MA 42442"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Sit est facere iure numquam est. Non debitis quidem sapiente et laudantium. Fuga voluptatem facilis dolores voluptatem. Non esse aspernatur odio est autem nulla. Et rerum eos libero accusamus rerum aut enim iusto. Ipsa rerum nemo ad nostrum velit provident. Sequi est quam porro non eos fugit delectus. Qui perferendis at totam in similique veritatis ut qui.'
                      length:
                        type: integer
                        example: 108
                      turns:
                        type: integer
                        example: 4
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 43
                          name:
                            type: string
                            example: Московская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: icfjquzxejtcpqjpjhntohlekdsjsiplagwhvdvhbgacufqdqjjoqrdbyglgytb
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: laborum
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 3
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 9
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 117
                    name: Coroner
                    address: "7355 Cummings Rapid\nHagenesbury, WY 32809-6868"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Expedita ipsa facilis fugit voluptatem suscipit non hic beatae. Aperiam voluptate incidunt repudiandae ratione quo. Sed non non architecto deleniti. Animi praesentium iusto vero praesentium dignissimos. Repellat asperiores sint minus eos rem qui nihil aliquid. Tempora repellat laudantium quia nostrum est quo exercitationem. Enim vel iste consequuntur nostrum in ratione at. Quia quaerat quia quo totam.'
                    length: 646
                    turns: 0
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 44
                      name: Мурманская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 117
                      name:
                        type: string
                        example: Coroner
                      address:
                        type: string
                        example: "7355 Cummings Rapid\nHagenesbury, WY 32809-6868"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Expedita ipsa facilis fugit voluptatem suscipit non hic beatae. Aperiam voluptate incidunt repudiandae ratione quo. Sed non non architecto deleniti. Animi praesentium iusto vero praesentium dignissimos. Repellat asperiores sint minus eos rem qui nihil aliquid. Tempora repellat laudantium quia nostrum est quo exercitationem. Enim vel iste consequuntur nostrum in ratione at. Quia quaerat quia quo totam.'
                      length:
                        type: integer
                        example: 646
                      turns:
                        type: integer
                        example: 0
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 44
                          name:
                            type: string
                            example: Мурманская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 119
                    name: 'Soil Scientist'
                    address: "6514 Collier Mews\nEast Andre, AL 35563"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Sint maxime placeat dolorum culpa aspernatur odit voluptas aliquam. Molestiae enim ratione quo cupiditate. Minima eum earum autem consectetur. Unde rerum quisquam est est. Maiores et consequatur quia ut minima officia cupiditate. Nesciunt modi rem quia modi veritatis reprehenderit ad. Et consequatur quis aut sed quod quasi iste. Quae est ut non corrupti voluptas ad unde tempore.'
                    length: 910
                    turns: 26
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 43
                      name: Московская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 119
                      name:
                        type: string
                        example: 'Soil Scientist'
                      address:
                        type: string
                        example: "6514 Collier Mews\nEast Andre, AL 35563"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Sint maxime placeat dolorum culpa aspernatur odit voluptas aliquam. Molestiae enim ratione quo cupiditate. Minima eum earum autem consectetur. Unde rerum quisquam est est. Maiores et consequatur quia ut minima officia cupiditate. Nesciunt modi rem quia modi veritatis reprehenderit ad. Et consequatur quis aut sed quod quasi iste. Quae est ut non corrupti voluptas ad unde tempore.'
                      length:
                        type: integer
                        example: 910
                      turns:
                        type: integer
                        example: 26
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 43
                          name:
                            type: string
                            example: Московская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: wtguesxe
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - quam
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 5
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 13
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.delete.success
                  track:
                    id: 120
                    name: 'Precision Mold and Pattern Caster'
                    address: "4432 Murray Vista Suite 391\nEast Adrienburgh, FL 44697"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Praesentium voluptas repellat quisquam voluptas cum cupiditate qui. Minus aut et illo velit eos quasi sed. Nemo totam iusto repellendus deserunt temporibus. Occaecati aut voluptas sit delectus. Libero accusantium expedita rerum repellendus necessitatibus similique. Ipsam nam qui et provident ut consequatur dicta. Unde quas sunt nulla illum.'
                    length: 236
                    turns: 8
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 87
                      name: 'Чувашская Республика'
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.delete.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 120
                      name:
                        type: string
                        example: 'Precision Mold and Pattern Caster'
                      address:
                        type: string
                        example: "4432 Murray Vista Suite 391\nEast Adrienburgh, FL 44697"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Praesentium voluptas repellat quisquam voluptas cum cupiditate qui. Minus aut et illo velit eos quasi sed. Nemo totam iusto repellendus deserunt temporibus. Occaecati aut voluptas sit delectus. Libero accusantium expedita rerum repellendus necessitatibus similique. Ipsam nam qui et provident ut consequatur dicta. Unde quas sunt nulla illum.'
                      length:
                        type: integer
                        example: 236
                      turns:
                        type: integer
                        example: 8
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 87
                          name:
                            type: string
                            example: 'Чувашская Республика'
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 7
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 338
                    name: 'Dr. Lucienne Schmeler DDS'
                    email: lind.penelope@example.net
                    email_verified_at: '2025-04-11T12:52:47.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 338
                      name:
                        type: string
                        example: 'Dr. Lucienne Schmeler DDS'
                      email:
                        type: string
                        example: lind.penelope@example.net
                      email_verified_at:
                        type: string
                        example: '2025-04-11T12:52:47.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.delete.success
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 339
                    name: 'Brennan Connelly'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 339
                      name:
                        type: string
                        example: 'Brennan Connelly'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 340
                    name: 'Watson Nikolaus V'
                    email: brown.abraham@example.com
                    email_verified_at: '2025-04-11T12:52:48.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 340
                      name:
                        type: string
                        example: 'Watson Nikolaus V'
                      email:
                        type: string
                        example: brown.abraham@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-11T12:52:48.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: e
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: mayert.viviane@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: s
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 341
                      name: 'Jadon Bauch'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 342
                      name: 'Brandi Kiehn'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 15
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 6
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
