openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 97
                      name: 'Сафонов Антонин Владимирович'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 98
                      name: 'Святослав Алексеевич Лобанов'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quidem
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 5
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 27|PJaQfHHhJProNqug21dVTidAoJu7WFee6AIE9a1g8aeb622a
                  token_type: Bearer
                  user:
                    id: 90
                    name: 'Софья Сергеевна Шестакова'
                    email: lybov47@example.net
                    email_verified_at: '2025-02-05T11:46:57.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 27|PJaQfHHhJProNqug21dVTidAoJu7WFee6AIE9a1g8aeb622a
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 90
                      name:
                        type: string
                        example: 'Софья Сергеевна Шестакова'
                      email:
                        type: string
                        example: lybov47@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-05T11:46:57.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: vernon48@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'sgyCzms5#Z'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 28|eIn2iISP1DmmPintYbEFMOuRyDGbcccixjegNWFqdb992132
                  token_type: Bearer
                  user:
                    id: 91
                    name: 'Алёна Ивановна Медведева'
                    email: mironova.irina@example.com
                    email_verified_at: '2025-02-05T11:46:57.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 28|eIn2iISP1DmmPintYbEFMOuRyDGbcccixjegNWFqdb992132
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 91
                      name:
                        type: string
                        example: 'Алёна Ивановна Медведева'
                      email:
                        type: string
                        example: mironova.irina@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-05T11:46:57.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: nuraizzjetedd
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: micaela.emmerich@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: LdLYeVP=sAlQHWpT)
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: officiis
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: quasi
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: facilis
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно изменён.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно изменён.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Miss
                    surname: Prof.
                    patronymic: Ms.
                    date_of_birth: '1977-08-29'
                    city: 'Павловский Посад'
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: 8-800-139-9263
                    start_number: '751'
                    group: Редактор
                    rank_number: '99999'
                    rank: Телефонистка
                    community: 'МФО ТелекомИнфо'
                    coach: 'Фокина Люся Алексеевна'
                    moto_stamp: Miss
                    engine: Ms.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Miss
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '1977-08-29'
                      city:
                        type: string
                        example: 'Павловский Посад'
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 8-800-139-9263
                      start_number:
                        type: string
                        example: '751'
                      group:
                        type: string
                        example: Редактор
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Телефонистка
                      community:
                        type: string
                        example: 'МФО ТелекомИнфо'
                      coach:
                        type: string
                        example: 'Фокина Люся Алексеевна'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Ms.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-05T11:46:58'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: deleniti
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: illo
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: totam
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: in
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Ms.
                    surname: Prof.
                    patronymic: Ms.
                    date_of_birth: '1986-06-19'
                    city: Раменское
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(35222) 07-3665'
                    start_number: '518'
                    group: Телохранитель
                    rank_number: '100000'
                    rank: Критик
                    community: 'ОАО ITМетизУралПром'
                    coach: 'Ярослав Романович Кононов'
                    moto_stamp: Ms.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ms.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '1986-06-19'
                      city:
                        type: string
                        example: Раменское
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(35222) 07-3665'
                      start_number:
                        type: string
                        example: '518'
                      group:
                        type: string
                        example: Телохранитель
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Критик
                      community:
                        type: string
                        example: 'ОАО ITМетизУралПром'
                      coach:
                        type: string
                        example: 'Ярослав Романович Кононов'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Dr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: iste
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: ipsum
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: libero
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-05T11:46:58'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: impedit
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 59
                      name: 'Авдеев Ян Андреевич'
                      desc: 'Voluptas dolore temporibus corrupti at incidunt. Voluptatem enim blanditiis totam sit quis. Est eveniet doloremque alias sint dignissimos consequatur. Aperiam ipsam aperiam laboriosam doloribus.'
                      is_work: true
                      date_start: '2025-02-05T16:45:29.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 60
                      name: 'Прохорова Ярослава Алексеевна'
                      desc: 'Modi hic quasi pariatur et ut voluptatem. Occaecati dolorem saepe ducimus. Reiciendis in ut dolorum nesciunt consequatur.'
                      is_work: true
                      date_start: '2025-02-05T10:07:31.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 3
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 1
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 62
                    name: 'Беляков Егор Владимирович'
                    desc: 'Illo architecto vel dolorem reiciendis voluptatem voluptas qui nihil. Aut quos quaerat earum vitae ad impedit cumque facilis.'
                    is_work: false
                    date_start: '2025-02-05T22:21:20.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 62
                      name:
                        type: string
                        example: 'Беляков Егор Владимирович'
                      desc:
                        type: string
                        example: 'Illo architecto vel dolorem reiciendis voluptatem voluptas qui nihil. Aut quos quaerat earum vitae ad impedit cumque facilis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-02-05T22:21:20.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: qoxwfezudxcbdzuzvgctrahvtucpqouqpelopriiybjvxdiurkigovjcesrxouyjktakvlhp
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-05T11:46:58'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 17
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 61
                    name: 'Ананий Борисович Ширяев'
                    desc: 'Qui sit praesentium occaecati rerum voluptate nostrum. Natus maxime amet illo perferendis esse. Consequatur hic vero rerum molestiae vero.'
                    is_work: true
                    date_start: '2025-02-05T09:05:37.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 61
                      name:
                        type: string
                        example: 'Ананий Борисович Ширяев'
                      desc:
                        type: string
                        example: 'Qui sit praesentium occaecati rerum voluptate nostrum. Natus maxime amet illo perferendis esse. Consequatur hic vero rerum molestiae vero.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-05T09:05:37.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 63
                    name: 'Нелли Львовна Петухова'
                    desc: 'Autem voluptas est ea qui. Atque blanditiis occaecati consequatur odio quia doloremque eum quam. Accusamus ducimus nemo itaque eius.'
                    is_work: false
                    date_start: '2025-02-05T21:35:37.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 63
                      name:
                        type: string
                        example: 'Нелли Львовна Петухова'
                      desc:
                        type: string
                        example: 'Autem voluptas est ea qui. Atque blanditiis occaecati consequatur odio quia doloremque eum quam. Accusamus ducimus nemo itaque eius.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-02-05T21:35:37.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: hlwcvaqrooatnzdpufmlcwrkzwnefsat
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: odio
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-05T11:46:58'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - tempore
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Состояние гонки успешно изменено на рабочее.'
                  race:
                    id: 64
                    name: 'Осипова Ольга Андреевна'
                    desc: 'Omnis deleniti ea eligendi voluptatum. Consequatur illum est culpa dolorem iusto illo. Eaque totam voluptatem vitae qui alias et expedita.'
                    is_work: true
                    date_start: '2025-02-05T19:39:59.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Состояние гонки успешно изменено на рабочее.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 64
                      name:
                        type: string
                        example: 'Осипова Ольга Андреевна'
                      desc:
                        type: string
                        example: 'Omnis deleniti ea eligendi voluptatum. Consequatur illum est culpa dolorem iusto illo. Eaque totam voluptatem vitae qui alias et expedita.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-05T19:39:59.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 3
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 96
                    name: 'Журавлёв Ананий Андреевич'
                    email: daniil47@example.com
                    email_verified_at: '2025-02-05T11:46:58.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 96
                      name:
                        type: string
                        example: 'Журавлёв Ананий Андреевич'
                      email:
                        type: string
                        example: daniil47@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-05T11:46:58.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 16
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 47
                      name: Чабан
                      address: '547340, Читинская область, город Москва, наб. Ленина, 57'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Exercitationem voluptatem commodi eligendi qui. Doloremque nulla nisi veniam. Nobis exercitationem distinctio omnis nihil eligendi deleniti ea. Odit dolor saepe cum quia officiis nisi. Et expedita fuga sed vel qui reiciendis. Est repudiandae voluptas animi voluptatibus. Doloremque velit veritatis voluptatum voluptas et sit. Perferendis natus possimus necessitatibus quia totam architecto. Nostrum dolor incidunt ad consequuntur. Distinctio nihil voluptatem pariatur aut ipsam non sint.'
                      length: 888
                      turns: 52
                      free: true
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 48
                      name: Учёный
                      address: '736709, Тульская область, город Подольск, проезд Домодедовская, 45'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Voluptas nulla possimus et et suscipit. Incidunt est iure et ullam ad nostrum nostrum. Aut aut vero excepturi sed corrupti iusto hic. Nostrum quam quaerat voluptatem ratione est. Occaecati non optio facilis nesciunt quo voluptatem. Pariatur nisi sint praesentium facere quibusdam. Et quis laudantium voluptatem in officia. Voluptatibus aut ut ut harum tempore est.'
                      length: 387
                      turns: 57
                      free: false
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 25
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 50
                    name: Учёный
                    address: '749055, Ростовская область, город Мытищи, пл. Чехова, 59'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Et magnam sed aut nostrum doloribus. Cum dolorem dolore neque nam ut delectus. Est aliquam eveniet cumque eum pariatur. Earum vel molestias sunt sint velit. Totam voluptate consequatur fugit ut magni aliquam laudantium. Nam ipsum omnis vitae placeat velit. Qui adipisci cupiditate dolorem. A nostrum non inventore quas cupiditate eius consequatur. Quos cupiditate qui accusamus enim perspiciatis dolore.'
                    length: 26
                    turns: 28
                    free: true
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 50
                      name:
                        type: string
                        example: Учёный
                      address:
                        type: string
                        example: '749055, Ростовская область, город Мытищи, пл. Чехова, 59'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Et magnam sed aut nostrum doloribus. Cum dolorem dolore neque nam ut delectus. Est aliquam eveniet cumque eum pariatur. Earum vel molestias sunt sint velit. Totam voluptate consequatur fugit ut magni aliquam laudantium. Nam ipsum omnis vitae placeat velit. Qui adipisci cupiditate dolorem. A nostrum non inventore quas cupiditate eius consequatur. Quos cupiditate qui accusamus enim perspiciatis dolore.'
                      length:
                        type: integer
                        example: 26
                      turns:
                        type: integer
                        example: 28
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: afotcjszewfzzswkwexhtdythguboybunohtlcwthcptjbywwrigniwjlp
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: officia
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 11
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: ex
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["aut","ad"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["ex","quisquam"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 49
                    name: Радист
                    address: '673403, Челябинская область, город Люберцы, пр. Чехова, 43'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Sint excepturi nihil laudantium. Neque quas nihil maxime maxime. Eveniet recusandae sit et est quis sit ducimus soluta. Et et quam voluptatem voluptates id ut. Laborum similique consequatur magnam eum nihil repellendus delectus dicta. Rem blanditiis quos sapiente sed et. Quis dolorem ut architecto autem. Corrupti quia nisi non velit.'
                    length: 265
                    turns: 63
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 49
                      name:
                        type: string
                        example: Радист
                      address:
                        type: string
                        example: '673403, Челябинская область, город Люберцы, пр. Чехова, 43'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Sint excepturi nihil laudantium. Neque quas nihil maxime maxime. Eveniet recusandae sit et est quis sit ducimus soluta. Et et quam voluptatem voluptates id ut. Laborum similique consequatur magnam eum nihil repellendus delectus dicta. Rem blanditiis quos sapiente sed et. Quis dolorem ut architecto autem. Corrupti quia nisi non velit.'
                      length:
                        type: integer
                        example: 265
                      turns:
                        type: integer
                        example: 63
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 93
                    name: 'Владислав Иванович Коновалов'
                    email: roman.ignatova@example.net
                    email_verified_at: '2025-02-05T11:46:57.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 93
                      name:
                        type: string
                        example: 'Владислав Иванович Коновалов'
                      email:
                        type: string
                        example: roman.ignatova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-05T11:46:57.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь получен успешно.'
                  user:
                    id: 94
                    name: 'Фомичёва Валентина Евгеньевна'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 94
                      name:
                        type: string
                        example: 'Фомичёва Валентина Евгеньевна'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  user:
                    id: 95
                    name: 'Мамонтова Искра Борисовна'
                    email: terenteva.danila@example.org
                    email_verified_at: '2025-02-05T11:46:58.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 95
                      name:
                        type: string
                        example: 'Мамонтова Искра Борисовна'
                      email:
                        type: string
                        example: terenteva.danila@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-05T11:46:58.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: ujgxvvkavrdzeglatsbeni
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: remington25@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Код для подтверждения электронной почты отправлена на вашу почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Код для подтверждения электронной почты отправлена на вашу почту.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Почта уже подтверждена'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Почта уже подтверждена'
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ваша почта успешно подтверждена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ваша почта успешно подтверждена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Почта уже подтверждена'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Почта уже подтверждена'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Код не подходит'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Код не подходит'
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 12
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
