openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Запись на гонку успешно создана.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Запись на гонку успешно создана.'
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Запрашиваемый ресурс не найден.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Запрашиваемый ресурс не найден.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: ratione
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: rem
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:02:31'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: minus
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: error
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 20
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: dolores
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: repellendus
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: eligendi
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: amet
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: consequatur
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: eos
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: expedita
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 8
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Получить участников в гонке'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 1386
                      name: 'Калашникова Лидия Ивановна'
                      email: vadim26@example.net
                      email_verified_at: '2025-05-26T13:02:34.000000Z'
                      created_at: '2025-05-26T13:02:34.000000Z'
                      updated_at: '2025-05-26T13:02:34.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 1387
                      name: 'Жданова Лариса Максимовна'
                      email: nelli.lobanova@example.org
                      email_verified_at: '2025-05-26T13:02:35.000000Z'
                      created_at: '2025-05-26T13:02:35.000000Z'
                      updated_at: '2025-05-26T13:02:35.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 16
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 1388
                    name: 'Игорь Андреевич Захаров'
                    email: pestov.sofa@example.org
                    email_verified_at: '2025-05-26T13:02:42.000000Z'
                    created_at: '2025-05-26T13:02:42.000000Z'
                    updated_at: '2025-05-26T13:02:42.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1388
                      name:
                        type: string
                        example: 'Игорь Андреевич Захаров'
                      email:
                        type: string
                        example: pestov.sofa@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-26T13:02:42.000000Z'
                      created_at:
                        type: string
                        example: '2025-05-26T13:02:42.000000Z'
                      updated_at:
                        type: string
                        example: '2025-05-26T13:02:42.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 4
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/export':
    get:
      summary: Export
      operationId: export
      description: 'Экспорт результатов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/import':
    post:
      summary: Import
      operationId: import
      description: 'Импорт результатов'
      parameters: []
      responses: {  }
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/checked':
    post:
      summary: checkedForCommission
      operationId: checkedForCommission
      description: 'Подтверждение записи участника гонки.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Заявка отменена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Заявка отменена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                checked:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - checked
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: 641
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно создана.'
                  attendance:
                    id: 3
                    name: 'Ростислав Фёдорович Исаков'
                    desc: 'Itaque libero facere laudantium et iste. Voluptates explicabo voluptatem qui perspiciatis rerum qui. Voluptas consequatur enim omnis nesciunt quasi ut.'
                    price: '627155'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно создана.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Ростислав Фёдорович Исаков'
                      desc:
                        type: string
                        example: 'Itaque libero facere laudantium et iste. Voluptates explicabo voluptatem qui perspiciatis rerum qui. Voluptas consequatur enim omnis nesciunt quasi ut.'
                      price:
                        type: string
                        example: '627155'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: q
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: cpqi
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 23.616559
                  nullable: false
                tax:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: icopoxhyrfrdlvl
                  nullable: false
                usn_income_outcome:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: bfai
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 11
                  nullable: false
              required:
                - name
                - desc
                - price
                - tax
                - usn_income_outcome
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно изменена.'
                  attendance:
                    id: 4
                    name: 'Назарова Юлия Фёдоровна'
                    desc: 'Dolore dolorem vero commodi nihil aut. Alias consequuntur non sequi vel voluptatem adipisci. Numquam reiciendis ut doloribus quos sed harum deleniti.'
                    price: '6'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно изменена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Назарова Юлия Фёдоровна'
                      desc:
                        type: string
                        example: 'Dolore dolorem vero commodi nihil aut. Alias consequuntur non sequi vel voluptatem adipisci. Numquam reiciendis ut doloribus quos sed harum deleniti.'
                      price:
                        type: string
                        example: '6'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: thpmelolziyepyyknzv
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: mglbcac
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 0.39
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 19
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно удалена.'
                  attendance:
                    id: 5
                    name: 'Савельева Светлана Львовна'
                    desc: 'Dolores accusantium ducimus ut ut numquam. Provident sint consequuntur labore eos aut iure. Reiciendis tenetur eos eius adipisci exercitationem. Esse est qui neque autem ut consequatur illum.'
                    price: '764'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно удалена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: 'Савельева Светлана Львовна'
                      desc:
                        type: string
                        example: 'Dolores accusantium ducimus ut ut numquam. Provident sint consequuntur labore eos aut iure. Reiciendis tenetur eos eius adipisci exercitationem. Esse est qui neque autem ut consequatur illum.'
                      price:
                        type: string
                        example: '764'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 14
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались.'
                  access_token: 2321|otYzgiPQ4Qm4EBsrd3MlgQiuDDg5TFbYNqsvSddq6e6f7cbb
                  token_type: Bearer
                  user:
                    id: 1376
                    name: 'Попов Иосиф Борисович'
                    email: iraklij61@example.com
                    email_verified_at: '2025-05-26T12:58:51.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались.'
                  access_token:
                    type: string
                    example: 2321|otYzgiPQ4Qm4EBsrd3MlgQiuDDg5TFbYNqsvSddq6e6f7cbb
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1376
                      name:
                        type: string
                        example: 'Попов Иосиф Борисович'
                      email:
                        type: string
                        example: iraklij61@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-26T12:58:51.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Такая почта не существует.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Такая почта не существует.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. Количество символов в поле value должно быть не меньше 3.'
                  example: qhoeger@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: '=w5VzT;B0RvIpFa'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы.'
                  access_token: 2322|LUmTwLXrfVc5BbGDcqd18fv8T0cNXE5vDdI7sV2L8c2b049f
                  token_type: Bearer
                  user:
                    id: 1377
                    name: 'Калашников Лев Максимович'
                    email: psidorov@example.com
                    email_verified_at: '2025-05-26T12:58:56.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы.'
                  access_token:
                    type: string
                    example: 2322|LUmTwLXrfVc5BbGDcqd18fv8T0cNXE5vDdI7sV2L8c2b049f
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1377
                      name:
                        type: string
                        example: 'Калашников Лев Максимович'
                      email:
                        type: string
                        example: psidorov@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-26T12:58:56.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Такая почта не существует.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Такая почта не существует.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: dfgyqznweb
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: hauck.eduardo@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'tL)Kp~pj5ZgcGl.:Z[P.'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: est
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: qfzo
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: lbansmktyh
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались.'
                  access_token: 2323|Ohf26bGsELoE39L0baFi286fWgyRLp4eS2vS22Mqc3b9fea4
                  token_type: Bearer
                  user:
                    id: 1379
                    name: 'Никита Львович Логинов'
                    email: frolova.ananij@example.org
                    email_verified_at: '2025-05-26T12:59:08.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались.'
                  access_token:
                    type: string
                    example: 2323|Ohf26bGsELoE39L0baFi286fWgyRLp4eS2vS22Mqc3b9fea4
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1379
                      name:
                        type: string
                        example: 'Никита Львович Логинов'
                      email:
                        type: string
                        example: frolova.ananij@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-26T12:59:08.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 4.'
                  example: w
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: zlooecdkq
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: eos
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: non
                  nullable: false
              required:
                - key
                - phone
      security: []
  '/api/phone/{userId}/delete':
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление телефона'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Телефон успешно удалён'
                  phone:
                    number: null
                    last_num: null
                    number_verified_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Телефон успешно удалён'
                  phone:
                    type: object
                    properties:
                      number:
                        type: string
                        example: null
                      last_num:
                        type: string
                        example: null
                      number_verified_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: ut
        required: true
        schema:
          type: string
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Команда успешно получена.'
                    commands:
                      id: 175
                      name: 'Васильева Екатерина Александровна'
                      full_name: 'Нелли Сергеевна Маркова'
                      coach: 'Андрей Сергеевич Овчинников'
                      city: Коломна
                      avatar: null
                  -
                    status: success
                    message: 'Команда успешно получена.'
                    commands:
                      id: 176
                      name: 'Константин Евгеньевич Баранов'
                      full_name: 'Устинова Алина Алексеевна'
                      coach: 'Валерия Фёдоровна Макарова'
                      city: Одинцово
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 25
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно создана.'
                  command:
                    id: 178
                    name: 'Соколова Алиса Романовна'
                    full_name: 'Степанов Макар Борисович'
                    coach: 'Ильин Ростислав Фёдорович'
                    city: Лотошино
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно создана.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 178
                      name:
                        type: string
                        example: 'Соколова Алиса Романовна'
                      full_name:
                        type: string
                        example: 'Степанов Макар Борисович'
                      coach:
                        type: string
                        example: 'Ильин Ростислав Фёдорович'
                      city:
                        type: string
                        example: Лотошино
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: qowrsmzabqgnkowjkrspjfu
                  nullable: false
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: qytnihmojonussdbgvzbedeyt
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ajgxvtyzovjqfmvkdzpeso
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: bqoytxzmbqki
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда по идентификатору получена успешно.'
                  command:
                    id: 177
                    name: 'Волкова Раиса Евгеньевна'
                    full_name: 'Алина Романовна Данилова'
                    coach: 'Логинова Кристина Александровна'
                    city: Ступино
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда по идентификатору получена успешно.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 177
                      name:
                        type: string
                        example: 'Волкова Раиса Евгеньевна'
                      full_name:
                        type: string
                        example: 'Алина Романовна Данилова'
                      coach:
                        type: string
                        example: 'Логинова Кристина Александровна'
                      city:
                        type: string
                        example: Ступино
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: fugit
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно изменена.'
                  command:
                    id: 179
                    name: 'Инесса Ивановна Ефремова'
                    full_name: 'Попова Ярослава Владимировна'
                    coach: 'Виктор Дмитриевич Тетерин'
                    city: Талдом
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно изменена.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 179
                      name:
                        type: string
                        example: 'Инесса Ивановна Ефремова'
                      full_name:
                        type: string
                        example: 'Попова Ярослава Владимировна'
                      coach:
                        type: string
                        example: 'Виктор Дмитриевич Тетерин'
                      city:
                        type: string
                        example: Талдом
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vkfmqmtzumpndjnwfqsxqmyny
                  nullable: true
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: fvu
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: adfw
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ixmhxrmztzvubozbwgsbieo
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно удаленаю'
                  command:
                    id: 180
                    name: 'Матвей Андреевич Шилов'
                    full_name: 'Ефимова Марина Романовна'
                    coach: 'Казакова Инга Алексеевна'
                    city: Орехово-Зуево
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно удаленаю'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 180
                      name:
                        type: string
                        example: 'Матвей Андреевич Шилов'
                      full_name:
                        type: string
                        example: 'Ефимова Марина Романовна'
                      coach:
                        type: string
                        example: 'Казакова Инга Алексеевна'
                      city:
                        type: string
                        example: Орехово-Зуево
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Тренер успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Тренер успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: reprehenderit
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Участник удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Участник удалён.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 1389
                    name: 'Глеб Львович Игнатьев'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1389
                      name:
                        type: string
                        example: 'Глеб Львович Игнатьев'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 22
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 7
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 1390
                    name: 'Морозова Любовь Евгеньевна'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1390
                      name:
                        type: string
                        example: 'Морозова Любовь Евгеньевна'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 1
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 1391
                    name: 'Терентьев Донат Андреевич'
                    email: udin.anzelika@example.net
                    email_verified_at: '2025-05-26T13:06:12.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1391
                      name:
                        type: string
                        example: 'Терентьев Донат Андреевич'
                      email:
                        type: string
                        example: udin.anzelika@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-26T13:06:12.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: alias
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 4
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 3
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок по идентификатору получен успешно.'
                  cup:
                    id: 2
                    name: 'Дмитрий Фёдорович Кулаков'
                    year: 1997
                    stages: '4'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок по идентификатору получен успешно.'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Дмитрий Фёдорович Кулаков'
                      year:
                        type: integer
                        example: 1997
                      stages:
                        type: string
                        example: '4'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 5
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок успешно обновлён'
                  cup:
                    id: 5
                    name: 'Алиса Борисовна Лобанова'
                    year: 2019
                    stages: '1'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок успешно обновлён'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      name:
                        type: string
                        example: 'Алиса Борисовна Лобанова'
                      year:
                        type: integer
                        example: 2019
                      stages:
                        type: string
                        example: '1'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vddzpl
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                stages:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: mbpayea
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: dignissimos
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: sequi
        required: true
        schema:
          type: string
  '/api/cups/race/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение кубков по id гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок по идентификатору гонки получен успешно.'
                  cup:
                    id: 3
                    name: 'Бирюков Лаврентий Сергеевич'
                    year: 2020
                    stages: '5'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок по идентификатору гонки получен успешно.'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Бирюков Лаврентий Сергеевич'
                      year:
                        type: integer
                        example: 2020
                      stages:
                        type: string
                        example: '5'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                raceId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the race table.'
                  example: 12
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок успешно создан'
                  cup:
                    id: 4
                    name: 'Рената Дмитриевна Агафонова'
                    year: 1990
                    stages: '5'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок успешно создан'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Рената Дмитриевна Агафонова'
                      year:
                        type: integer
                        example: 1990
                      stages:
                        type: string
                        example: '5'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vuboysbczdvgrucrqlugrqslo
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 6
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                stages:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: fxnzwckozoob
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
              required:
                - name
                - year
  /api/degree:
    get:
      summary: get
      operationId: get
      description: 'Получить все уровни.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Уровни успешно получены.'
                    degree:
                      id: null
                      name: null
                      desc: null
                  -
                    status: success
                    message: 'Уровни успешно получены.'
                    degree:
                      id: null
                      name: null
                      desc: null
      tags:
        - Degree
      security: []
  '/api/degree/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение уровня по id.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Уровень по id успешно получен.'
                  degree:
                    id: null
                    name: null
                    desc: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Уровень по id успешно получен.'
                  degree:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Degree
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the degree.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 2535
                    name: file_68346648d4b15
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2535
                      name:
                        type: string
                        example: file_68346648d4b15
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: notarius
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://romaguera.info/explicabo-voluptate-recusandae-rem-non-illum-qui-fugiat-recusandae'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: commodi
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 2536
                      name: file_6834664a3562b
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 2537
                      name: file_6834664cd727f
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 12
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 2538
                    name: file_68346652c2cd6
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2538
                      name:
                        type: string
                        example: file_68346652c2cd6
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 942
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно изменён.'
                  document:
                    id: 2539
                    name: file_68346655c90d5
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно изменён.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2539
                      name:
                        type: string
                        example: file_68346655c90d5
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: ipsum
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 942
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    post:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ проверен и изменён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ проверен и изменён.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checked:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                comment:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
              required:
                - checked
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 942
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Транзакция успешно создана.'
                  payment_link: null
                  transaction:
                    id: 178
                    status: null
                    date: null
                    user: null
                    attendances: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Транзакция успешно создана.'
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 178
                      status:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
                      attendances:
                        type: array
                        example: []
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 5
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:00:28'
                  nullable: true
              required:
                - attendanceIds
      security: []
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.transaction.get_users.success
                    transactions:
                      id: 180
                      status: null
                      date: null
                      user: null
                      attendances: []
                  -
                    status: success
                    message: messages.transaction.get_users.success
                    transactions:
                      id: 181
                      status: null
                      date: null
                      user: null
                      attendances: []
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1.'
                  example: 58
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 50.'
                  example: 24
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: asc
                  nullable: true
                  enum:
                    - asc
                    - desc
                sortField:
                  type: string
                  description: ''
                  example: created_at
                  nullable: true
                  enum:
                    - created_at
                    - amount
                    - type
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 179
                  status: null
                  date: null
                  user: null
                  attendances: []
                properties:
                  id:
                    type: integer
                    example: 179
                  status:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
                  attendances:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/transactions/{id}':
    get:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.get_for_id.success
                  transaction:
                    id: 182
                    status: null
                    date: null
                    user: null
                    attendances: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.get_for_id.success
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 182
                      status:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
                      attendances:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: 1
        required: true
        schema:
          type: integer
  /api/districts:
    get:
      summary: ''
      operationId: getApiDistricts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.district.get.success
                  districts: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.district.get.success
                  districts:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка удалена из избранного.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка удалена из избранного.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Класс гонки получен успешно.'
                    grades:
                      id: 50
                      name: 'Алина Дмитриевна Прохорова'
                      description: 'Non a provident vitae enim. Odio minus et enim cupiditate.'
                  -
                    status: success
                    message: 'Класс гонки получен успешно.'
                    grades:
                      id: 51
                      name: 'Савва Фёдорович Владимиров'
                      description: 'Modi quasi soluta sint sapiente expedita. Eos voluptatem ex molestiae quas modi. Quasi minus expedita omnis.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 8
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно создан.'
                  grade:
                    id: 53
                    name: 'Родионова Александра Владимировна'
                    description: 'Voluptatem magnam amet velit autem. Qui est ut voluptas sit magnam qui incidunt omnis. Doloribus quia consequuntur quam autem labore consequatur dolorem eligendi. Qui maxime quia non nemo.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно создан.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 53
                      name:
                        type: string
                        example: 'Родионова Александра Владимировна'
                      description:
                        type: string
                        example: 'Voluptatem magnam amet velit autem. Qui est ut voluptas sit magnam qui incidunt omnis. Doloribus quia consequuntur quam autem labore consequatur dolorem eligendi. Qui maxime quia non nemo.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ehsnksnajuah
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Accusantium rerum omnis labore ex sint qui.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки по идентификатору получен успешно.'
                  grade:
                    id: 52
                    name: 'София Борисовна Журавлёва'
                    description: 'Magni aliquam aut et voluptates sit ipsum sed. Commodi quidem occaecati ipsam iste delectus. Alias repellat rerum similique dolores maiores alias dolore.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки по идентификатору получен успешно.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 52
                      name:
                        type: string
                        example: 'София Борисовна Журавлёва'
                      description:
                        type: string
                        example: 'Magni aliquam aut et voluptates sit ipsum sed. Commodi quidem occaecati ipsam iste delectus. Alias repellat rerum similique dolores maiores alias dolore.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 19
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно изменён.'
                  grade:
                    id: 54
                    name: 'Лазарева Нонна Ивановна'
                    description: 'Autem odio veritatis voluptatem omnis adipisci nostrum accusamus. Ut laborum ullam odio. Adipisci debitis libero earum inventore excepturi. Ea et veniam in aperiam aliquid consequatur.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно изменён.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 54
                      name:
                        type: string
                        example: 'Лазарева Нонна Ивановна'
                      description:
                        type: string
                        example: 'Autem odio veritatis voluptatem omnis adipisci nostrum accusamus. Ut laborum ullam odio. Adipisci debitis libero earum inventore excepturi. Ea et veniam in aperiam aliquid consequatur.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: knletwxjbznrkcemncc
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Provident aut cumque et voluptatem.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 17
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 2
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 5
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Mr.
                    surname: Mr.
                    patronymic: Miss
                    date_of_birth: '2017-12-02'
                    city: Раменское
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '(495) 529-6711'
                    start_number: '486'
                    group: 'Системный аналитик'
                    rank_number: '99999'
                    rank: Радист
                    community: 'МФО ВодВектор'
                    coach: 'Гордей Фёдорович Панфилов'
                    moto_stamp: Mr.
                    engine: Dr.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '2017-12-02'
                      city:
                        type: string
                        example: Раменское
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(495) 529-6711'
                      start_number:
                        type: string
                        example: '486'
                      group:
                        type: string
                        example: 'Системный аналитик'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Радист
                      community:
                        type: string
                        example: 'МФО ВодВектор'
                      coach:
                        type: string
                        example: 'Гордей Фёдорович Панфилов'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:01:49'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 19
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: delectus
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: maxime
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 1
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Prof.
                    surname: Prof.
                    patronymic: Dr.
                    date_of_birth: '2019-09-05'
                    city: Лотошино
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '+7 (922) 106-5410'
                    start_number: '890'
                    group: 'Горный проводник'
                    rank_number: '100000'
                    rank: Абразивоструйщик
                    community: 'ЗАО ТверьМясРечМаш'
                    coach: 'Матвеева Рената Борисовна'
                    moto_stamp: Dr.
                    engine: Ms.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '2019-09-05'
                      city:
                        type: string
                        example: Лотошино
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '+7 (922) 106-5410'
                      start_number:
                        type: string
                        example: '890'
                      group:
                        type: string
                        example: 'Горный проводник'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Абразивоструйщик
                      community:
                        type: string
                        example: 'ЗАО ТверьМясРечМаш'
                      coach:
                        type: string
                        example: 'Матвеева Рената Борисовна'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Ms.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:01:53'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: eveniet
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: quidem
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: debitis
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: corrupti
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 6
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 93
                      name: 'Пахомов Павел Максимович'
                      desc: 'Doloremque molestiae sunt qui. Cupiditate tenetur sunt odio facilis. Placeat et suscipit culpa excepturi. Nihil ut quod quod aut.'
                      is_work: true
                      date_start: '2025-05-26T06:13:38.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 94
                      name: 'Аполлон Иванович Антонов'
                      desc: 'Omnis molestiae temporibus animi temporibus praesentium voluptatum et. Maxime praesentium et et qui et. Velit et aspernatur recusandae ad. Rem beatae esse labore.'
                      is_work: true
                      date_start: '2025-05-26T16:02:00.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 19
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 7
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 8
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 10
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:00:46'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:00:46'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 13
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: occaecati
                  nullable: true
                degreeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the degrees table.'
                  example:
                    - 10
                  items:
                    type: integer
              required:
                - degreeIds
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 96
                    name: 'Альберт Евгеньевич Киселёв'
                    desc: 'Ab ea illo autem temporibus eum deleniti. Mollitia dolor et delectus voluptas et. Quos expedita nemo nesciunt quas.'
                    is_work: false
                    date_start: '2025-05-26T05:21:52.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 96
                      name:
                        type: string
                        example: 'Альберт Евгеньевич Киселёв'
                      desc:
                        type: string
                        example: 'Ab ea illo autem temporibus eum deleniti. Mollitia dolor et delectus voluptas et. Quos expedita nemo nesciunt quas.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-26T05:21:52.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: zjvbz
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:00:57'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:00:57'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:00:57'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 20
                  nullable: true
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 19
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: repudiandae
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 2
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 95
                    name: 'Носов Владимир Максимович'
                    desc: 'Amet laboriosam tenetur rerum excepturi consequatur error. Suscipit impedit aliquid dolorem quaerat dolores fugit eaque neque. Vero sapiente adipisci et quas ipsum voluptatum.'
                    is_work: true
                    date_start: '2025-05-26T19:49:02.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 95
                      name:
                        type: string
                        example: 'Носов Владимир Максимович'
                      desc:
                        type: string
                        example: 'Amet laboriosam tenetur rerum excepturi consequatur error. Suscipit impedit aliquid dolorem quaerat dolores fugit eaque neque. Vero sapiente adipisci et quas ipsum voluptatum.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-26T19:49:02.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно удалена.'
                  race:
                    id: 100
                    name: 'Василий Романович Харитонов'
                    desc: 'Ut velit sed quibusdam corporis veritatis laborum. Est occaecati sunt ut numquam. Harum rerum tempore libero voluptate. Quibusdam rerum quasi nihil odio.'
                    is_work: false
                    date_start: '2025-05-26T12:34:04.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно удалена.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 100
                      name:
                        type: string
                        example: 'Василий Романович Харитонов'
                      desc:
                        type: string
                        example: 'Ut velit sed quibusdam corporis veritatis laborum. Est occaecati sunt ut numquam. Harum rerum tempore libero voluptate. Quibusdam rerum quasi nihil odio.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-26T12:34:04.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 97
                    name: 'Диана Алексеевна Вишнякова'
                    desc: 'Voluptate quod quibusdam in deserunt et nulla. Perspiciatis et consequatur ut impedit perspiciatis. Sit id quo minus perferendis est eum magnam consequatur.'
                    is_work: true
                    date_start: '2025-05-26T15:33:19.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 97
                      name:
                        type: string
                        example: 'Диана Алексеевна Вишнякова'
                      desc:
                        type: string
                        example: 'Voluptate quod quibusdam in deserunt et nulla. Perspiciatis et consequatur ut impedit perspiciatis. Sit id quo minus perferendis est eum magnam consequatur.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-26T15:33:19.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: murvuqzbicjvwptfwrgfhaiamjresoimmhcmrkfwpnqlxyklzsrl
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:01:01'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:01:01'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-26T13:01:01'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - in
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 8
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 3
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 4
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Состояние гонки успешно изменено на не рабочее.'
                  race:
                    id: 98
                    name: 'Петрова Мальвина Максимовна'
                    desc: 'Autem dolor consequatur distinctio et odio. Qui porro laborum ut magni suscipit dolor. Repellendus dolores eos aut provident doloremque facilis autem. Voluptas quaerat beatae quo.'
                    is_work: false
                    date_start: '2025-05-26T15:29:10.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Состояние гонки успешно изменено на не рабочее.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 98
                      name:
                        type: string
                        example: 'Петрова Мальвина Максимовна'
                      desc:
                        type: string
                        example: 'Autem dolor consequatur distinctio et odio. Qui porro laborum ut magni suscipit dolor. Repellendus dolores eos aut provident doloremque facilis autem. Voluptas quaerat beatae quo.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-26T15:29:10.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Доступ запрещен.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Доступ запрещен.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 13
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/races/{id}/add-document':
    post:
      summary: addDocument
      operationId: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно добавлен'
                  race:
                    id: 101
                    name: 'Юдин Афанасий Сергеевич'
                    desc: 'Qui et est optio optio eaque voluptatem cum. Aspernatur eaque labore repudiandae blanditiis accusantium. Magnam ut voluptatum rerum cum enim eos.'
                    is_work: true
                    date_start: '2025-05-26T22:00:26.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно добавлен'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 101
                      name:
                        type: string
                        example: 'Юдин Афанасий Сергеевич'
                      desc:
                        type: string
                        example: 'Qui et est optio optio eaque voluptatem cum. Aspernatur eaque labore repudiandae blanditiis accusantium. Magnam ut voluptatum rerum cum enim eos.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-26T22:00:26.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdfFiles:
                  type: array
                  description: 'Must be a file.'
                  items:
                    type: string
                    format: binary
                pdfFilesDel:
                  type: array
                  description: ''
                  example:
                    - et
                  items:
                    type: string
              required:
                - pdfFiles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  '/api/race/{id}/results':
    get:
      summary: get
      operationId: get
      description: 'Получение результатов гонки по фильтрам.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: null
                      place: null
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: null
                      place: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RaceResult
      security: []
    post:
      summary: create
      operationId: create
      description: 'Сохранение результатов.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Результат гонщика успешно сохранён.'
                  result:
                    scores: null
                    place: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Результат гонщика успешно сохранён.'
                  result:
                    type: object
                    properties:
                      scores:
                        type: string
                        example: null
                      place:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RaceResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: false
                cupId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example: 3
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 17
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 14
                  nullable: false
                scores:
                  type: integer
                  description: ''
                  example: 3
                  nullable: false
                place:
                  type: integer
                  description: ''
                  example: 5
                  nullable: false
              required:
                - userId
                - gradeId
                - scores
                - place
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 23
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table.'
                  example: josianne07@example.org
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://torp.com/dolorum-est-sapiente-ea-dolorem-aut'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пароль был успешно изменён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пароль был успешно изменён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: qiwKGoy3no
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: voluptatibus
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 1385
                    name: 'Фаина Алексеевна Сорокина'
                    email: rpanfilova@example.net
                    email_verified_at: '2025-05-26T13:00:42.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1385
                      name:
                        type: string
                        example: 'Фаина Алексеевна Сорокина'
                      email:
                        type: string
                        example: rpanfilova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-26T13:00:42.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 9
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 4
                      name: 'Варвара Владимировна Рябова'
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 5
                      name: 'Нелли Романовна Кабанова'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 3
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: tyxqnsuaizoogpumsavibt
                  nullable: false
                password_1:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: adqkh
                  nullable: false
                password_2:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: uacwshqxstmwkaw
                  nullable: false
                token:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: utvgm
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 52
                      name: 'Системный аналитик'
                      address: '542427, Архангельская область, город Наро-Фоминск, спуск Славы, 49'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Repellendus provident corrupti dolores dolores necessitatibus quia nihil. Facere voluptatibus officiis enim. Enim reprehenderit modi delectus provident minima. Ut beatae laborum corporis sed soluta velit numquam. Laudantium molestias sint harum a quibusdam quod. Dignissimos ratione aut blanditiis ut incidunt deserunt. Ut quasi beatae eaque voluptate eveniet ut veniam. Sed repudiandae veniam quia neque tenetur et eum.'
                      length: 677
                      turns: 84
                      free: false
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 16
                        name: Еврейская
                        type: 'автономная область'
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                      attendance: []
                      requisites: null
                      offer: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 53
                      name: Психолог
                      address: '566745, Тверская область, город Талдом, пл. Балканская, 48'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'In pariatur nihil sit consequatur. Quia et soluta ut corporis magni voluptatem. Fuga magnam suscipit tenetur doloremque et. Sint adipisci necessitatibus repudiandae voluptatem dicta quam labore. Tempore non qui vel voluptatem. Est occaecati sint est vel. Voluptatum facere dolor tempora ut magnam autem provident voluptate. Sed delectus sed reprehenderit. Officia vero aut placeat odit quos. Aspernatur facere harum quo dignissimos. Autem eum doloremque maxime praesentium earum.'
                      length: 522
                      turns: 89
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 15
                        name: Дагестан
                        type: республика
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                      attendance: []
                      requisites: null
                      offer: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                storeIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 1
                  nullable: true
                checkStore:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 10
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 55
                    name: 'Научный сотрудник'
                    address: '963856, Тверская область, город Павловский Посад, наб. Ладыгина, 92'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Sit nostrum eos sint dolores magni delectus officia. Voluptatem non aliquam autem eveniet. Ipsum quos quaerat quibusdam consequatur cupiditate. Quod impedit est modi. Dolores magni officia laborum. Ipsam facere et qui quod sint iusto tempora. Et ullam culpa fugiat accusamus sit id porro in. Aspernatur voluptatem alias temporibus id et officia. Incidunt aut dolorem iste voluptatem necessitatibus.'
                    length: 369
                    turns: 37
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 6
                      name: Астраханская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 55
                      name:
                        type: string
                        example: 'Научный сотрудник'
                      address:
                        type: string
                        example: '963856, Тверская область, город Павловский Посад, наб. Ладыгина, 92'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Sit nostrum eos sint dolores magni delectus officia. Voluptatem non aliquam autem eveniet. Ipsum quos quaerat quibusdam consequatur cupiditate. Quod impedit est modi. Dolores magni officia laborum. Ipsam facere et qui quod sint iusto tempora. Et ullam culpa fugiat accusamus sit id porro in. Aspernatur voluptatem alias temporibus id et officia. Incidunt aut dolorem iste voluptatem necessitatibus.'
                      length:
                        type: integer
                        example: 369
                      turns:
                        type: integer
                        example: 37
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 6
                          name:
                            type: string
                            example: Астраханская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: yqmnetywuxoffrxoibuocfwagwqxvnlinlwdiprzjooxfkanguirlpdjgnzdebadgh
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 4
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 10
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                requisitesName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: am
                  nullable: true
                requisitesEmail:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vhegmann@example.org
                  nullable: true
                requisitesPhone:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: qvlmihbzjqrywhhoxaysiw
                  nullable: true
                requisitesINN:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: imapybyldasan
                  nullable: true
                requisitesPricePolitics:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: qoedidmezrqctxqqxcp
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 54
                    name: Кассир
                    address: '005462, Орловская область, город Коломна, пер. Гоголя, 10'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Cum mollitia autem molestias quis doloribus quia voluptatem cupiditate. Rerum aut tempora reiciendis. Labore et quos sapiente. Et qui sit fuga. Ut laboriosam voluptas mollitia sed. Illo ex ut non facilis ut aliquid et. Velit sint beatae et modi natus vero quia. Harum nobis autem quo est consequatur. Asperiores unde quidem odio provident nulla ea sequi. Reprehenderit doloribus ut officia explicabo molestias.'
                    length: 69
                    turns: 62
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 65
                      name: Смоленская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 54
                      name:
                        type: string
                        example: Кассир
                      address:
                        type: string
                        example: '005462, Орловская область, город Коломна, пер. Гоголя, 10'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Cum mollitia autem molestias quis doloribus quia voluptatem cupiditate. Rerum aut tempora reiciendis. Labore et quos sapiente. Et qui sit fuga. Ut laboriosam voluptas mollitia sed. Illo ex ut non facilis ut aliquid et. Velit sint beatae et modi natus vero quia. Harum nobis autem quo est consequatur. Asperiores unde quidem odio provident nulla ea sequi. Reprehenderit doloribus ut officia explicabo molestias.'
                      length:
                        type: integer
                        example: 69
                      turns:
                        type: integer
                        example: 62
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 65
                          name:
                            type: string
                            example: Смоленская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно изменён.'
                  track:
                    id: 56
                    name: Машинист
                    address: '876514, Брянская область, город Серебряные Пруды, пр. Ленина, 75'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Recusandae placeat mollitia beatae impedit corrupti sint velit. Voluptatem libero nihil est fuga quam quae deleniti. Aut velit ullam ipsam. Quia porro ut est ut. Perferendis autem maiores id incidunt alias est aliquid. Atque est unde saepe reprehenderit incidunt. Explicabo blanditiis dolor consequuntur. Inventore ut illum sed modi illum saepe. Ullam et enim enim repellendus labore dicta.'
                    length: 694
                    turns: 10
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 23
                      name: Калмыкия
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно изменён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 56
                      name:
                        type: string
                        example: Машинист
                      address:
                        type: string
                        example: '876514, Брянская область, город Серебряные Пруды, пр. Ленина, 75'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Recusandae placeat mollitia beatae impedit corrupti sint velit. Voluptatem libero nihil est fuga quam quae deleniti. Aut velit ullam ipsam. Quia porro ut est ut. Perferendis autem maiores id incidunt alias est aliquid. Atque est unde saepe reprehenderit incidunt. Explicabo blanditiis dolor consequuntur. Inventore ut illum sed modi illum saepe. Ullam et enim enim repellendus labore dicta.'
                      length:
                        type: integer
                        example: 694
                      turns:
                        type: integer
                        example: 10
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 23
                          name:
                            type: string
                            example: Калмыкия
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: osuucq
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - non
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 6
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: iste
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 6
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                requisitesName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vwmtjbd
                  nullable: true
                requisitesEmail:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: wlakin@example.com
                  nullable: true
                requisitesPhone:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: p
                  nullable: true
                requisitesINN:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: dxfteloans
                  nullable: true
                requisitesPricePolitics:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: nxbrtajezmestkvtwm
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно удалён.'
                  track:
                    id: 57
                    name: Детектив
                    address: '580311, Нижегородская область, город Шатура, спуск Ладыгина, 96'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Soluta eum possimus expedita. Rem et eaque sunt consequatur ut. Omnis et consectetur voluptas minima quod. Incidunt voluptatibus voluptas porro a numquam quae. Ut reiciendis voluptate et saepe. Et et totam consequatur nemo nobis quaerat non. Ea vel enim rerum maiores tempore. Quia quo non iure dignissimos consequatur impedit dolores. Vel et itaque et expedita voluptatem voluptates. Quaerat aut ut consectetur facilis sed quis.'
                    length: 916
                    turns: 68
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 56
                      name: Ростовская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно удалён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 57
                      name:
                        type: string
                        example: Детектив
                      address:
                        type: string
                        example: '580311, Нижегородская область, город Шатура, спуск Ладыгина, 96'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Soluta eum possimus expedita. Rem et eaque sunt consequatur ut. Omnis et consectetur voluptas minima quod. Incidunt voluptatibus voluptas porro a numquam quae. Ut reiciendis voluptate et saepe. Et et totam consequatur nemo nobis quaerat non. Ea vel enim rerum maiores tempore. Quia quo non iure dignissimos consequatur impedit dolores. Vel et itaque et expedita voluptatem voluptates. Quaerat aut ut consectetur facilis sed quis.'
                      length:
                        type: integer
                        example: 916
                      turns:
                        type: integer
                        example: 68
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 56
                          name:
                            type: string
                            example: Ростовская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 17
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно.'
                  user:
                    id: 1380
                    name: 'Шубина Валентина Алексеевна'
                    email: fadeeva.zanna@example.org
                    email_verified_at: '2025-05-26T12:59:15.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1380
                      name:
                        type: string
                        example: 'Шубина Валентина Алексеевна'
                      email:
                        type: string
                        example: fadeeva.zanna@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-26T12:59:15.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь был успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь был успешно удалён.'
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь получен успешно.'
                  user:
                    id: 1381
                    name: 'Алиса Сергеевна Миронова'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1381
                      name:
                        type: string
                        example: 'Алиса Сергеевна Миронова'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 14
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  user:
                    id: 1382
                    name: 'Вишнякова Инесса Дмитриевна'
                    email: zpopova@example.com
                    email_verified_at: '2025-05-26T12:59:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1382
                      name:
                        type: string
                        example: 'Вишнякова Инесса Дмитриевна'
                      email:
                        type: string
                        example: zpopova@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-26T12:59:23.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: dhljojil
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: igerhold@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: qpswgytqsgjm
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 1383
                      name: 'Карпов Геннадий Владимирович'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 1384
                      name: 'Ростислав Фёдорович Трофимов'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 20
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Код для подтверждения электронной почты отправлена на вашу почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Код для подтверждения электронной почты отправлена на вашу почту.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Почта уже подтверждена.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Почта уже подтверждена.'
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ваша почта успешно подтверждена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ваша почта успешно подтверждена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Почта уже подтверждена.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Почта уже подтверждена.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Код не подходит.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Код не подходит.'
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 25
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами.'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Degree
    description: 'Методы связанные с уровнями кубков. Например всероссийский, областной и т.д.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RaceResult
    description: 'Управление результатами гонок.'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
