openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 26|pVXVMAQe3M8vCFOJuylert2Q1OsWNSX9M3ooMW6m879e01af
                  token_type: Bearer
                  user:
                    id: 49
                    name: 'Эдуард Иванович Пономарёв'
                    email: veselov.mikail@example.com
                    email_verified_at: '2025-01-24T05:14:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 26|pVXVMAQe3M8vCFOJuylert2Q1OsWNSX9M3ooMW6m879e01af
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 49
                      name:
                        type: string
                        example: 'Эдуард Иванович Пономарёв'
                      email:
                        type: string
                        example: veselov.mikail@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-24T05:14:23.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: gislason.dayne@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: "'`DEE$6}L."
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 27|m870zPOlX1CDSlY9UmNLsBc11tCFMOMrPOD5zkQT6257044f
                  token_type: Bearer
                  user:
                    id: 50
                    name: 'Копылова Алла Романовна'
                    email: gerasimova.nadezda@example.net
                    email_verified_at: '2025-01-24T05:14:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 27|m870zPOlX1CDSlY9UmNLsBc11tCFMOMrPOD5zkQT6257044f
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 50
                      name:
                        type: string
                        example: 'Копылова Алла Романовна'
                      email:
                        type: string
                        example: gerasimova.nadezda@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-24T05:14:23.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: tnfujnfsj
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: virgie27@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: JRl).k
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: dignissimos
                  nullable: false
                avatar:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: excepturi
                  nullable: false
                data:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["amet","alias"]'
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: file_678f974ca37ac
                  type: фото
                  path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                  data: '{"kkk": "ssss"}'
                  user_id: 13
                  created_at: '2025-01-21T12:47:08.000000Z'
                  updated_at: '2025-01-21T12:47:08.000000Z'
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: file_678f974ca37ac
                  type:
                    type: string
                    example: фото
                  path:
                    type: string
                    example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                  data:
                    type: string
                    example: '{"kkk": "ssss"}'
                  user_id:
                    type: integer
                    example: 13
                  created_at:
                    type: string
                    example: '2025-01-21T12:47:08.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-21T12:47:08.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["similique","quia"]'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Ms.
                    surname: Mr.
                    patronymic: Ms.
                    date_of_birth: null
                    city: Талдом
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: 8-800-990-9791
                    start_number: '276'
                    group: Телефонистка
                    rank_number: '100000'
                    rank: Архивист
                    community: 'ОАО Креп'
                    coach: 'Василий Романович Аксёнов'
                    moto_stamp: Prof.
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ms.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Талдом
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 8-800-990-9791
                      start_number:
                        type: string
                        example: '276'
                      group:
                        type: string
                        example: Телефонистка
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Архивист
                      community:
                        type: string
                        example: 'ОАО Креп'
                      coach:
                        type: string
                        example: 'Василий Романович Аксёнов'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Mr.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-24T05:14:23'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: neque
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: quidem
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: et
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Mr.
                    surname: Dr.
                    patronymic: Mrs.
                    date_of_birth: null
                    city: Пушкино
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(495) 800-1793'
                    start_number: '478'
                    group: Радист
                    rank_number: '99999'
                    rank: 'Технический писатель'
                    community: 'ЗАО Газ'
                    coach: 'Юлий Львович Кудряшов'
                    moto_stamp: Prof.
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Пушкино
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(495) 800-1793'
                      start_number:
                        type: string
                        example: '478'
                      group:
                        type: string
                        example: Радист
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Технический писатель'
                      community:
                        type: string
                        example: 'ЗАО Газ'
                      coach:
                        type: string
                        example: 'Юлий Львович Кудряшов'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Mr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-24T05:14:23'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                snils:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: nemo
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 39
                      name: 'София Романовна Ермакова'
                      desc: 'Est libero sint ut voluptas sint recusandae beatae. Hic est et ratione rerum asperiores reprehenderit est. Nihil et quasi aliquam corporis.'
                      is_work: false
                      date_start: null
                      images: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 40
                      name: 'Дмитриева Анжелика Алексеевна'
                      desc: 'Rerum consequuntur ut ipsa accusamus sit debitis odio. Ut qui velit quod nihil. Ad sapiente corporis quis rerum enim.'
                      is_work: false
                      date_start: null
                      images: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 22
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 42
                    name: 'Филатова Инна Максимовна'
                    desc: 'Fuga quo aut velit recusandae ea. Occaecati possimus cum mollitia. Enim et quod illo adipisci inventore. Suscipit est perferendis nisi neque optio dolores error et.'
                    is_work: true
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                      name:
                        type: string
                        example: 'Филатова Инна Максимовна'
                      desc:
                        type: string
                        example: 'Fuga quo aut velit recusandae ea. Occaecati possimus cum mollitia. Enim et quod illo adipisci inventore. Suscipit est perferendis nisi neque optio dolores error et.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: dfzgdgczfxoolcsqzagdkrumpnlbgkcoirpiykdxomooprexzkpqefwxlgrpoqtqkzqiluqpmajugycsrxbybrxhf
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: ipsam
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-01-24T05:14:23'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 18
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 41
                    name: 'Клавдия Владимировна Максимова'
                    desc: 'Minima harum ipsum culpa et. Odit maxime ut veritatis aut. Ducimus unde impedit et est officia totam eos.'
                    is_work: true
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 41
                      name:
                        type: string
                        example: 'Клавдия Владимировна Максимова'
                      desc:
                        type: string
                        example: 'Minima harum ipsum culpa et. Odit maxime ut veritatis aut. Ducimus unde impedit et est officia totam eos.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 53
                    name: 'Владимирова Лидия Борисовна'
                    email: sbobyleva@example.com
                    email_verified_at: '2025-01-24T05:14:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 53
                      name:
                        type: string
                        example: 'Владимирова Лидия Борисовна'
                      email:
                        type: string
                        example: sbobyleva@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-24T05:14:23.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 18
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 39
                      name: Чабан
                      address: '995885, Оренбургская область, город Кашира, наб. Будапештсткая, 57'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Totam quia asperiores natus non quisquam culpa. Minus aliquam eum pariatur qui iste. Repellendus qui sit est ut dicta atque. Numquam perferendis et maxime non consectetur aliquid modi asperiores. Praesentium saepe ea numquam et rerum. Asperiores molestiae alias exercitationem ut et laboriosam repudiandae. Aut sint eos voluptatem explicabo quis sunt minima.'
                      length: 371
                      turns: 28
                      free: true
                      is_work: false
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 40
                      name: Бизнес-аналитик
                      address: '845103, Ивановская область, город Наро-Фоминск, шоссе Будапештсткая, 41'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Necessitatibus assumenda sed quos nihil autem quae maiores. Sed consequatur voluptas ipsum dolorem libero mollitia laborum. Cum id provident qui veniam esse. Voluptatem recusandae vel et a commodi ipsa minima. Iste unde et laudantium nulla. Nam rerum ipsum et molestias nihil. Sed maiores ab facilis rerum. Hic hic sed dignissimos. Qui odio ducimus quibusdam veritatis. Vitae velit officiis quos esse ea.'
                      length: 912
                      turns: 3
                      free: false
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 15
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 42
                    name: Арт-директор
                    address: '170646, Белгородская область, город Красногорск, шоссе Домодедовская, 40'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Esse minima omnis voluptatem commodi et et. Consequuntur soluta consequatur rem minus. Eos ab eius pariatur sed. Quas quis quis omnis. Recusandae optio accusantium quia non id sapiente. Asperiores deserunt et praesentium quis. Est sunt deserunt at adipisci. Cum repudiandae error iure quis temporibus voluptas. Accusantium voluptas minus voluptatem. Similique praesentium et tempore repudiandae. Sunt dolorem ipsam voluptates iusto.'
                    length: 497
                    turns: 22
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                      name:
                        type: string
                        example: Арт-директор
                      address:
                        type: string
                        example: '170646, Белгородская область, город Красногорск, шоссе Домодедовская, 40'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Esse minima omnis voluptatem commodi et et. Consequuntur soluta consequatur rem minus. Eos ab eius pariatur sed. Quas quis quis omnis. Recusandae optio accusantium quia non id sapiente. Asperiores deserunt et praesentium quis. Est sunt deserunt at adipisci. Cum repudiandae error iure quis temporibus voluptas. Accusantium voluptas minus voluptatem. Similique praesentium et tempore repudiandae. Sunt dolorem ipsam voluptates iusto.'
                      length:
                        type: integer
                        example: 497
                      turns:
                        type: integer
                        example: 22
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: ehycnbxrwvwwvdqggxwslkvpavrrpjakthbeinmsogbrzwbj
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 11
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: illo
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["odit","tenetur"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 41
                    name: Дипломат
                    address: '535572, Омская область, город Егорьевск, бульвар Балканская, 40'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Aspernatur voluptatibus consectetur cumque aut. Vel quia debitis molestiae non impedit nihil. A at quaerat ex blanditiis tenetur. Modi architecto eveniet vitae tempora. Quia mollitia et labore fugit officia. Voluptas delectus ut cupiditate rerum earum vitae dignissimos. Voluptatum ex distinctio adipisci itaque animi iusto aperiam. Accusamus dolor quasi reiciendis asperiores. Laborum adipisci ex qui aut rerum. Perferendis excepturi maiores odio sunt ut autem.'
                    length: 674
                    turns: 98
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 41
                      name:
                        type: string
                        example: Дипломат
                      address:
                        type: string
                        example: '535572, Омская область, город Егорьевск, бульвар Балканская, 40'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Aspernatur voluptatibus consectetur cumque aut. Vel quia debitis molestiae non impedit nihil. A at quaerat ex blanditiis tenetur. Modi architecto eveniet vitae tempora. Quia mollitia et labore fugit officia. Voluptas delectus ut cupiditate rerum earum vitae dignissimos. Voluptatum ex distinctio adipisci itaque animi iusto aperiam. Accusamus dolor quasi reiciendis asperiores. Laborum adipisci ex qui aut rerum. Perferendis excepturi maiores odio sunt ut autem.'
                      length:
                        type: integer
                        example: 674
                      turns:
                        type: integer
                        example: 98
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 52
                    name: 'Горбачёва Дина Львовна'
                    email: rada54@example.com
                    email_verified_at: '2025-01-24T05:14:23.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 52
                      name:
                        type: string
                        example: 'Горбачёва Дина Львовна'
                      email:
                        type: string
                        example: rada54@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-24T05:14:23.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
