openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: magni
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: rerum
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:38'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: quam
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: quam
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: non
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: molestias
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 11
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: quos
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: in
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: vel
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: reiciendis
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: quis
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 4
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 624
                      name: 'Desmond Schultz'
                      email: verona86@example.net
                      email_verified_at: '2025-05-05T07:00:38.000000Z'
                      created_at: '2025-05-05T07:00:38.000000Z'
                      updated_at: '2025-05-05T07:00:38.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 625
                      name: 'Deanna Erdman MD'
                      email: lynch.lacy@example.org
                      email_verified_at: '2025-05-05T07:00:38.000000Z'
                      created_at: '2025-05-05T07:00:38.000000Z'
                      updated_at: '2025-05-05T07:00:38.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 15
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 626
                    name: 'Nicklaus Mann'
                    email: ernestina.feest@example.net
                    email_verified_at: '2025-05-05T07:00:39.000000Z'
                    created_at: '2025-05-05T07:00:39.000000Z'
                    updated_at: '2025-05-05T07:00:39.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 626
                      name:
                        type: string
                        example: 'Nicklaus Mann'
                      email:
                        type: string
                        example: ernestina.feest@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-05T07:00:39.000000Z'
                      created_at:
                        type: string
                        example: '2025-05-05T07:00:39.000000Z'
                      updated_at:
                        type: string
                        example: '2025-05-05T07:00:39.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 18
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/export':
    get:
      summary: Export
      operationId: export
      description: 'Экспорт результатов'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/import':
    post:
      summary: Import
      operationId: import
      description: 'Импорт результатов'
      parameters: []
      responses: {  }
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/checked':
    post:
      summary: checkedForCommission
      operationId: checkedForCommission
      description: 'Подтверждение записи участника гонки.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.checked.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.checked.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                checked:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
              required:
                - checked
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: reiciendis
        required: true
        schema:
          type: string
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 177
                    name: 'Brooklyn Rippin'
                    desc: 'Eos temporibus cumque a fuga quia autem dolorum soluta. Rerum sit aut ea a earum maiores. Qui velit consequatur a dignissimos. Ipsum non pariatur debitis accusantium laboriosam veritatis.'
                    price: '41'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 177
                      name:
                        type: string
                        example: 'Brooklyn Rippin'
                      desc:
                        type: string
                        example: 'Eos temporibus cumque a fuga quia autem dolorum soluta. Rerum sit aut ea a earum maiores. Qui velit consequatur a dignissimos. Ipsum non pariatur debitis accusantium laboriosam veritatis.'
                      price:
                        type: string
                        example: '41'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wklxyvvpfxgkiyyayepmssdg
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cvhegstrx
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 259116561.993
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 17
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 178
                    name: 'Kaci Prosacco Jr.'
                    desc: 'Officiis nihil natus voluptatem deserunt enim. Aliquam nulla sed ea est amet laborum at. Sed officia optio similique fugit architecto magnam velit.'
                    price: '2'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 178
                      name:
                        type: string
                        example: 'Kaci Prosacco Jr.'
                      desc:
                        type: string
                        example: 'Officiis nihil natus voluptatem deserunt enim. Aliquam nulla sed ea est amet laborum at. Sed officia optio similique fugit architecto magnam velit.'
                      price:
                        type: string
                        example: '2'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hymoqzpdmiyjjoj
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qeijfd
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 1184092.04962
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 179
                    name: 'Amiya Schmitt'
                    desc: 'Rem sit sed assumenda sint. Quis sit voluptatem distinctio et. Consequatur quisquam deleniti iste dolores eos optio dolorem tempore.'
                    price: '358697'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 179
                      name:
                        type: string
                        example: 'Amiya Schmitt'
                      desc:
                        type: string
                        example: 'Rem sit sed assumenda sint. Quis sit voluptatem distinctio et. Consequatur quisquam deleniti iste dolores eos optio dolorem tempore.'
                      price:
                        type: string
                        example: '358697'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 1
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 103|OSQ6iMl28f9mMZqugubj1BgFv0OJcsCnHBCmCGN4281aeace
                  token_type: Bearer
                  user:
                    id: 614
                    name: 'Ethyl Spinka III'
                    email: padberg.dulce@example.net
                    email_verified_at: '2025-05-05T07:00:26.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 103|OSQ6iMl28f9mMZqugubj1BgFv0OJcsCnHBCmCGN4281aeace
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 614
                      name:
                        type: string
                        example: 'Ethyl Spinka III'
                      email:
                        type: string
                        example: padberg.dulce@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-05T07:00:26.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters.'
                  example: bryce51@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: ']$S|Rx^wrb>4v'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 104|Dk5H1VMQJ3xqFK8dOjGS5UmNyZtXl1gE4PuRQsQVf94d43c0
                  token_type: Bearer
                  user:
                    id: 615
                    name: 'Dr. Elroy Anderson'
                    email: zola55@example.net
                    email_verified_at: '2025-05-05T07:00:27.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 104|Dk5H1VMQJ3xqFK8dOjGS5UmNyZtXl1gE4PuRQsQVf94d43c0
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 615
                      name:
                        type: string
                        example: 'Dr. Elroy Anderson'
                      email:
                        type: string
                        example: zola55@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-05T07:00:27.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: tjyolqzlqvydsmad
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: anderson.jordan@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'oz_6T5&+yXf<ly54'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: tempora
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: jgy
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: lmexd
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 105|bVmzJoHN0vCAKU5ooXD1ecr3evQ0wH9RNInpsrdg0b9a7759
                  token_type: Bearer
                  user:
                    id: 617
                    name: 'Prof. Abdul Morissette V'
                    email: ostoltenberg@example.org
                    email_verified_at: '2025-05-05T07:00:28.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 105|bVmzJoHN0vCAKU5ooXD1ecr3evQ0wH9RNInpsrdg0b9a7759
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 617
                      name:
                        type: string
                        example: 'Prof. Abdul Morissette V'
                      email:
                        type: string
                        example: ostoltenberg@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-05T07:00:28.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 4 characters.'
                  example: tj
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: sievipyllc
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
              required:
                - key
                - phone
      security: []
  '/api/phone/{userId}/delete':
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление телефона'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.phone.delete.success
                  phone:
                    number: null
                    last_num: null
                    number_verified_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.phone.delete.success
                  phone:
                    type: object
                    properties:
                      number:
                        type: string
                        example: null
                      last_num:
                        type: string
                        example: null
                      number_verified_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 233
                      name: 'Brisa Shanahan'
                      full_name: null
                      coach: null
                      city: Kubfort
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 234
                      name: 'Cordie Stark'
                      full_name: null
                      coach: null
                      city: 'New Omabury'
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 16
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: illo
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: eaque
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: blanditiis
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 236
                    name: 'Dr. Maureen Wuckert'
                    full_name: null
                    coach: null
                    city: Bashirianbury
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 236
                      name:
                        type: string
                        example: 'Dr. Maureen Wuckert'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Bashirianbury
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dyit
                  nullable: false
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: isybdz
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: olwimivzhlmpffqmc
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kumtz
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 235
                    name: 'Dane Jaskolski II'
                    full_name: null
                    coach: null
                    city: Geraldinefurt
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 235
                      name:
                        type: string
                        example: 'Dane Jaskolski II'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Geraldinefurt
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: officia
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 237
                    name: 'Prof. Audreanne Greenfelder I'
                    full_name: null
                    coach: null
                    city: Paoloburgh
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 237
                      name:
                        type: string
                        example: 'Prof. Audreanne Greenfelder I'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Paoloburgh
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tprzuhqgwtqtxaczw
                  nullable: true
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mhpezpcyapymwmu
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: orwhpamdofclveyxwkjbrgo
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: epyhzzcyvoeqkxekjdpho
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.delete.success
                  command:
                    id: 238
                    name: 'Shannon Satterfield'
                    full_name: null
                    coach: null
                    city: Boyerton
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.delete.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 238
                      name:
                        type: string
                        example: 'Shannon Satterfield'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Boyerton
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.add_couch.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.add_couch.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: voluptatum
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.member_toggle.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.member_toggle.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 627
                    name: 'Telly Kiehn'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 627
                      name:
                        type: string
                        example: 'Telly Kiehn'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 25
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 20
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 628
                    name: 'Johanna Heller III'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 628
                      name:
                        type: string
                        example: 'Johanna Heller III'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: officia
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 9
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 629
                    name: 'Hattie Dickens'
                    email: jerde.mary@example.com
                    email_verified_at: '2025-05-05T07:00:41.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 629
                      name:
                        type: string
                        example: 'Hattie Dickens'
                      email:
                        type: string
                        example: jerde.mary@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-05T07:00:41.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 18
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 19
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 15
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 119
                    name: 'Reed Dickinson'
                    year: 2024
                    stages: '4'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 119
                      name:
                        type: string
                        example: 'Reed Dickinson'
                      year:
                        type: integer
                        example: 2024
                      stages:
                        type: string
                        example: '4'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 9
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: illum
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: nemo
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 122
                    name: 'Avery Mante V'
                    year: 2005
                    stages: '2'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 122
                      name:
                        type: string
                        example: 'Avery Mante V'
                      year:
                        type: integer
                        example: 2005
                      stages:
                        type: string
                        example: '2'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ksnioxdeqxwjlhqmsrykjms
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: brpomjxflzsyyjgj
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: qui
        required: true
        schema:
          type: string
  '/api/cups/race/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение кубков по id гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_race_id.success
                  cup:
                    id: 120
                    name: 'Ms. Rosina Hickle V'
                    year: 1994
                    stages: '2'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_race_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 120
                      name:
                        type: string
                        example: 'Ms. Rosina Hickle V'
                      year:
                        type: integer
                        example: 1994
                      stages:
                        type: string
                        example: '2'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                raceId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the race table.'
                  example: 5
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 121
                    name: 'Cassie Von'
                    year: 1973
                    stages: '2'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 121
                      name:
                        type: string
                        example: 'Cassie Von'
                      year:
                        type: integer
                        example: 1973
                      stages:
                        type: string
                        example: '2'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: sjboglljvsdpuavqbryy
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 19
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: dogbmqhfb
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 10
                  nullable: true
              required:
                - name
                - year
  /api/degree:
    get:
      summary: get
      operationId: get
      description: 'Получить все уровни.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.degree.get.success
                    degree:
                      id: null
                      name: null
                      desc: null
                  -
                    status: success
                    message: messages.degree.get.success
                    degree:
                      id: null
                      name: null
                      desc: null
      tags:
        - Degree
      security: []
  '/api/degree/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение уровня по id.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.degree.get_for_ids.success
                  degree:
                    id: null
                    name: null
                    desc: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.degree.get_for_ids.success
                  degree:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Degree
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the degree.'
        example: 8
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 331
                    name: file_6818621519d1f
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 331
                      name:
                        type: string
                        example: file_6818621519d1f
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: polis
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://www.hand.com/'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: repellat
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 332
                      name: file_6818621547064
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 333
                      name: file_681862155496a
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 15
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 20
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 334
                    name: file_6818621591730
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 334
                      name:
                        type: string
                        example: file_6818621591730
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 335
                    name: file_68186215c4a21
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 335
                      name:
                        type: string
                        example: file_68186215c4a21
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    post:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.verify_docs_for_commission.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.verify_docs_for_commission.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checked:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                comment:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
              required:
                - checked
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 2
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 183
                    status: false
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 183
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 2
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:32'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 184
                  status: false
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 184
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  /api/districts:
    get:
      summary: ''
      operationId: getApiDistricts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.district.get.success
                  districts: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.district.get.success
                  districts:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.favorite_user.toggle.success_remove
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.favorite_user.toggle.success_remove
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 185
                      name: 'Prof. Amir Carter'
                      description: 'Provident est nostrum eos blanditiis quia ad a reprehenderit. Ipsa aliquid velit sed veniam ratione. Vero quae molestiae laboriosam dolorem.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 186
                      name: 'Karl Anderson'
                      description: 'Et omnis inventore et ab. Exercitationem est quisquam et et et earum. Amet ipsam ad perferendis id voluptas.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: perferendis
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 10
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 188
                    name: 'Gabriella Reynolds'
                    description: 'Saepe explicabo qui libero laboriosam. Accusamus odit placeat nobis consequuntur quos porro. Omnis dolorem ea sed.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 188
                      name:
                        type: string
                        example: 'Gabriella Reynolds'
                      description:
                        type: string
                        example: 'Saepe explicabo qui libero laboriosam. Accusamus odit placeat nobis consequuntur quos porro. Omnis dolorem ea sed.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xlytxalixeip
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Natus a saepe quo molestiae.'
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 20
                  nullable: false
              required:
                - name
                - gradeId
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 187
                    name: 'Dominique Towne'
                    description: 'Eius sit vel et in molestiae. A cum soluta rerum neque. Et velit voluptatem mollitia.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 187
                      name:
                        type: string
                        example: 'Dominique Towne'
                      description:
                        type: string
                        example: 'Eius sit vel et in molestiae. A cum soluta rerum neque. Et velit voluptatem mollitia.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 17
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 189
                    name: 'Aidan Rohan III'
                    description: 'Occaecati corporis omnis quisquam temporibus. Architecto porro praesentium maxime dolor ratione optio et. Enim aspernatur et assumenda quisquam incidunt necessitatibus.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 189
                      name:
                        type: string
                        example: 'Aidan Rohan III'
                      description:
                        type: string
                        example: 'Occaecati corporis omnis quisquam temporibus. Architecto porro praesentium maxime dolor ratione optio et. Enim aspernatur et assumenda quisquam incidunt necessitatibus.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jhuva
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Aperiam ipsum repellendus sit.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 4
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 19
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: neque
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Prof.
                    surname: Prof.
                    patronymic: Miss
                    date_of_birth: '1992-10-30'
                    city: Quigleyville
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: '+17737668063'
                    start_number: '101'
                    group: 'Board Of Directors'
                    rank_number: '99999'
                    rank: 'Transit Police OR Railroad Police'
                    community: Wiegand-Green
                    coach: 'Hans Weissnat DVM'
                    moto_stamp: Prof.
                    engine: Ms.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '1992-10-30'
                      city:
                        type: string
                        example: Quigleyville
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '+17737668063'
                      start_number:
                        type: string
                        example: '101'
                      group:
                        type: string
                        example: 'Board Of Directors'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Transit Police OR Railroad Police'
                      community:
                        type: string
                        example: Wiegand-Green
                      coach:
                        type: string
                        example: 'Hans Weissnat DVM'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Ms.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: beatae
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:36'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 7
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: exercitationem
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 5
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Prof.
                    surname: Dr.
                    patronymic: Prof.
                    date_of_birth: '2013-04-06'
                    city: 'East Natasha'
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: +1.217.714.1088
                    start_number: '413'
                    group: Archeologist
                    rank_number: '99999'
                    rank: 'Product Promoter'
                    community: Bayer-Okuneva
                    coach: 'Toy Larson'
                    moto_stamp: Prof.
                    engine: Prof.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: '2013-04-06'
                      city:
                        type: string
                        example: 'East Natasha'
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: +1.217.714.1088
                      start_number:
                        type: string
                        example: '413'
                      group:
                        type: string
                        example: Archeologist
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Product Promoter'
                      community:
                        type: string
                        example: Bayer-Okuneva
                      coach:
                        type: string
                        example: 'Toy Larson'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:36'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: expedita
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: repellat
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: quidem
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: perferendis
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: nemo
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: iure
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: earum
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 15
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 292
                      name: 'Earnest Padberg DDS'
                      desc: 'Maxime consequatur dolor ut dolores qui aut aspernatur. Est ut repellat officia illum voluptatibus. Adipisci dolorum accusantium autem et similique voluptatem. Ut tempora explicabo pariatur.'
                      is_work: false
                      date_start: '2025-05-05T02:50:22.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 293
                      name: 'Tod Kovacek'
                      desc: 'Commodi laborum at sapiente consequatur beatae qui. Ipsum nostrum autem dolor et non. Repellat et deleniti eveniet quo sequi quis autem rem.'
                      is_work: false
                      date_start: '2025-05-05T19:31:49.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 14
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 8
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 3
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 12
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:33'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:33'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 16
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: nemo
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: in
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 295
                    name: 'Norwood Hane PhD'
                    desc: 'Ut dolor tempora sunt ut. Officiis eaque dolore et quia alias. Molestiae eos consectetur error mollitia illum omnis. Quis temporibus soluta laborum eaque.'
                    is_work: false
                    date_start: '2025-05-05T12:14:02.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 295
                      name:
                        type: string
                        example: 'Norwood Hane PhD'
                      desc:
                        type: string
                        example: 'Ut dolor tempora sunt ut. Officiis eaque dolore et quia alias. Molestiae eos consectetur error mollitia illum omnis. Quis temporibus soluta laborum eaque.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-05T12:14:02.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: sguzwtbvhnkberqjtgcxubwfaqkfmlwedpwtpkivfsaytmtjybrzhqxp
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:33'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:33'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:33'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 20
                  nullable: true
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: maiores
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 16
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 14
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 294
                    name: 'Brandt Deckow'
                    desc: 'Quis corrupti praesentium nihil porro minus amet qui. Harum commodi dicta cum. Ab eaque veritatis suscipit ut aliquid. Suscipit architecto praesentium sed aperiam consectetur ratione.'
                    is_work: true
                    date_start: '2025-05-05T12:48:36.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 294
                      name:
                        type: string
                        example: 'Brandt Deckow'
                      desc:
                        type: string
                        example: 'Quis corrupti praesentium nihil porro minus amet qui. Harum commodi dicta cum. Ab eaque veritatis suscipit ut aliquid. Suscipit architecto praesentium sed aperiam consectetur ratione.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-05T12:48:36.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 13
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.delete.success
                  race:
                    id: 299
                    name: 'Mr. Salvador Swift DDS'
                    desc: 'Iusto et deleniti iure qui dignissimos. Soluta aut enim enim praesentium. Ut hic exercitationem veritatis animi illum tempore.'
                    is_work: false
                    date_start: '2025-05-05T23:32:49.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.delete.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 299
                      name:
                        type: string
                        example: 'Mr. Salvador Swift DDS'
                      desc:
                        type: string
                        example: 'Iusto et deleniti iure qui dignissimos. Soluta aut enim enim praesentium. Ut hic exercitationem veritatis animi illum tempore.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-05T23:32:49.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 296
                    name: "Jaydon O'Keefe"
                    desc: 'Voluptatem quo molestiae reiciendis ipsum illo amet. Dolorem nihil doloremque consequatur. Dolores amet sit voluptates fuga aut.'
                    is_work: false
                    date_start: '2025-05-05T03:15:23.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 296
                      name:
                        type: string
                        example: "Jaydon O'Keefe"
                      desc:
                        type: string
                        example: 'Voluptatem quo molestiae reiciendis ipsum illo amet. Dolorem nihil doloremque consequatur. Dolores amet sit voluptates fuga aut.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-05T03:15:23.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: jodqxvrffchvgieci
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:34'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:34'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-05-05T07:00:34'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 16
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - voluptas
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 6
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 5
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 8
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 297
                    name: 'Edd Mosciski V'
                    desc: 'Officia laboriosam omnis et temporibus quos totam dolore. Illum laborum quod dicta nobis. Vel omnis quasi consequatur voluptatem eos ratione veniam.'
                    is_work: true
                    date_start: '2025-05-05T15:20:01.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 297
                      name:
                        type: string
                        example: 'Edd Mosciski V'
                      desc:
                        type: string
                        example: 'Officia laboriosam omnis et temporibus quos totam dolore. Illum laborum quod dicta nobis. Vel omnis quasi consequatur voluptatem eos ratione veniam.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-05T15:20:01.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_allowed
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_allowed
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 8
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/races/{id}/add-document':
    post:
      summary: addDocument
      operationId: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.document.success
                  race:
                    id: 300
                    name: 'Stephania Schowalter III'
                    desc: 'Consequuntur magni sed facere corporis autem quas quod. Consequatur nihil fuga consequuntur dolor iure omnis. Et consectetur facere dolores repellat cumque. Natus commodi beatae quisquam et.'
                    is_work: false
                    date_start: '2025-05-05T19:11:14.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.document.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 300
                      name:
                        type: string
                        example: 'Stephania Schowalter III'
                      desc:
                        type: string
                        example: 'Consequuntur magni sed facere corporis autem quas quod. Consequatur nihil fuga consequuntur dolor iure omnis. Et consectetur facere dolores repellat cumque. Natus commodi beatae quisquam et.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-05T19:11:14.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdfFiles:
                  type: array
                  description: 'Must be a file.'
                  items:
                    type: string
                    format: binary
                pdfFilesDel:
                  type: array
                  description: ''
                  example:
                    - repellendus
                  items:
                    type: string
              required:
                - pdfFiles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/race/{id}/results':
    get:
      summary: get
      operationId: get
      description: 'Получение результатов гонки по фильтрам.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: 100
                      place: 10
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: 100
                      place: 10
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RaceResult
      security: []
    post:
      summary: create
      operationId: create
      description: 'Сохранение результатов.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race_result.create.success
                  result:
                    scores: 100
                    place: 10
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race_result.create.success
                  result:
                    type: object
                    properties:
                      scores:
                        type: integer
                        example: 100
                      place:
                        type: integer
                        example: 10
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RaceResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: false
                cupId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example: 11
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 5
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 1
                  nullable: false
                scores:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
                place:
                  type: integer
                  description: ''
                  example: 7
                  nullable: false
              required:
                - userId
                - gradeId
                - scores
                - place
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 7
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: towne.boris@example.org
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.gibson.net/optio-nisi-odit-doloribus-ut'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'A3hp"EK*'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: rem
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 623
                    name: 'German Marvin'
                    email: angie.fay@example.com
                    email_verified_at: '2025-05-05T07:00:33.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 623
                      name:
                        type: string
                        example: 'German Marvin'
                      email:
                        type: string
                        example: angie.fay@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-05T07:00:33.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 13
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 55
                      name: 'Ruthe Erdman'
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 56
                      name: 'Roberto Kemmer'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 47
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 47
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jcuqzdwcrflhtdlvvwysqzg
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wgsluegmjekejcwfhrevfwi
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xnomlxa
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eihbaiotxpoxwxusjj
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 214
                      name: Dishwasher
                      address: "1694 Timmy Court\nEast Kiel, UT 02835-1865"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Dolores reprehenderit beatae est molestias voluptatum error. Dignissimos asperiores suscipit dolores doloribus eos. Ipsam nemo amet accusantium voluptatem quae sit quis. Consequatur eveniet consequatur explicabo harum. Placeat dolorem explicabo blanditiis enim pariatur. Illum dolores quia fugit eum debitis. Consequatur labore sapiente temporibus deleniti.'
                      length: 156
                      turns: 6
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 33
                        name: Красноярский
                        type: край
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                      attendance: []
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 215
                      name: 'Travel Guide'
                      address: "6448 Konopelski Harbor Apt. 912\nPort Raegan, WY 16432-6604"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Qui ducimus temporibus eos sed culpa ab. Laborum eius hic nihil quo. Expedita consequatur maiores ipsam id a aut aut aspernatur. Aut a qui exercitationem itaque tempore perferendis. Sit quod non eligendi. Omnis et vel atque atque. Totam cumque quidem dolores quo autem sed. Necessitatibus dolorem minus officiis repellendus minus enim iste pariatur. Nam natus minima dolores ut odio. Quaerat eum debitis doloremque. Illum consequatur aut corporis.'
                      length: 604
                      turns: 18
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 72
                        name: Тыва
                        type: республика
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                      attendance: []
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
                storeIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 1
                  nullable: true
                checkStore:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 7
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 217
                    name: 'Lawn Service Manager'
                    address: "84556 Prince Ways Apt. 547\nLangoshtown, MA 51619"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Et perferendis nesciunt sit iste. Illo atque recusandae repudiandae distinctio. Molestiae iusto molestias sint qui aspernatur eligendi. Sed quia aspernatur sint ducimus excepturi et ut. Recusandae itaque veniam ut quasi veniam esse quo. Dolor omnis exercitationem unde perspiciatis culpa maxime impedit. Reiciendis et omnis nemo id. Doloremque vel voluptas nisi dolorum omnis accusantium. Eum delectus sed deserunt voluptate quae et excepturi. Reprehenderit modi earum magni deleniti sit et earum.'
                    length: 196
                    turns: 39
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 27
                      name: Карелия
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 217
                      name:
                        type: string
                        example: 'Lawn Service Manager'
                      address:
                        type: string
                        example: "84556 Prince Ways Apt. 547\nLangoshtown, MA 51619"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Et perferendis nesciunt sit iste. Illo atque recusandae repudiandae distinctio. Molestiae iusto molestias sint qui aspernatur eligendi. Sed quia aspernatur sint ducimus excepturi et ut. Recusandae itaque veniam ut quasi veniam esse quo. Dolor omnis exercitationem unde perspiciatis culpa maxime impedit. Reiciendis et omnis nemo id. Doloremque vel voluptas nisi dolorum omnis accusantium. Eum delectus sed deserunt voluptate quae et excepturi. Reprehenderit modi earum magni deleniti sit et earum.'
                      length:
                        type: integer
                        example: 196
                      turns:
                        type: integer
                        example: 39
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 27
                          name:
                            type: string
                            example: Карелия
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: ayxkjqrowfnogjvyscayoiaczahzlmoqlwtnfsklqvfoomctguz
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: animi
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 2
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 13
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 19
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 216
                    name: 'Administrative Law Judge'
                    address: "604 Rolfson Ferry\nEast Kyla, OK 44257-5862"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Numquam ipsa et sit corrupti veritatis maiores nihil consequatur. Aspernatur aut quae non eum. Nisi quas hic corporis accusantium est sequi aut minima. Nulla reiciendis dolore officiis porro est placeat dicta. Natus sint non dolorem rerum sunt. Accusantium nobis consequuntur nihil fugiat asperiores. Cupiditate quasi aperiam harum natus quia consectetur.'
                    length: 191
                    turns: 98
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 73
                      name: Тюменская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 216
                      name:
                        type: string
                        example: 'Administrative Law Judge'
                      address:
                        type: string
                        example: "604 Rolfson Ferry\nEast Kyla, OK 44257-5862"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Numquam ipsa et sit corrupti veritatis maiores nihil consequatur. Aspernatur aut quae non eum. Nisi quas hic corporis accusantium est sequi aut minima. Nulla reiciendis dolore officiis porro est placeat dicta. Natus sint non dolorem rerum sunt. Accusantium nobis consequuntur nihil fugiat asperiores. Cupiditate quasi aperiam harum natus quia consectetur.'
                      length:
                        type: integer
                        example: 191
                      turns:
                        type: integer
                        example: 98
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 73
                          name:
                            type: string
                            example: Тюменская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 218
                    name: 'Lathe Operator'
                    address: "9403 Travon Trafficway\nJohathanview, WA 59861-9109"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Quis et et quaerat incidunt ipsum. Dignissimos cumque assumenda eos aut libero tenetur. Rerum rerum nihil tenetur explicabo in explicabo doloremque. Aut repudiandae laborum nulla ut quam. Repudiandae recusandae non facere est voluptatem ea dignissimos. Magnam rerum est qui molestias minima aut iusto. Ipsa vero eos facere. Debitis nihil id id. Doloremque nemo perspiciatis delectus facilis temporibus ducimus ex sit.'
                    length: 995
                    turns: 27
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 65
                      name: Смоленская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 218
                      name:
                        type: string
                        example: 'Lathe Operator'
                      address:
                        type: string
                        example: "9403 Travon Trafficway\nJohathanview, WA 59861-9109"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Quis et et quaerat incidunt ipsum. Dignissimos cumque assumenda eos aut libero tenetur. Rerum rerum nihil tenetur explicabo in explicabo doloremque. Aut repudiandae laborum nulla ut quam. Repudiandae recusandae non facere est voluptatem ea dignissimos. Magnam rerum est qui molestias minima aut iusto. Ipsa vero eos facere. Debitis nihil id id. Doloremque nemo perspiciatis delectus facilis temporibus ducimus ex sit.'
                      length:
                        type: integer
                        example: 995
                      turns:
                        type: integer
                        example: 27
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 65
                          name:
                            type: string
                            example: Смоленская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: vysrlerwixekcgoafvqbwnhmmixyjlonqoryuhkqkihrfbjmozveahclkhlufhtnznffzccogthptfxcxmtxuynn
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: voluptatum
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - adipisci
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 9
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: vero
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 1
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.delete.success
                  track:
                    id: 219
                    name: 'Electrical Drafter'
                    address: "9251 Mylene Plains Suite 823\nNorth Heber, FL 19759-9606"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Commodi non voluptas asperiores doloribus illum ut voluptatem. Eligendi amet eum voluptas repellat error. Quo maiores tenetur enim iusto ut sint. Consequatur ad quibusdam temporibus non. Ut soluta est dolorem voluptas iure et ratione. Qui magni molestiae nostrum eligendi voluptates magnam. Sed suscipit non et aut exercitationem ad. Voluptatibus minima sit impedit at voluptates occaecati. Debitis repudiandae qui quidem quam magnam non nisi.'
                    length: 590
                    turns: 90
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 38
                      name: Липецкая
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.delete.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 219
                      name:
                        type: string
                        example: 'Electrical Drafter'
                      address:
                        type: string
                        example: "9251 Mylene Plains Suite 823\nNorth Heber, FL 19759-9606"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Commodi non voluptas asperiores doloribus illum ut voluptatem. Eligendi amet eum voluptas repellat error. Quo maiores tenetur enim iusto ut sint. Consequatur ad quibusdam temporibus non. Ut soluta est dolorem voluptas iure et ratione. Qui magni molestiae nostrum eligendi voluptates magnam. Sed suscipit non et aut exercitationem ad. Voluptatibus minima sit impedit at voluptates occaecati. Debitis repudiandae qui quidem quam magnam non nisi.'
                      length:
                        type: integer
                        example: 590
                      turns:
                        type: integer
                        example: 90
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 38
                          name:
                            type: string
                            example: Липецкая
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 8
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 618
                    name: 'Jerel Hammes'
                    email: streich.nick@example.net
                    email_verified_at: '2025-05-05T07:00:29.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 618
                      name:
                        type: string
                        example: 'Jerel Hammes'
                      email:
                        type: string
                        example: streich.nick@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-05T07:00:29.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.delete.success
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 619
                    name: 'Ms. Gerda Sipes Jr.'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 619
                      name:
                        type: string
                        example: 'Ms. Gerda Sipes Jr.'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 620
                    name: 'Bella Schroeder PhD'
                    email: bradly.lebsack@example.com
                    email_verified_at: '2025-05-05T07:00:29.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 620
                      name:
                        type: string
                        example: 'Bella Schroeder PhD'
                      email:
                        type: string
                        example: bradly.lebsack@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-05T07:00:29.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: yle
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: maci81@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: conqg
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 621
                      name: 'Noelia Lakin'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 622
                      name: 'Micheal Herman II'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: maiores
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 4
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 6
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами.'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Degree
    description: 'Методы связанные с уровнями кубков. Например всероссийский, областной и т.д.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RaceResult
    description: 'Управление результатами гонок.'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
