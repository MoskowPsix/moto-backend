openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 51
                      name: 'Герасим Львович Доронин'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 52
                      name: 'Вишняков Виталий Дмитриевич'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 17
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 14|VPKI436xeIXn6fpUHijyxy7qaPSrfjUXlPLwgCfs749683a5
                  token_type: Bearer
                  user:
                    id: 44
                    name: 'Комарова Анфиса Максимовна'
                    email: lysy71@example.net
                    email_verified_at: '2025-02-04T10:19:24.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 14|VPKI436xeIXn6fpUHijyxy7qaPSrfjUXlPLwgCfs749683a5
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 44
                      name:
                        type: string
                        example: 'Комарова Анфиса Максимовна'
                      email:
                        type: string
                        example: lysy71@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:19:24.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: alexanne11@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'u[]0R|'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 15|QHRZZH2QWSoY3hMLXnTJIrVHNiBDKqeTPkUWYsxi06fcb938
                  token_type: Bearer
                  user:
                    id: 45
                    name: 'Иван Сергеевич Кулаков'
                    email: trofimov.varvara@example.net
                    email_verified_at: '2025-02-04T10:19:24.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 15|QHRZZH2QWSoY3hMLXnTJIrVHNiBDKqeTPkUWYsxi06fcb938
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 45
                      name:
                        type: string
                        example: 'Иван Сергеевич Кулаков'
                      email:
                        type: string
                        example: trofimov.varvara@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:19:24.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: bvvvelpalupj
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: farrell.nicolette@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '-A|h.nY08b'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: fugit
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: officiis
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: blanditiis
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 9
                  name: file_67a1c13b2f577
                  type: licenses
                  path: no-file
                  data: '{"licensesNumber":"11112222","licensesFileLink":"ssssssssss"}'
                  user_id: 1
                  created_at: '2025-02-04T07:26:51.000000Z'
                  updated_at: '2025-02-04T07:26:51.000000Z'
                properties:
                  id:
                    type: integer
                    example: 9
                  name:
                    type: string
                    example: file_67a1c13b2f577
                  type:
                    type: string
                    example: licenses
                  path:
                    type: string
                    example: no-file
                  data:
                    type: string
                    example: '{"licensesNumber":"11112222","licensesFileLink":"ssssssssss"}'
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2025-02-04T07:26:51.000000Z'
                  updated_at:
                    type: string
                    example: '2025-02-04T07:26:51.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Dr.
                    surname: Mr.
                    patronymic: Ms.
                    date_of_birth: '2014-06-01'
                    city: Луховицы
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: '(35222) 91-3442'
                    start_number: '350'
                    group: Штурман
                    rank_number: '99999'
                    rank: Бизнес-аналитик
                    community: 'МФО Сервис'
                    coach: 'Овчинникова Алина Романовна'
                    moto_stamp: Ms.
                    engine: Prof.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '2014-06-01'
                      city:
                        type: string
                        example: Луховицы
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(35222) 91-3442'
                      start_number:
                        type: string
                        example: '350'
                      group:
                        type: string
                        example: Штурман
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Бизнес-аналитик
                      community:
                        type: string
                        example: 'МФО Сервис'
                      coach:
                        type: string
                        example: 'Овчинникова Алина Романовна'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Prof.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: facere
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: debitis
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: ullam
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T10:19:25'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: ullam
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: in
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: consectetur
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: corrupti
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: quidem
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: minus
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Prof.
                    surname: Dr.
                    patronymic: Mrs.
                    date_of_birth: '1970-08-09'
                    city: Коломна
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: 8-800-452-2550
                    start_number: '568'
                    group: 'Бестиарий (гладиатор)'
                    rank_number: '100000'
                    rank: 'Гитарный мастер'
                    community: 'ОАО КазаньГаражТелеНаладка'
                    coach: 'Надежда Ивановна Фёдорова'
                    moto_stamp: Mr.
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1970-08-09'
                      city:
                        type: string
                        example: Коломна
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 8-800-452-2550
                      start_number:
                        type: string
                        example: '568'
                      group:
                        type: string
                        example: 'Бестиарий (гладиатор)'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Гитарный мастер'
                      community:
                        type: string
                        example: 'ОАО КазаньГаражТелеНаладка'
                      coach:
                        type: string
                        example: 'Надежда Ивановна Фёдорова'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Mr.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: expedita
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T10:19:25'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: illum
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: occaecati
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: porro
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 33
                      name: 'Капустина Изабелла Александровна'
                      desc: 'Et dicta quibusdam tempora error. Saepe quia at non deserunt. Dolorem rerum aut qui placeat veniam. Aut tempora possimus corporis aut et voluptatem ullam.'
                      is_work: true
                      date_start: '2025-02-04T10:36:01.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 34
                      name: 'Нонна Львовна Шестакова'
                      desc: 'Omnis cupiditate aut aut rerum. Velit totam modi sed porro quisquam quia ea. Nesciunt autem similique est rem quasi. Aut aspernatur quia et.'
                      is_work: true
                      date_start: '2025-02-04T01:13:51.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 16
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 13
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 36
                    name: 'Лапин Роберт Фёдорович'
                    desc: 'Minima accusamus a sequi autem. Architecto velit molestiae vitae. Molestiae et repellat officia eum deserunt. Alias ullam facilis non. Quia deleniti dolorum voluptatem libero voluptatem aut.'
                    is_work: true
                    date_start: '2025-02-04T21:03:19.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 36
                      name:
                        type: string
                        example: 'Лапин Роберт Фёдорович'
                      desc:
                        type: string
                        example: 'Minima accusamus a sequi autem. Architecto velit molestiae vitae. Molestiae et repellat officia eum deserunt. Alias ullam facilis non. Quia deleniti dolorum voluptatem libero voluptatem aut.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-04T21:03:19.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: lianepvqrqqhcwzqlpodql
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T10:19:25'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 20
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 35
                    name: 'Ева Максимовна Блинова'
                    desc: 'Minima atque eius esse earum eos consectetur. Rerum consequuntur animi aut sed ut eveniet. Ipsam aut et dolore non suscipit.'
                    is_work: true
                    date_start: '2025-02-04T06:46:28.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 35
                      name:
                        type: string
                        example: 'Ева Максимовна Блинова'
                      desc:
                        type: string
                        example: 'Minima atque eius esse earum eos consectetur. Rerum consequuntur animi aut sed ut eveniet. Ipsam aut et dolore non suscipit.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-04T06:46:28.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 37
                    name: 'Наталья Владимировна Захарова'
                    desc: 'Ut veniam mollitia illum aut. Laudantium quaerat ut fugiat sint reprehenderit consequuntur. Id maxime totam qui placeat et.'
                    is_work: true
                    date_start: '2025-02-04T13:49:04.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 37
                      name:
                        type: string
                        example: 'Наталья Владимировна Захарова'
                      desc:
                        type: string
                        example: 'Ut veniam mollitia illum aut. Laudantium quaerat ut fugiat sint reprehenderit consequuntur. Id maxime totam qui placeat et.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-04T13:49:04.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: tzhwusphybtypxftejmwkgbpjlwyfaemxadgggxgpzqz
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T10:19:25'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 4
                  nullable: true
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 50
                    name: 'Блинов Прохор Владимирович'
                    email: voronov.larisa@example.com
                    email_verified_at: '2025-02-04T10:19:24.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 50
                      name:
                        type: string
                        example: 'Блинов Прохор Владимирович'
                      email:
                        type: string
                        example: voronov.larisa@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:19:24.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 16
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 27
                      name: Музыкант
                      address: '619421, Читинская область, город Можайск, пер. Ломоносова, 11'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Sed repudiandae magni et nihil quis sint dolor omnis. Eos et quo eum repellat. Aliquam labore necessitatibus quis dolores ipsum incidunt nihil est. Quisquam mollitia voluptatum accusamus sed ut expedita. Ad excepturi et autem voluptatem. Laboriosam officiis voluptatum molestiae mollitia. Cupiditate ut distinctio aut veniam soluta dolores similique. Sunt in consequuntur placeat est aperiam praesentium ducimus illum. Et et est minus beatae minus est.'
                      length: 893
                      turns: 43
                      free: true
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 28
                      name: Стилист
                      address: '528848, Ярославская область, город Истра, пер. Чехова, 83'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Iure occaecati consequatur eveniet et rerum cumque sed eos. Ad reiciendis qui eos sit ad. Facere non ratione enim ullam dicta voluptas asperiores rerum. Perferendis cumque expedita unde hic laudantium eos. Quidem porro voluptas omnis sequi et labore enim. Modi quas rerum qui laudantium quia voluptas nemo. Rem natus labore aperiam quo sit dolores officiis.'
                      length: 751
                      turns: 95
                      free: false
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 13
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aliquam
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 8
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 30
                    name: 'Информационный работник'
                    address: '789043, Оренбургская область, город Ногинск, наб. Бухарестская, 14'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Blanditiis quidem rerum animi consequatur. Consequuntur repudiandae explicabo consequuntur commodi. Quam quo magnam fuga esse reprehenderit fugiat. Sed minima eum omnis ut corporis. Officiis quia eos consequatur et repellendus. Aut commodi quas labore. Laudantium nemo in blanditiis atque ipsam. Tempore possimus quisquam nam odio est nesciunt doloremque. Unde quis laudantium quisquam.'
                    length: 560
                    turns: 39
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 30
                      name:
                        type: string
                        example: 'Информационный работник'
                      address:
                        type: string
                        example: '789043, Оренбургская область, город Ногинск, наб. Бухарестская, 14'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Blanditiis quidem rerum animi consequatur. Consequuntur repudiandae explicabo consequuntur commodi. Quam quo magnam fuga esse reprehenderit fugiat. Sed minima eum omnis ut corporis. Officiis quia eos consequatur et repellendus. Aut commodi quas labore. Laudantium nemo in blanditiis atque ipsam. Tempore possimus quisquam nam odio est nesciunt doloremque. Unde quis laudantium quisquam.'
                      length:
                        type: integer
                        example: 560
                      turns:
                        type: integer
                        example: 39
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: nowyxatdyyrueyewugnxqzhxtixesrhwenysaekdblnpzttgpxtepulhczonbb
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: hic
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 8
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: accusantium
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["optio","vel"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["totam","non"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 29
                    name: Печник
                    address: '778552, Новгородская область, город Сергиев Посад, пер. Славы, 22'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Adipisci ut rerum accusamus similique corporis esse. Et quod eaque omnis nostrum consequatur corrupti. Cum qui aliquid nam. Omnis sunt ut consequatur enim in voluptas porro. Est ea voluptate consequatur impedit quas rerum. Ut enim labore nulla voluptatibus nobis exercitationem veritatis. Occaecati molestiae reiciendis velit odio vero cupiditate. Voluptate saepe voluptatibus et fugit similique quia et. Esse praesentium dolor voluptates ut.'
                    length: 536
                    turns: 99
                    free: true
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: Печник
                      address:
                        type: string
                        example: '778552, Новгородская область, город Сергиев Посад, пер. Славы, 22'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Adipisci ut rerum accusamus similique corporis esse. Et quod eaque omnis nostrum consequatur corrupti. Cum qui aliquid nam. Omnis sunt ut consequatur enim in voluptas porro. Est ea voluptate consequatur impedit quas rerum. Ut enim labore nulla voluptatibus nobis exercitationem veritatis. Occaecati molestiae reiciendis velit odio vero cupiditate. Voluptate saepe voluptatibus et fugit similique quia et. Esse praesentium dolor voluptates ut.'
                      length:
                        type: integer
                        example: 536
                      turns:
                        type: integer
                        example: 99
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 47
                    name: 'Лапин Владислав Евгеньевич'
                    email: rkoseleva@example.org
                    email_verified_at: '2025-02-04T10:19:24.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 47
                      name:
                        type: string
                        example: 'Лапин Владислав Евгеньевич'
                      email:
                        type: string
                        example: rkoseleva@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:19:24.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 48
                    name: 'Ольга Алексеевна Мясникова'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 48
                      name:
                        type: string
                        example: 'Ольга Алексеевна Мясникова'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 49
                    name: 'Ульяна Евгеньевна Гусева'
                    email: ykov.sarapova@example.net
                    email_verified_at: '2025-02-04T10:19:24.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 49
                      name:
                        type: string
                        example: 'Ульяна Евгеньевна Гусева'
                      email:
                        type: string
                        example: ykov.sarapova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:19:24.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: hjuriumojrghnhdgakrjxzl
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: lblick@example.org
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 2
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
