openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 7|cJuDz3OIz54lV1pKMDPzax0lXgToYnRnyRqJFvpTed594d19
                  token_type: Bearer
                  user:
                    name: 'Ильина Эмилия Александровна'
                    email: ycernov@example.org
                    email_verified_at: '2025-01-21T13:35:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 7|cJuDz3OIz54lV1pKMDPzax0lXgToYnRnyRqJFvpTed594d19
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Ильина Эмилия Александровна'
                      email:
                        type: string
                        example: ycernov@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-21T13:35:09.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'validation.email The <code>email</code> of an existing record in the users table. validation.min.'
                  example: dayna.prosacco@example.net
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: ysvV4iVS)
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 8|e2x7Pa6JIzJEa0YVbdwDLCxM9eyBmmljsttVa7Fg5b9125f1
                  token_type: Bearer
                  user:
                    name: 'Изольда Романовна Иванова'
                    email: kuzma.loginov@example.net
                    email_verified_at: '2025-01-21T13:35:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 8|e2x7Pa6JIzJEa0YVbdwDLCxM9eyBmmljsttVa7Fg5b9125f1
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Изольда Романовна Иванова'
                      email:
                        type: string
                        example: kuzma.loginov@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-21T13:35:09.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'validation.min validation.max.'
                  example: qzadatbgisbpecdpgfwksxtfk
                  nullable: false
                email:
                  type: string
                  description: validation.email.
                  example: magdalen48@example.com
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: 'VWN}!K'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: culpa
                  nullable: false
                avatar:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: quas
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: false
                data:
                  type: string
                  description: validation.json.
                  example: '["in","voluptatem"]'
                  nullable: false
              required:
                - type
                - file
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Mrs.
                    surname: Dr.
                    patronymic: Prof.
                    date_of_birth: null
                    city: Одинцово
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '(495) 182-8127'
                    start_number: '261'
                    group: Администратор
                    rank_number: '99999'
                    rank: Архивист
                    community: 'ОАО УралБух'
                    coach: 'Адам Львович Романов'
                    moto_stamp: Mrs.
                    engine: Miss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Prof.
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Одинцово
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(495) 182-8127'
                      start_number:
                        type: string
                        example: '261'
                      group:
                        type: string
                        example: Администратор
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Архивист
                      community:
                        type: string
                        example: 'ОАО УралБух'
                      coach:
                        type: string
                        example: 'Адам Львович Романов'
                      moto_stamp:
                        type: string
                        example: Mrs.
                      engine:
                        type: string
                        example: Miss
      tags:
        - PersonalInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: neque
                  nullable: false
                surname:
                  type: string
                  description: ''
                  example: repellat
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                dateOfBirth:
                  type: string
                  description: validation.date.
                  example: '2025-01-21T13:35:09'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: repellat
                  nullable: false
                inn:
                  type: integer
                  description: ''
                  example: 18
                  nullable: false
                snils:
                  type: integer
                  description: ''
                  example: 18
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                startNumber:
                  type: integer
                  description: ''
                  example: 1
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                community:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                engine:
                  type: string
                  description: ''
                  example: error
                  nullable: false
              required:
                - name
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - rankNumber
                - motoStamp
                - engine
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 19
                      name: 'Розалина Львовна Кулакова'
                      desc: 'Et cupiditate expedita odit pariatur. Unde dignissimos sit hic asperiores. Sit tempore quae magni aut. Adipisci rerum odit non iure.'
                      is_work: true
                      date_start: null
                      images: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 20
                      name: 'Павел Дмитриевич Власов'
                      desc: 'Eveniet officia unde quia veritatis expedita soluta vero. Aperiam perferendis omnis omnis quis impedit.'
                      is_work: true
                      date_start: null
                      images: null
      tags:
        - Race
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 22
                  name: 'Орехова Софья Владимировна'
                  desc: 'Aliquam beatae sed pariatur aliquam est nobis aut. Saepe aut ipsam sapiente voluptatem. Eius ad eos officia quis non architecto et. Non ut officia minus.'
                  is_work: true
                  date_start: '2025-01-21T13:35:09.000000Z'
                  images: null
                  track_id: 6
                  user_id: 1
                  created_at: '2025-01-21T13:35:09.000000Z'
                  updated_at: '2025-01-21T13:35:09.000000Z'
                properties:
                  id:
                    type: integer
                    example: 22
                  name:
                    type: string
                    example: 'Орехова Софья Владимировна'
                  desc:
                    type: string
                    example: 'Aliquam beatae sed pariatur aliquam est nobis aut. Saepe aut ipsam sapiente voluptatem. Eius ad eos officia quis non architecto et. Non ut officia minus.'
                  is_work:
                    type: boolean
                    example: true
                  date_start:
                    type: string
                    example: '2025-01-21T13:35:09.000000Z'
                  images:
                    type: string
                    example: null
                  track_id:
                    type: integer
                    example: 6
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2025-01-21T13:35:09.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-21T13:35:09.000000Z'
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'validation.max validation.min.'
                  example: aijyovzdodaqzqqfbuczmpzhpmddzpfi
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: true
                date_start:
                  type: string
                  description: validation.date.
                  example: '2025-01-21T13:35:09'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 12
                  nullable: false
                images:
                  type: array
                  description: 'validation.image validation.max.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - date_start
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 21
                    name: 'Захар Сергеевич Ершов'
                    desc: 'Voluptatibus explicabo enim aut tempora nisi quasi eveniet maxime. Quia nesciunt perspiciatis consequuntur minus rerum sed. Est recusandae ut nobis officia earum.'
                    is_work: false
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 21
                      name:
                        type: string
                        example: 'Захар Сергеевич Ершов'
                      desc:
                        type: string
                        example: 'Voluptatibus explicabo enim aut tempora nisi quasi eveniet maxime. Quia nesciunt perspiciatis consequuntur minus rerum sed. Est recusandae ut nobis officia earum.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    name: 'Даниил Романович Селезнёв'
                    email: bronislav.fokin@example.org
                    email_verified_at: '2025-01-21T13:35:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Даниил Романович Селезнёв'
                      email:
                        type: string
                        example: bronislav.fokin@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-21T13:35:09.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 13
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 19
                      name: 'Горный проводник'
                      address: '798342, Кемеровская область, город Егорьевск, въезд Ленина, 53'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'In rerum minima fuga est aperiam possimus. Molestias quaerat ut eos et. Nam ea molestias molestias autem id impedit. Dolorum similique quia tempora illum fuga. Fugiat et odio ea provident est sit ut id. Dicta sed cupiditate et exercitationem sunt ab. Impedit placeat error fugiat qui sunt omnis. Perspiciatis quia error omnis nemo corporis vitae. Non unde eligendi expedita voluptates.'
                      length: 682
                      turns: 38
                      free: false
                      is_work: false
                      spec: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 20
                      name: 'Финансовый советник'
                      address: '617536, Мурманская область, город Егорьевск, въезд Ленина, 88'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Minus et deserunt officiis quia laboriosam soluta. Iste aut enim maiores ad quas voluptates. Blanditiis laborum non dicta. Perferendis aut quia rerum quis. Aut quos voluptas eligendi minima. Aliquam error exercitationem aliquid est. Eius eaque voluptatem laboriosam. Quo laudantium atque aut illum quia. Consectetur esse distinctio voluptas optio cum aut. Quo voluptatem in fuga illum et quis debitis.'
                      length: 400
                      turns: 2
                      free: true
                      is_work: true
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                limit:
                  type: integer
                  description: validation.max.
                  example: 25
                  nullable: false
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 22
                    name: 'Научный сотрудник'
                    address: '959241, Новгородская область, город Видное, бульвар Космонавтов, 88'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Impedit nihil aut mollitia aperiam vel. Delectus quia explicabo ullam eos. Consequatur ut occaecati voluptates quia aliquam molestias. Possimus eveniet voluptatem perspiciatis. Consequatur nisi ipsa officia nostrum eaque perferendis quasi. Blanditiis debitis sint ratione dignissimos voluptatem libero. Dolores velit nam mollitia iure quos reprehenderit soluta. Voluptatem sed commodi neque autem in necessitatibus. In neque consequatur optio exercitationem nulla beatae est dolorem.'
                    length: 741
                    turns: 43
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 22
                      name:
                        type: string
                        example: 'Научный сотрудник'
                      address:
                        type: string
                        example: '959241, Новгородская область, город Видное, бульвар Космонавтов, 88'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Impedit nihil aut mollitia aperiam vel. Delectus quia explicabo ullam eos. Consequatur ut occaecati voluptates quia aliquam molestias. Possimus eveniet voluptatem perspiciatis. Consequatur nisi ipsa officia nostrum eaque perferendis quasi. Blanditiis debitis sint ratione dignissimos voluptatem libero. Dolores velit nam mollitia iure quos reprehenderit soluta. Voluptatem sed commodi neque autem in necessitatibus. In neque consequatur optio exercitationem nulla beatae est dolorem.'
                      length:
                        type: integer
                        example: 741
                      turns:
                        type: integer
                        example: 43
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: validation.min.
                  example: tbevgzpoaqzcwamlnugnmmwygup
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: totam
                  nullable: false
                latitude:
                  type: number
                  description: validation.between.
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: validation.between.
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'validation.image validation.max.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 2
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                spec:
                  type: string
                  description: validation.json.
                  example: '["nostrum","repellendus"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 21
                    name: Учёный
                    address: '924465, Омская область, город Мытищи, проезд Домодедовская, 35'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Enim officia tempora porro et quia incidunt. Accusamus ipsum rem error et voluptatum nulla facilis dolor. Et earum iste nam doloremque ducimus autem numquam. Consequuntur ea ea magnam temporibus officiis. Suscipit consectetur quo magnam vel qui accusamus reprehenderit. Ut et sed eos rerum ex. Aspernatur enim in et magnam libero ducimus.'
                    length: 564
                    turns: 96
                    free: true
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 21
                      name:
                        type: string
                        example: Учёный
                      address:
                        type: string
                        example: '924465, Омская область, город Мытищи, проезд Домодедовская, 35'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Enim officia tempora porro et quia incidunt. Accusamus ipsum rem error et voluptatum nulla facilis dolor. Et earum iste nam doloremque ducimus autem numquam. Consequuntur ea ea magnam temporibus officiis. Suscipit consectetur quo magnam vel qui accusamus reprehenderit. Ut et sed eos rerum ex. Aspernatur enim in et magnam libero ducimus.'
                      length:
                        type: integer
                        example: 564
                      turns:
                        type: integer
                        example: 96
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    name: 'Уваров Герасим Львович'
                    email: gorbunova.mikail@example.org
                    email_verified_at: '2025-01-21T13:35:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Уваров Герасим Львович'
                      email:
                        type: string
                        example: gorbunova.mikail@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-21T13:35:09.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
