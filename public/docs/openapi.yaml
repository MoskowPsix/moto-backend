openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: quod
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:22'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: ab
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 8
                  nullable: false
                snils:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
                phoneNumber:
                  type: integer
                  description: ''
                  example: 5
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 15
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: excepturi
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: magni
                  nullable: false
                coach:
                  type: string
                  description: ''
                  example: tenetur
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: debitis
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: est
                  nullable: false
                numberAndSeria:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 8
                  items:
                    type: integer
                    nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - community
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 127
                      name: null
                      email: graciela26@example.net
                      email_verified_at: '2025-03-17T05:31:22.000000Z'
                      created_at: '2025-03-17T05:31:22.000000Z'
                      updated_at: '2025-03-17T05:31:22.000000Z'
                      avatar: null
                      personal_info: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 128
                      name: null
                      email: chester.kertzmann@example.net
                      email_verified_at: '2025-03-17T05:31:22.000000Z'
                      created_at: '2025-03-17T05:31:22.000000Z'
                      updated_at: '2025-03-17T05:31:22.000000Z'
                      avatar: null
                      personal_info: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 16
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 43
                    name: 'Eudora Zieme DDS'
                    desc: 'Sint dolorem aut vero culpa quibusdam exercitationem. Reprehenderit nulla est atque repellendus. Ipsum pariatur quasi nulla quo.'
                    price: '3.6329824e+07'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 43
                      name:
                        type: string
                        example: 'Eudora Zieme DDS'
                      desc:
                        type: string
                        example: 'Sint dolorem aut vero culpa quibusdam exercitationem. Reprehenderit nulla est atque repellendus. Ipsum pariatur quasi nulla quo.'
                      price:
                        type: string
                        example: '3.6329824e+07'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qfddyvyir
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hwcslxdzhni
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 136217174.0
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 15
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 44
                    name: 'Alberto Mante II'
                    desc: 'Error et omnis odio porro. Similique sint nulla beatae eum consectetur corporis vitae vel. Quidem et quia asperiores ea assumenda unde et nesciunt.'
                    price: '2.917298e+08'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 44
                      name:
                        type: string
                        example: 'Alberto Mante II'
                      desc:
                        type: string
                        example: 'Error et omnis odio porro. Similique sint nulla beatae eum consectetur corporis vitae vel. Quidem et quia asperiores ea assumenda unde et nesciunt.'
                      price:
                        type: string
                        example: '2.917298e+08'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: twcojgiedbvzbmxffsszjwl
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: perhqjl
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 75025.727802844
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 6
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 45
                    name: 'Albin Brekke'
                    desc: 'Eum fuga dolores ratione aut voluptatem. Numquam asperiores et recusandae odio molestiae.'
                    price: '232330'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 45
                      name:
                        type: string
                        example: 'Albin Brekke'
                      desc:
                        type: string
                        example: 'Eum fuga dolores ratione aut voluptatem. Numquam asperiores et recusandae odio molestiae.'
                      price:
                        type: string
                        example: '232330'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 6
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 7|T5iA8AxBaBkTTS1FNf3wiNN50MRyxMPBAeyd7S7z8855c2ed
                  token_type: Bearer
                  user:
                    id: 120
                    name: null
                    email: fdurgan@example.net
                    email_verified_at: '2025-03-17T05:31:14.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 7|T5iA8AxBaBkTTS1FNf3wiNN50MRyxMPBAeyd7S7z8855c2ed
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 120
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: fdurgan@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T05:31:14.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table. Must be at least 3 characters.'
                  example: jeffery.gottlieb@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: 'W-2r#s-Bd0|Es|rw'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 8|tJoPlBZbSAzvuRJKrzcbx3x0eQBY0lU3czwECPvEda3f4253
                  token_type: Bearer
                  user:
                    id: 121
                    name: null
                    email: orin53@example.net
                    email_verified_at: '2025-03-17T05:31:15.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 8|tJoPlBZbSAzvuRJKrzcbx3x0eQBY0lU3czwECPvEda3f4253
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 121
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: orin53@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T05:31:15.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: landvsbuaqziyqcxuhvlar
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: damian.strosin@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: rjj4NMZh
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: eum
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 33
                      name: 'Prof. Candelario Quitzon IV'
                      fullname: null
                      coach: null
                      city: 'South Normaberg'
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 34
                      name: 'Prof. Kamryn Bode'
                      fullname: null
                      coach: null
                      city: 'East Larissa'
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 6
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 10
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: nisi
                  nullable: true
                fullname:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 36
                    name: 'Myrtie Auer'
                    fullname: null
                    coach: null
                    city: 'New Adella'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 36
                      name:
                        type: string
                        example: 'Myrtie Auer'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'New Adella'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kjkitiirpg
                  nullable: false
                fullname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tonxzovazclutejszvnjaulo
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zguzcljmztvgt
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: false
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nbuhweesbrnyaxnmoe
                  nullable: false
              required:
                - name
                - locationId
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 35
                    name: 'Jaylon Ankunding IV'
                    fullname: null
                    coach: null
                    city: 'South Leilanichester'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 35
                      name:
                        type: string
                        example: 'Jaylon Ankunding IV'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'South Leilanichester'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 16
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 12
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                fullname:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
              required:
                - id
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 37
                    name: 'Angel Kuhlman V'
                    fullname: null
                    coach: null
                    city: 'North Westonmouth'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 37
                      name:
                        type: string
                        example: 'Angel Kuhlman V'
                      fullname:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'North Westonmouth'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hinq
                  nullable: true
                fullname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ntanvysuwgljrpynsplncv
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: edxszozdegfcrf
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rmecup
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 6
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: neque
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: huohr
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bqcdqqzqklktnfrjtl
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: libero
        required: true
        schema:
          type: string
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 1
                    name: 'Кубок России'
                    year: 2025
                    stages: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Кубок России'
                      year:
                        type: integer
                        example: 2025
                      stages:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: v
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 9
                  nullable: false
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xtuqyugodphbsf
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 3
                  nullable: true
              required:
                - name
                - year
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 162
                    name: file_67d7b3a939485
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 162
                      name:
                        type: string
                        example: file_67d7b3a939485
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: notarius
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://www.sauer.net/rerum-et-rerum-ut-ut-qui-non-explicabo-minus.html'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: libero
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: eaque
                  nullable: true
                itWorksDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:21'
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 163
                      name: file_67d7b3a95e395
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 164
                      name: file_67d7b3a96996f
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 165
                    name: file_67d7b3a993588
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 165
                      name:
                        type: string
                        example: file_67d7b3a993588
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 166
                    name: file_67d7b3a9c07e8
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 166
                      name:
                        type: string
                        example: file_67d7b3a9c07e8
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: pariatur
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: repellat
                  nullable: true
                itWorksDate:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:21'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 64
                    status: false
                    desc: 'Транзакция создана'
                    count: 5
                    date: '2025-03-07 09:57:33'
                    user:
                      id: 1
                      name: Dr.
                      email: bolshe.kivi@gmail.com
                      email_verified_at: '2025-02-20T07:28:21.000000Z'
                      avatar: null
                      personal:
                        name: Dr.
                        surname: Mr.
                        patronymic: Dr.
                        date_of_birth: '2014-11-23'
                        city: 'East Charleneview'
                        inn: '99999999999'
                        snils: '10000000000'
                        phone_number: +1-352-550-1434
                        start_number: '560'
                        group: 'Engine Assembler'
                        rank_number: '99999'
                        rank: 'Pressing Machine Operator'
                        community: Jacobs-Walter
                        coach: 'Allen Littel'
                        moto_stamp: Prof.
                        engine: Prof.
                        number_and_seria: '10000000000'
                        region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 64
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: 'Транзакция создана'
                      count:
                        type: integer
                        example: 5
                      date:
                        type: string
                        example: '2025-03-07 09:57:33'
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Dr.
                          email:
                            type: string
                            example: bolshe.kivi@gmail.com
                          email_verified_at:
                            type: string
                            example: '2025-02-20T07:28:21.000000Z'
                          avatar:
                            type: string
                            example: null
                          personal:
                            type: object
                            properties:
                              name:
                                type: string
                                example: Dr.
                              surname:
                                type: string
                                example: Mr.
                              patronymic:
                                type: string
                                example: Dr.
                              date_of_birth:
                                type: string
                                example: '2014-11-23'
                              city:
                                type: string
                                example: 'East Charleneview'
                              inn:
                                type: string
                                example: '99999999999'
                              snils:
                                type: string
                                example: '10000000000'
                              phone_number:
                                type: string
                                example: +1-352-550-1434
                              start_number:
                                type: string
                                example: '560'
                              group:
                                type: string
                                example: 'Engine Assembler'
                              rank_number:
                                type: string
                                example: '99999'
                              rank:
                                type: string
                                example: 'Pressing Machine Operator'
                              community:
                                type: string
                                example: Jacobs-Walter
                              coach:
                                type: string
                                example: 'Allen Littel'
                              moto_stamp:
                                type: string
                                example: Prof.
                              engine:
                                type: string
                                example: Prof.
                              number_and_seria:
                                type: string
                                example: '10000000000'
                              region:
                                type: string
                                example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 9
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:18'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 64
                  status: false
                  desc: 'Транзакция создана'
                  count: 5
                  date: '2025-03-07 09:57:33'
                  user:
                    id: 1
                    name: Dr.
                    email: bolshe.kivi@gmail.com
                    email_verified_at: '2025-02-20T07:28:21.000000Z'
                    avatar: null
                    personal:
                      name: Dr.
                      surname: Mr.
                      patronymic: Dr.
                      date_of_birth: '2014-11-23'
                      city: 'East Charleneview'
                      inn: '99999999999'
                      snils: '10000000000'
                      phone_number: +1-352-550-1434
                      start_number: '560'
                      group: 'Engine Assembler'
                      rank_number: '99999'
                      rank: 'Pressing Machine Operator'
                      community: Jacobs-Walter
                      coach: 'Allen Littel'
                      moto_stamp: Prof.
                      engine: Prof.
                      number_and_seria: '10000000000'
                      region: null
                properties:
                  id:
                    type: integer
                    example: 64
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: 'Транзакция создана'
                  count:
                    type: integer
                    example: 5
                  date:
                    type: string
                    example: '2025-03-07 09:57:33'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Dr.
                      email:
                        type: string
                        example: bolshe.kivi@gmail.com
                      email_verified_at:
                        type: string
                        example: '2025-02-20T07:28:21.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Dr.
                          surname:
                            type: string
                            example: Mr.
                          patronymic:
                            type: string
                            example: Dr.
                          date_of_birth:
                            type: string
                            example: '2014-11-23'
                          city:
                            type: string
                            example: 'East Charleneview'
                          inn:
                            type: string
                            example: '99999999999'
                          snils:
                            type: string
                            example: '10000000000'
                          phone_number:
                            type: string
                            example: +1-352-550-1434
                          start_number:
                            type: string
                            example: '560'
                          group:
                            type: string
                            example: 'Engine Assembler'
                          rank_number:
                            type: string
                            example: '99999'
                          rank:
                            type: string
                            example: 'Pressing Machine Operator'
                          community:
                            type: string
                            example: Jacobs-Walter
                          coach:
                            type: string
                            example: 'Allen Littel'
                          moto_stamp:
                            type: string
                            example: Prof.
                          engine:
                            type: string
                            example: Prof.
                          number_and_seria:
                            type: string
                            example: '10000000000'
                          region:
                            type: string
                            example: null
      tags:
        - Endpoints
      security: []
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 12
                      name: 'Prof. Leone Schimmel MD'
                      description: 'Ducimus doloribus voluptatum explicabo fuga maxime repudiandae repudiandae. Quod labore exercitationem officiis aspernatur. Esse et sunt illum ut sit saepe natus.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 13
                      name: 'Prof. Israel Berge III'
                      description: 'Hic voluptatem porro ut quam voluptatum dignissimos. Eum est harum doloribus nemo et necessitatibus eos. Esse soluta sed voluptate nulla laudantium. Possimus rerum nihil nesciunt.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 17
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 17
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 15
                    name: 'Mr. Marlin Willms'
                    description: 'Nam earum quaerat aspernatur dolore voluptatem. Eum eaque voluptatem dolor. Eum ad voluptatibus eius fugiat dolorem ratione.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Mr. Marlin Willms'
                      description:
                        type: string
                        example: 'Nam earum quaerat aspernatur dolore voluptatem. Eum eaque voluptatem dolor. Eum ad voluptatibus eius fugiat dolorem ratione.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: krshjovrhtojtoxnvcwrs
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Veritatis mollitia nihil qui omnis eos fugit animi.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 14
                    name: 'Vincenza Price'
                    description: 'Laudantium quae quaerat ipsam et. Necessitatibus iste consequatur qui distinctio autem. Blanditiis nobis eligendi et omnis. Quia totam quod doloribus assumenda voluptatem voluptate ut.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: 'Vincenza Price'
                      description:
                        type: string
                        example: 'Laudantium quae quaerat ipsam et. Necessitatibus iste consequatur qui distinctio autem. Blanditiis nobis eligendi et omnis. Quia totam quod doloribus assumenda voluptatem voluptate ut.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 12
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 16
                    name: 'Alberto Towne'
                    description: 'Ullam quisquam ratione qui. Quia non quibusdam dolore inventore sequi inventore sint similique. Vero nulla qui iure aut animi repudiandae magni. Quae voluptatem eveniet dicta facere facere non ut.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Alberto Towne'
                      description:
                        type: string
                        example: 'Ullam quisquam ratione qui. Quia non quibusdam dolore inventore sequi inventore sint similique. Vero nulla qui iure aut animi repudiandae magni. Quae voluptatem eveniet dicta facere facere non ut.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mfvuynmoclytaaxuqv
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Quia sint et et quaerat.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 14
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: vero
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Mr.
                    surname: Prof.
                    patronymic: Miss
                    date_of_birth: '1991-01-27'
                    city: 'Port Karelleborough'
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: +1.661.466.0016
                    start_number: '837'
                    group: 'Religious Worker'
                    rank_number: '100000'
                    rank: 'Personal Trainer'
                    community: 'West, Weissnat and Deckow'
                    coach: 'Ericka Kirlin'
                    moto_stamp: Prof.
                    engine: Dr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '1991-01-27'
                      city:
                        type: string
                        example: 'Port Karelleborough'
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: +1.661.466.0016
                      start_number:
                        type: string
                        example: '837'
                      group:
                        type: string
                        example: 'Religious Worker'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Personal Trainer'
                      community:
                        type: string
                        example: 'West, Weissnat and Deckow'
                      coach:
                        type: string
                        example: 'Ericka Kirlin'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ratione
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:20'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: hic
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: exercitationem
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 5
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: veniam
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Dr.
                    surname: Dr.
                    patronymic: Dr.
                    date_of_birth: '1993-06-17'
                    city: 'New Herminia'
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: 661.975.8101
                    start_number: '771'
                    group: 'Fishery Worker'
                    rank_number: '99999'
                    rank: 'School Bus Driver'
                    community: 'Fahey, Lebsack and Mosciski'
                    coach: 'Makenzie Pfeffer'
                    moto_stamp: Prof.
                    engine: Ms.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '1993-06-17'
                      city:
                        type: string
                        example: 'New Herminia'
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 661.975.8101
                      start_number:
                        type: string
                        example: '771'
                      group:
                        type: string
                        example: 'Fishery Worker'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'School Bus Driver'
                      community:
                        type: string
                        example: 'Fahey, Lebsack and Mosciski'
                      coach:
                        type: string
                        example: 'Makenzie Pfeffer'
                      moto_stamp:
                        type: string
                        example: Prof.
                      engine:
                        type: string
                        example: Ms.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: iste
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:20'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: saepe
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: earum
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quaerat
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 24
                      name: 'Aubree Kuhic'
                      desc: 'Ipsam autem et a itaque ipsa et et. Autem maiores facere distinctio eum distinctio dolorum. Libero doloribus aut aliquam est eum dolor.'
                      is_work: true
                      date_start: '2025-03-17T23:38:13.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 25
                      name: 'Dr. Therese Emmerich'
                      desc: 'Laboriosam iusto consequuntur rerum aspernatur et. Impedit inventore asperiores maxime impedit est natus. Aut velit reprehenderit ducimus accusantium quibusdam voluptates. Vel est blanditiis est ab.'
                      is_work: false
                      date_start: '2025-03-17T17:44:50.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 10
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 20
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 12
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:19'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:19'
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 27
                    name: 'Rick Price IV'
                    desc: 'Amet alias sapiente eum accusamus nisi fugit eum. Consequatur velit ut temporibus ut omnis id. Voluptatum excepturi quia culpa quidem vel.'
                    is_work: true
                    date_start: '2025-03-17T03:04:35.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 27
                      name:
                        type: string
                        example: 'Rick Price IV'
                      desc:
                        type: string
                        example: 'Amet alias sapiente eum accusamus nisi fugit eum. Consequatur velit ut temporibus ut omnis id. Voluptatum excepturi quia culpa quidem vel.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-17T03:04:35.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: cifdowgtdyroxzfgjxrbeaqevgoulrjttfijfypmdhkfvyiirkcglronvxqkisfzohoprgu
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: quasi
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:19'
                  nullable: false
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:19'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 14
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 18
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 1
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 26
                    name: 'Prof. Marcelle Schoen DVM'
                    desc: 'Quos quas magnam iusto voluptas. Velit aperiam et sit quas cum. Quis atque fuga in ut commodi sed autem. Distinctio nihil est est est eligendi fuga.'
                    is_work: false
                    date_start: '2025-03-17T21:16:36.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 26
                      name:
                        type: string
                        example: 'Prof. Marcelle Schoen DVM'
                      desc:
                        type: string
                        example: 'Quos quas magnam iusto voluptas. Velit aperiam et sit quas cum. Quis atque fuga in ut commodi sed autem. Distinctio nihil est est est eligendi fuga.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T21:16:36.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 5
                  items:
                    type: integer
                    nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 28
                    name: 'Birdie Von'
                    desc: 'Omnis saepe provident qui repellendus et distinctio error. Et cupiditate dolorem aut temporibus tempore voluptatem mollitia. Facere rem sed quo.'
                    is_work: true
                    date_start: '2025-03-17T04:11:33.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 28
                      name:
                        type: string
                        example: 'Birdie Von'
                      desc:
                        type: string
                        example: 'Omnis saepe provident qui repellendus et distinctio error. Et cupiditate dolorem aut temporibus tempore voluptatem mollitia. Facere rem sed quo.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-17T04:11:33.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: hfrbtoaiygbtgvprdaikoucfb
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:20'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-17T05:31:20'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 18
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - earum
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 19
                  items:
                    type: integer
                    nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 18
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 29
                    name: 'Clare Kuhlman'
                    desc: 'Ut qui et in numquam amet. Aut dolore culpa doloribus exercitationem eum. Illum iste occaecati a nihil eum. Est qui ipsum in voluptatem.'
                    is_work: false
                    date_start: '2025-03-17T04:20:17.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: 'Clare Kuhlman'
                      desc:
                        type: string
                        example: 'Ut qui et in numquam amet. Aut dolore culpa doloribus exercitationem eum. Illum iste occaecati a nihil eum. Est qui ipsum in voluptatem.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-17T04:20:17.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: cwalker@example.net
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://gerlach.org/'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: similique
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'v0{RtzBk'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: earum
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 126
                    name: null
                    email: vokon@example.net
                    email_verified_at: '2025-03-17T05:31:19.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 126
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: vokon@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T05:31:19.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 16
                  nullable: false
              required:
                - roleId
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 1
                    login: shakalik
                    password_1: fdsfgwergtwretgwrtgrtg
                    password_2: gregweghgfjyjytkjtjffh
                    token: test
                    user:
                      id: 1
                      name: Dr.
                      email: bolshe.kivi@gmail.com
                      email_verified_at: '2025-02-20T07:28:21.000000Z'
                      avatar: null
                      personal:
                        name: Dr.
                        surname: Mr.
                        patronymic: Dr.
                        date_of_birth: '2014-11-23'
                        city: 'East Charleneview'
                        inn: '99999999999'
                        snils: '10000000000'
                        phone_number: +1-352-550-1434
                        start_number: '560'
                        group: 'Engine Assembler'
                        rank_number: '99999'
                        rank: 'Pressing Machine Operator'
                        community: Jacobs-Walter
                        coach: 'Allen Littel'
                        moto_stamp: Prof.
                        engine: Prof.
                        number_and_seria: '10000000000'
                        region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      login:
                        type: string
                        example: shakalik
                      password_1:
                        type: string
                        example: fdsfgwergtwretgwrtgrtg
                      password_2:
                        type: string
                        example: gregweghgfjyjytkjtjffh
                      token:
                        type: string
                        example: test
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Dr.
                          email:
                            type: string
                            example: bolshe.kivi@gmail.com
                          email_verified_at:
                            type: string
                            example: '2025-02-20T07:28:21.000000Z'
                          avatar:
                            type: string
                            example: null
                          personal:
                            type: object
                            properties:
                              name:
                                type: string
                                example: Dr.
                              surname:
                                type: string
                                example: Mr.
                              patronymic:
                                type: string
                                example: Dr.
                              date_of_birth:
                                type: string
                                example: '2014-11-23'
                              city:
                                type: string
                                example: 'East Charleneview'
                              inn:
                                type: string
                                example: '99999999999'
                              snils:
                                type: string
                                example: '10000000000'
                              phone_number:
                                type: string
                                example: +1-352-550-1434
                              start_number:
                                type: string
                                example: '560'
                              group:
                                type: string
                                example: 'Engine Assembler'
                              rank_number:
                                type: string
                                example: '99999'
                              rank:
                                type: string
                                example: 'Pressing Machine Operator'
                              community:
                                type: string
                                example: Jacobs-Walter
                              coach:
                                type: string
                                example: 'Allen Littel'
                              moto_stamp:
                                type: string
                                example: Prof.
                              engine:
                                type: string
                                example: Prof.
                              number_and_seria:
                                type: string
                                example: '10000000000'
                              region:
                                type: string
                                example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rrtgsbyt
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wmvgs
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: isfzhhjatapcovujwmoke
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vzlvjrclmmetotawcz
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 25
                      name: 'Jewelry Model OR Mold Makers'
                      address: "49037 Elsa Ville Suite 771\nPierceview, LA 30648"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Ut commodi mollitia praesentium. Est eaque est voluptatem aut ut sit qui. Dolores maiores aspernatur atque in. Enim quis sequi quia quod assumenda maxime. Sed consequatur dolor ipsam nihil magnam provident. Repudiandae eum et facere quaerat. Quia atque laborum deleniti. Quo velit id voluptate nihil quisquam non qui. Error tempore vel impedit ratione. Temporibus unde aspernatur non aspernatur quidem. Et optio aut et voluptas. Voluptatem animi ipsam voluptatem et ipsum.'
                      length: 980
                      turns: 94
                      free: false
                      is_work: false
                      spec: null
                      location:
                        id: 86
                        name: 'Чувашская Республика'
                        type: республика
                      store: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 26
                      name: 'Manager of Weapons Specialists'
                      address: "315 Imogene Mission\nWintheiserville, SD 92240-0447"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Quo aut porro magnam quae non voluptatem. Placeat voluptas id sapiente et. Ut dolorem consequatur harum molestias. Harum enim minus aut placeat quia id occaecati et. Velit mollitia iusto est placeat rerum eius fuga magnam. Iusto nulla rerum molestias excepturi blanditiis nobis. Maxime in sit et tempore reiciendis reprehenderit.'
                      length: 772
                      turns: 8
                      free: false
                      is_work: false
                      spec: null
                      location:
                        id: 65
                        name: Смоленская
                        type: область
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 10
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 28
                    name: CSI
                    address: "1985 King Rapids\nLake Tavares, NE 26182"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Deserunt dolor illo maiores reiciendis quis saepe. Sint sit officia a animi distinctio quis. Aut hic numquam voluptatem doloremque voluptatum veritatis. Ex sit amet reprehenderit unde atque. Explicabo aliquid assumenda beatae autem aut nemo. Quia occaecati perspiciatis cumque molestiae numquam. Repudiandae vitae atque dolor doloribus molestiae ullam deserunt. Minima molestiae delectus pariatur. Rerum ea aut id eos in voluptatem.'
                    length: 996
                    turns: 2
                    free: false
                    is_work: true
                    spec: null
                    location:
                      id: 39
                      name: Магаданская
                      type: область
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 28
                      name:
                        type: string
                        example: CSI
                      address:
                        type: string
                        example: "1985 King Rapids\nLake Tavares, NE 26182"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Deserunt dolor illo maiores reiciendis quis saepe. Sint sit officia a animi distinctio quis. Aut hic numquam voluptatem doloremque voluptatum veritatis. Ex sit amet reprehenderit unde atque. Explicabo aliquid assumenda beatae autem aut nemo. Quia occaecati perspiciatis cumque molestiae numquam. Repudiandae vitae atque dolor doloribus molestiae ullam deserunt. Minima molestiae delectus pariatur. Rerum ea aut id eos in voluptatem.'
                      length:
                        type: integer
                        example: 996
                      turns:
                        type: integer
                        example: 2
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 39
                          name:
                            type: string
                            example: Магаданская
                          type:
                            type: string
                            example: область
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: erfotidubmekjc
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: porro
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 16
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["quis","deserunt"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["omnis","optio"]'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 10
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 27
                    name: 'Training Manager OR Development Manager'
                    address: "627 Avery Point Apt. 562\nNew Reina, RI 35870-6075"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Libero omnis et aut dolorem neque eos quia. Velit reprehenderit velit incidunt veritatis non beatae eius. Eaque molestiae quos maiores sint occaecati error excepturi illum. Aperiam odit recusandae assumenda corrupti. Eos ut et nulla quidem excepturi. Dignissimos et sunt error. Porro quas velit in rerum. Qui minus omnis expedita quibusdam et quia. Aut consequuntur numquam ipsam. Voluptas veniam aliquam asperiores et. Esse ut illo eligendi. Reprehenderit dolores quibusdam voluptatem.'
                    length: 306
                    turns: 69
                    free: false
                    is_work: false
                    spec: null
                    location:
                      id: 14
                      name: Воронежская
                      type: область
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 27
                      name:
                        type: string
                        example: 'Training Manager OR Development Manager'
                      address:
                        type: string
                        example: "627 Avery Point Apt. 562\nNew Reina, RI 35870-6075"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Libero omnis et aut dolorem neque eos quia. Velit reprehenderit velit incidunt veritatis non beatae eius. Eaque molestiae quos maiores sint occaecati error excepturi illum. Aperiam odit recusandae assumenda corrupti. Eos ut et nulla quidem excepturi. Dignissimos et sunt error. Porro quas velit in rerum. Qui minus omnis expedita quibusdam et quia. Aut consequuntur numquam ipsam. Voluptas veniam aliquam asperiores et. Esse ut illo eligendi. Reprehenderit dolores quibusdam voluptatem.'
                      length:
                        type: integer
                        example: 306
                      turns:
                        type: integer
                        example: 69
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 14
                          name:
                            type: string
                            example: Воронежская
                          type:
                            type: string
                            example: область
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 29
                    name: Paralegal
                    address: "2514 Mosciski Center Suite 501\nNorth Laurianne, OR 56433-6927"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Aut eveniet enim consequuntur. Impedit qui labore eum quos eum omnis. Voluptatibus iusto impedit tempore suscipit animi ullam excepturi necessitatibus. Non saepe ipsam dolores harum ut ipsum laborum. Reprehenderit autem deleniti qui velit odio. Et aut veritatis ullam impedit. Quam similique et velit. Minima voluptatem qui impedit autem beatae consequatur ducimus ab. Et qui consequatur qui voluptatibus. Est facere fugit error impedit eum.'
                    length: 514
                    turns: 51
                    free: true
                    is_work: true
                    spec: null
                    location:
                      id: 82
                      name: Чукотский
                      type: 'автономный округ'
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 29
                      name:
                        type: string
                        example: Paralegal
                      address:
                        type: string
                        example: "2514 Mosciski Center Suite 501\nNorth Laurianne, OR 56433-6927"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Aut eveniet enim consequuntur. Impedit qui labore eum quos eum omnis. Voluptatibus iusto impedit tempore suscipit animi ullam excepturi necessitatibus. Non saepe ipsam dolores harum ut ipsum laborum. Reprehenderit autem deleniti qui velit odio. Et aut veritatis ullam impedit. Quam similique et velit. Minima voluptatem qui impedit autem beatae consequatur ducimus ab. Et qui consequatur qui voluptatibus. Est facere fugit error impedit eum.'
                      length:
                        type: integer
                        example: 514
                      turns:
                        type: integer
                        example: 51
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 82
                          name:
                            type: string
                            example: Чукотский
                          type:
                            type: string
                            example: 'автономный округ'
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: urrlqxldsbfifogvbsyxoxcjrfxghnxrptuzqhjteqrhzognhzsfgwymxwzmynekkhxrpmb
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - dolores
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 10
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["dolor","voluptatem"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Must be a valid JSON string.'
                  example: '["earum","odit"]'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 16
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 7
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 123
                    name: null
                    email: isabella.waters@example.com
                    email_verified_at: '2025-03-17T05:31:15.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: isabella.waters@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-17T05:31:15.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 124
                    name: null
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 124
                      name:
                        type: string
                        example: null
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 125
                    name: null
                    email: neva.reilly@example.net
                    email_verified_at: '2025-03-17T05:31:16.000000Z'
                    avatar: null
                    personal: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 125
                      name:
                        type: string
                        example: null
                      email:
                        type: string
                        example: neva.reilly@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-17T05:31:16.000000Z'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: nfmscd
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: athena92@example.org
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 10
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
