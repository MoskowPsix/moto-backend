openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: cum
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:20'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: consequuntur
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: dicta
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 20
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: libero
                  nullable: false
                phoneNumber:
                  type: integer
                  description: ''
                  example: 7
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 20
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: consectetur
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: id
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: vel
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: officia
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: occaecati
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 217
                      name: 'Crawford Hauck'
                      email: juvenal.zemlak@example.com
                      email_verified_at: '2025-03-26T05:25:20.000000Z'
                      created_at: '2025-03-26T05:25:20.000000Z'
                      updated_at: '2025-03-26T05:25:20.000000Z'
                      avatar: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 218
                      name: 'Rubye Ortiz IV'
                      email: reilly.ariel@example.org
                      email_verified_at: '2025-03-26T05:25:20.000000Z'
                      created_at: '2025-03-26T05:25:20.000000Z'
                      updated_at: '2025-03-26T05:25:20.000000Z'
                      avatar: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: cumque
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 75
                    name: 'Dr. Violette Lind Jr.'
                    desc: 'Ut vel vitae sed. Aut aperiam aut sit ut sit omnis. Commodi sint a dolor quos ipsam quia.'
                    price: '5.501696e+08'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 75
                      name:
                        type: string
                        example: 'Dr. Violette Lind Jr.'
                      desc:
                        type: string
                        example: 'Ut vel vitae sed. Aut aperiam aut sit ut sit omnis. Commodi sint a dolor quos ipsam quia.'
                      price:
                        type: string
                        example: '5.501696e+08'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: atuvojpttedvmjdtttepsbiub
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: odawlqk
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 0.9988
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 6
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 76
                    name: 'Eleazar Cormier DDS'
                    desc: 'Itaque et perferendis a voluptatum. Voluptatibus hic totam sit aut necessitatibus quis ducimus. Eum nemo rerum deleniti consequatur. Quidem harum animi est dolore atque.'
                    price: '8191'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 76
                      name:
                        type: string
                        example: 'Eleazar Cormier DDS'
                      desc:
                        type: string
                        example: 'Itaque et perferendis a voluptatum. Voluptatibus hic totam sit aut necessitatibus quis ducimus. Eum nemo rerum deleniti consequatur. Quidem harum animi est dolore atque.'
                      price:
                        type: string
                        example: '8191'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vzcntprvypbbovneikclvz
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gtbfrciwnvdkcxced
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 30365.486760637
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 77
                    name: 'Wayne Weber'
                    desc: 'Aut aut id excepturi magnam. Consequatur sed ea consequatur tenetur nisi fugit occaecati. Saepe vero minus quis rem cumque.'
                    price: '889'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 77
                      name:
                        type: string
                        example: 'Wayne Weber'
                      desc:
                        type: string
                        example: 'Aut aut id excepturi magnam. Consequatur sed ea consequatur tenetur nisi fugit occaecati. Saepe vero minus quis rem cumque.'
                      price:
                        type: string
                        example: '889'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 2
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 28|b6FD1OQp0NU4Rqzrsm5XzH6jIGo1L6baq8VLHkSK37e87239
                  token_type: Bearer
                  user:
                    id: 207
                    name: 'Phyllis Johnston'
                    email: xdietrich@example.com
                    email_verified_at: '2025-03-26T05:25:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 28|b6FD1OQp0NU4Rqzrsm5XzH6jIGo1L6baq8VLHkSK37e87239
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 207
                      name:
                        type: string
                        example: 'Phyllis Johnston'
                      email:
                        type: string
                        example: xdietrich@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-26T05:25:10.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters.'
                  example: helene.kovacek@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: '"0FBdyJ[-3T/)`'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 29|vOeR2LUhN3xHaThynzn0qsxR3vXAcOO1o55JoScP90c27208
                  token_type: Bearer
                  user:
                    id: 208
                    name: 'Kaylin Volkman'
                    email: devin87@example.org
                    email_verified_at: '2025-03-26T05:25:11.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 29|vOeR2LUhN3xHaThynzn0qsxR3vXAcOO1o55JoScP90c27208
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 208
                      name:
                        type: string
                        example: 'Kaylin Volkman'
                      email:
                        type: string
                        example: devin87@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-26T05:25:11.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.login.email_exists
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.login.email_exists
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: bbqsgfnuapnfklauiupkfk
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: berneice31@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: \Zz))bzkJN+4!SiyVV
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: et
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: muugmvjypf
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: beneorevkf
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 30|hKmGILpr5bFNidBDTLs8AgLIKUeOLOpteXnggIaE2ccf277f
                  token_type: Bearer
                  user:
                    id: 210
                    name: 'Barton Jenkins'
                    email: aletha40@example.org
                    email_verified_at: '2025-03-26T05:25:12.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 30|hKmGILpr5bFNidBDTLs8AgLIKUeOLOpteXnggIaE2ccf277f
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 210
                      name:
                        type: string
                        example: 'Barton Jenkins'
                      email:
                        type: string
                        example: aletha40@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-26T05:25:12.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 4 characters.'
                  example: jqdr
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: vqdcoqd
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: laborum
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: enim
                  nullable: false
              required:
                - key
                - phone
      security: []
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 75
                      name: 'Dr. Reese Koepp'
                      full_name: null
                      coach: null
                      city: Litzyland
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 76
                      name: 'Zackary Trantow'
                      full_name: null
                      coach: null
                      city: Predovicville
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 25
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: quod
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: ab
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 78
                    name: 'Janick Turcotte V'
                    full_name: null
                    coach: null
                    city: 'New Duane'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 78
                      name:
                        type: string
                        example: 'Janick Turcotte V'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'New Duane'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qayuyfaoeedlpgb
                  nullable: false
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rhrxottidbdiqydwtoth
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: psrlttb
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: false
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qvgtbqre
                  nullable: false
              required:
                - name
                - locationId
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 77
                    name: 'Prof. Jairo McKenzie PhD'
                    full_name: null
                    coach: null
                    city: Domingoport
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 77
                      name:
                        type: string
                        example: 'Prof. Jairo McKenzie PhD'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Domingoport
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 18
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: officia
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 79
                    name: 'Prof. Chet Ebert Jr.'
                    full_name: null
                    coach: null
                    city: Gaylordtown
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 79
                      name:
                        type: string
                        example: 'Prof. Chet Ebert Jr.'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Gaylordtown
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pcdlmoqfvwfiyftns
                  nullable: true
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qlvdglyu
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cxijchf
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: rwrwizijvku
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 4
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.delete.success
                  command:
                    id: 80
                    name: 'Dr. Elisa Bosco'
                    full_name: null
                    coach: null
                    city: 'West Miles'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.delete.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 80
                      name:
                        type: string
                        example: 'Dr. Elisa Bosco'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'West Miles'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches':
    get:
      summary: getCoaches
      operationId: getCoaches
      description: 'Получение всех тренеров команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  couches:
                    id: 219
                    name: 'Makayla Kertzmann'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  couches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 219
                      name:
                        type: string
                        example: 'Makayla Kertzmann'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 10
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.add_couch.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.add_couch.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 13
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: aspernatur
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.member_toggle.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.member_toggle.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 220
                    name: 'Miss Isobel Bruen V'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 220
                      name:
                        type: string
                        example: 'Miss Isobel Bruen V'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 8
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: ''
      operationId: getApiCommandsCommand_idMembersForCoach
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 2
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 13
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 19
                    name: 'Jaycee Batz III'
                    year: 1991
                    stages: '6'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 19
                      name:
                        type: string
                        example: 'Jaycee Batz III'
                      year:
                        type: integer
                        example: 1991
                      stages:
                        type: string
                        example: '6'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 15
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: porro
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 22
                    name: 'Queenie Walker IV'
                    year: 2014
                    stages: '9'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 22
                      name:
                        type: string
                        example: 'Queenie Walker IV'
                      year:
                        type: integer
                        example: 2014
                      stages:
                        type: string
                        example: '9'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xmpusmlmxhafkqsgodsbxwuz
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tgejjxbjdsqagbhwgutkmydmh
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: vel
        required: true
        schema:
          type: string
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 21
                    name: 'Mrs. Gisselle Auer V'
                    year: 2003
                    stages: '6'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 21
                      name:
                        type: string
                        example: 'Mrs. Gisselle Auer V'
                      year:
                        type: integer
                        example: 2003
                      stages:
                        type: string
                        example: '6'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wtgynkuvcoxqw
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 12
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: yzqffq
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
              required:
                - name
                - year
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 202
                    name: file_67e38fbf3c44a
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 202
                      name:
                        type: string
                        example: file_67e38fbf3c44a
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: notarius
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://www.lesch.com/repellat-rerum-minima-veniam-laudantium.html'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: recusandae
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: ullam
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 203
                      name: file_67e38fbf5c245
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 204
                      name: file_67e38fbf67899
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 14
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 205
                    name: file_67e38fbf8ca8a
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 205
                      name:
                        type: string
                        example: file_67e38fbf8ca8a
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 206
                    name: file_67e38fbfb764a
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 206
                      name:
                        type: string
                        example: file_67e38fbfb764a
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: fugit
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 120
                    status: false
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 120
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 3
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:15'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 121
                  status: false
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 121
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.favorite_user.toggle.success_remove
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.favorite_user.toggle.success_remove
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 52
                      name: 'Thurman Effertz PhD'
                      description: 'Quaerat quos recusandae voluptas expedita. Repellendus ut beatae ut. Animi et laborum adipisci quas quia. Et voluptatem consequatur expedita molestiae natus.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 53
                      name: 'Brent McDermott PhD'
                      description: 'Quos velit libero architecto eos sunt sunt. Placeat ut aut excepturi repellendus sequi. Pariatur iure ut est rerum et.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 8
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 55
                    name: 'Georgiana Breitenberg'
                    description: 'Maxime magnam perferendis dolor quo molestiae. Qui ullam libero optio qui iste exercitationem quos. Aliquam reiciendis est totam qui.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 55
                      name:
                        type: string
                        example: 'Georgiana Breitenberg'
                      description:
                        type: string
                        example: 'Maxime magnam perferendis dolor quo molestiae. Qui ullam libero optio qui iste exercitationem quos. Aliquam reiciendis est totam qui.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fon
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Possimus sed tenetur dicta rerum quia.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 54
                    name: 'Werner Hansen Sr.'
                    description: 'Aut praesentium et et nulla. Ut laboriosam iure error tempora odio suscipit consequatur blanditiis. Sit nihil aut ut quia. Ab minus et nihil labore illo molestiae. Quod dolor et minus.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 54
                      name:
                        type: string
                        example: 'Werner Hansen Sr.'
                      description:
                        type: string
                        example: 'Aut praesentium et et nulla. Ut laboriosam iure error tempora odio suscipit consequatur blanditiis. Sit nihil aut ut quia. Ab minus et nihil labore illo molestiae. Quod dolor et minus.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 2
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 56
                    name: 'Dr. Nyasia Casper DVM'
                    description: 'Et voluptatibus quae nulla maiores esse iusto animi. Nostrum aspernatur voluptatem mollitia rerum ullam repellendus. Velit incidunt quia quo quibusdam est pariatur repudiandae.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 56
                      name:
                        type: string
                        example: 'Dr. Nyasia Casper DVM'
                      description:
                        type: string
                        example: 'Et voluptatibus quae nulla maiores esse iusto animi. Nostrum aspernatur voluptatem mollitia rerum ullam repellendus. Velit incidunt quia quo quibusdam est pariatur repudiandae.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: nditd
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Nulla sit est dolor asperiores blanditiis ipsam error.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 11
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Ms.
                    surname: Dr.
                    patronymic: Mrs.
                    date_of_birth: '1985-03-23'
                    city: 'South Monica'
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(212) 636-1079'
                    start_number: '266'
                    group: 'Athletic Trainer'
                    rank_number: '100000'
                    rank: 'Radar Technician'
                    community: 'Nitzsche PLC'
                    coach: 'Kay Fahey'
                    moto_stamp: Dr.
                    engine: Dr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Ms.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1985-03-23'
                      city:
                        type: string
                        example: 'South Monica'
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(212) 636-1079'
                      start_number:
                        type: string
                        example: '266'
                      group:
                        type: string
                        example: 'Athletic Trainer'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Radar Technician'
                      community:
                        type: string
                        example: 'Nitzsche PLC'
                      coach:
                        type: string
                        example: 'Kay Fahey'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:18'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: odit
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 2
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: vitae
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: impedit
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 4
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 3
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Mrs.
                    date_of_birth: '1991-07-10'
                    city: Macejkovicmouth
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: 1-361-960-8357
                    start_number: '353'
                    group: Cabinetmaker
                    rank_number: '100000'
                    rank: 'Oil Service Unit Operator'
                    community: Crist-Reichert
                    coach: 'Thora Kassulke'
                    moto_stamp: Dr.
                    engine: Prof.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1991-07-10'
                      city:
                        type: string
                        example: Macejkovicmouth
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: 1-361-960-8357
                      start_number:
                        type: string
                        example: '353'
                      group:
                        type: string
                        example: Cabinetmaker
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: 'Oil Service Unit Operator'
                      community:
                        type: string
                        example: Crist-Reichert
                      coach:
                        type: string
                        example: 'Thora Kassulke'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: dicta
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: pariatur
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:18'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: laudantium
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: amet
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: nam
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 14
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 8
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 77
                      name: 'Dr. Reynold Hammes II'
                      desc: 'Et dolor dolores ea expedita hic. Nulla nostrum nihil cum illo.'
                      is_work: true
                      date_start: '2025-03-26T02:43:59.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 78
                      name: 'Daron Hagenes PhD'
                      desc: 'Omnis quas sed aut in est. Dolorem iusto vero commodi dolore fuga non.'
                      is_work: true
                      date_start: '2025-03-26T07:10:00.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 10
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 15
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 5
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 19
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:16'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:16'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 1
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 80
                    name: 'Maymie Anderson DDS'
                    desc: 'Est laborum corporis ea eligendi dolorem. Autem voluptatem sequi itaque aut qui nobis. Perspiciatis beatae rerum sapiente excepturi et. Totam omnis minima harum est omnis.'
                    is_work: false
                    date_start: '2025-03-26T09:08:26.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 80
                      name:
                        type: string
                        example: 'Maymie Anderson DDS'
                      desc:
                        type: string
                        example: 'Est laborum corporis ea eligendi dolorem. Autem voluptatem sequi itaque aut qui nobis. Perspiciatis beatae rerum sapiente excepturi et. Totam omnis minima harum est omnis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-26T09:08:26.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: svjffpratjlhwqekkwiqtkbrxrlsvswyeeniyfyvdutujztajbertmllvmndkvjidbqelfnsgahb
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:16'
                  nullable: false
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:16'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 10
                  nullable: true
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 4
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 7
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 79
                    name: 'Dr. Mervin Legros'
                    desc: 'Placeat facere adipisci quisquam nobis explicabo. Itaque quae et nesciunt nesciunt.'
                    is_work: true
                    date_start: '2025-03-26T14:04:02.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 79
                      name:
                        type: string
                        example: 'Dr. Mervin Legros'
                      desc:
                        type: string
                        example: 'Placeat facere adipisci quisquam nobis explicabo. Itaque quae et nesciunt nesciunt.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-26T14:04:02.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 6
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.delete.success
                  race:
                    id: 84
                    name: 'Jacklyn Tremblay'
                    desc: 'Aliquid atque beatae facilis. Enim dolor et debitis expedita ipsum qui. Alias labore modi ullam aliquid similique corrupti qui. Nemo distinctio officia rem est nulla quibusdam.'
                    is_work: true
                    date_start: '2025-03-26T21:34:50.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.delete.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 84
                      name:
                        type: string
                        example: 'Jacklyn Tremblay'
                      desc:
                        type: string
                        example: 'Aliquid atque beatae facilis. Enim dolor et debitis expedita ipsum qui. Alias labore modi ullam aliquid similique corrupti qui. Nemo distinctio officia rem est nulla quibusdam.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-26T21:34:50.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 81
                    name: 'Arnulfo Mraz'
                    desc: 'Amet maiores reprehenderit blanditiis tempora culpa hic cupiditate aut. Omnis officia sed ut voluptate.'
                    is_work: true
                    date_start: '2025-03-26T04:20:59.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 81
                      name:
                        type: string
                        example: 'Arnulfo Mraz'
                      desc:
                        type: string
                        example: 'Amet maiores reprehenderit blanditiis tempora culpa hic cupiditate aut. Omnis officia sed ut voluptate.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-26T04:20:59.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: cslfszenetzwiieasqnmgupxhtwuipvotxryzcvdi
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: minus
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:17'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-26T05:25:17'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 8
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - sint
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 3
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 13
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 8
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 82
                    name: 'Mrs. Delta Greenholt DDS'
                    desc: 'Corrupti porro voluptas iure nam optio qui modi. Hic autem saepe quia est alias voluptate. Deserunt temporibus sequi impedit quae quia in magni omnis.'
                    is_work: true
                    date_start: '2025-03-26T16:11:32.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 82
                      name:
                        type: string
                        example: 'Mrs. Delta Greenholt DDS'
                      desc:
                        type: string
                        example: 'Corrupti porro voluptas iure nam optio qui modi. Hic autem saepe quia est alias voluptate. Deserunt temporibus sequi impedit quae quia in magni omnis.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-26T16:11:32.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_allowed
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_allowed
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 14
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 5
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: ekuhlman@example.com
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.schinner.org/corrupti-voluptates-reiciendis-et-est-commodi'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'hB)A,m,=|_w`d^3ObT|'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: consequuntur
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 216
                    name: 'Miss Winifred Jakubowski'
                    email: wstanton@example.net
                    email_verified_at: '2025-03-26T05:25:16.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 216
                      name:
                        type: string
                        example: 'Miss Winifred Jakubowski'
                      email:
                        type: string
                        example: wstanton@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-26T05:25:16.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 11
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 5
                      name: 'Prof. Amber Deckow'
                  -
                    status: success
                    message: messages.status.get_all.success
                    statuses:
                      id: 6
                      name: 'Anika Weissnat'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 20
                    login: 'Et saepe animi corrupti. Sed ducimus et occaecati error quidem.'
                    password_1: C@;^|Vmkkmk>9_~v6sM
                    password_2: ']U"|,RKMoOXcL$J)&'
                    token: 'Distinctio et fugiat id quae aliquam alias voluptatem perspiciatis. Ut voluptas deleniti ut aspernatur cumque est.'
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 20
                      login:
                        type: string
                        example: 'Et saepe animi corrupti. Sed ducimus et occaecati error quidem.'
                      password_1:
                        type: string
                        example: C@;^|Vmkkmk>9_~v6sM
                      password_2:
                        type: string
                        example: ']U"|,RKMoOXcL$J)&'
                      token:
                        type: string
                        example: 'Distinctio et fugiat id quae aliquam alias voluptatem perspiciatis. Ut voluptas deleniti ut aspernatur cumque est.'
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: mqcllfcjnjikl
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tjpkrmckbcqpwyulsdy
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lsbegaimmavgrqswauzm
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kcjujbikjuhxhpcandctpup
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 67
                      name: 'Gas Pumping Station Operator'
                      address: "71661 Titus Flat Apt. 318\nRolfsonville, CA 21669-1621"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Earum veniam quia nulla. Quaerat vero minus reiciendis vitae et doloremque ipsa. Qui fuga cupiditate doloremque molestiae. Totam iusto voluptas non similique. Consequatur aperiam et quibusdam aut tempora temporibus. Occaecati harum non dolores harum architecto nisi in cum. Aut magnam aut placeat aut ut dolor. Nisi ut amet minus sit sapiente facere et debitis. Et iure illum laborum officia placeat labore possimus.'
                      length: 814
                      turns: 37
                      free: false
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 32
                        name: Краснодарский
                        type: край
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 68
                      name: 'Recreation Worker'
                      address: "680 Mante Path\nRueckerberg, OK 04987-9779"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Ut necessitatibus est assumenda commodi at ratione reiciendis. Ad amet quam ut nulla earum voluptatem perspiciatis. Qui vero rerum totam velit rerum voluptate rem. Qui quis est tempora quaerat quia. Architecto autem aut nam itaque. Numquam voluptas iusto placeat et. Occaecati nemo sunt numquam maiores quia ullam. Fugit omnis rerum inventore aliquam. Sequi dolorem quia debitis alias quaerat ea delectus. Vel suscipit pariatur id atque. Et repellendus et consequatur vel quis iste qui.'
                      length: 952
                      turns: 31
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 57
                        name: Рязанская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 21
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 70
                    name: Librarian
                    address: "5046 Beier Key Suite 495\nSadyefort, TN 08495-0118"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Tenetur architecto eveniet magnam laudantium voluptatem ea deleniti natus. Ratione beatae sit quis perspiciatis et non. Sed voluptatem quisquam tempore sit facere. Dolor repellat perspiciatis ut quia qui harum. Ducimus quos sapiente voluptas sit quaerat consequuntur. Qui quia quia fugit. Consequatur qui eum odio aut libero aliquam magni.'
                    length: 404
                    turns: 27
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 5
                      name: Архангельская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 70
                      name:
                        type: string
                        example: Librarian
                      address:
                        type: string
                        example: "5046 Beier Key Suite 495\nSadyefort, TN 08495-0118"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Tenetur architecto eveniet magnam laudantium voluptatem ea deleniti natus. Ratione beatae sit quis perspiciatis et non. Sed voluptatem quisquam tempore sit facere. Dolor repellat perspiciatis ut quia qui harum. Ducimus quos sapiente voluptas sit quaerat consequuntur. Qui quia quia fugit. Consequatur qui eum odio aut libero aliquam magni.'
                      length:
                        type: integer
                        example: 404
                      turns:
                        type: integer
                        example: 27
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 5
                          name:
                            type: string
                            example: Архангельская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: ztcsxblpxkmdtadrbmxtjvauqryshqqgegjqvinydtkgujrlnobhlwxyxckozeygfsrpxndvuh
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 4
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 10
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 20
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 69
                    name: 'Paving Equipment Operator'
                    address: "1025 Cummerata Trace Apt. 463\nBrakushaven, SC 27520-3993"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Qui non modi perspiciatis dolor id rerum repellat. Voluptatem nisi voluptas accusamus maiores porro temporibus sint. Illo quibusdam cumque molestiae voluptatum esse distinctio aut. Occaecati sed inventore eius quis accusamus. Laboriosam non consequatur alias consequatur non dolor ipsam distinctio. Eaque aut et ut doloribus. Voluptate ut natus rerum qui facilis eos. Est numquam autem rerum odio aliquid.'
                    length: 117
                    turns: 12
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 81
                      name: 'Чувашская Республика'
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 69
                      name:
                        type: string
                        example: 'Paving Equipment Operator'
                      address:
                        type: string
                        example: "1025 Cummerata Trace Apt. 463\nBrakushaven, SC 27520-3993"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Qui non modi perspiciatis dolor id rerum repellat. Voluptatem nisi voluptas accusamus maiores porro temporibus sint. Illo quibusdam cumque molestiae voluptatum esse distinctio aut. Occaecati sed inventore eius quis accusamus. Laboriosam non consequatur alias consequatur non dolor ipsam distinctio. Eaque aut et ut doloribus. Voluptate ut natus rerum qui facilis eos. Est numquam autem rerum odio aliquid.'
                      length:
                        type: integer
                        example: 117
                      turns:
                        type: integer
                        example: 12
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 81
                          name:
                            type: string
                            example: 'Чувашская Республика'
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 71
                    name: 'Transportation Manager'
                    address: "372 Huel Way\nTreutelhaven, LA 61799-4449"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Dolor quia adipisci fugit tenetur numquam. Assumenda adipisci cum vitae sed in. Voluptas quia dolorem est rerum cumque ducimus. Nihil est aspernatur nulla ipsum deserunt occaecati. Ea incidunt eveniet corrupti et blanditiis repellendus ducimus. Delectus voluptatibus sunt necessitatibus reiciendis assumenda ea. Illum eum dolore veniam. Libero sint ipsum et repellat delectus. Minus corporis qui et quia occaecati.'
                    length: 909
                    turns: 60
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 78
                      name: 'Ханты-Мансийский Автономный округ - Югра'
                      type: 'автономный округ'
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 71
                      name:
                        type: string
                        example: 'Transportation Manager'
                      address:
                        type: string
                        example: "372 Huel Way\nTreutelhaven, LA 61799-4449"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Dolor quia adipisci fugit tenetur numquam. Assumenda adipisci cum vitae sed in. Voluptas quia dolorem est rerum cumque ducimus. Nihil est aspernatur nulla ipsum deserunt occaecati. Ea incidunt eveniet corrupti et blanditiis repellendus ducimus. Delectus voluptatibus sunt necessitatibus reiciendis assumenda ea. Illum eum dolore veniam. Libero sint ipsum et repellat delectus. Minus corporis qui et quia occaecati.'
                      length:
                        type: integer
                        example: 909
                      turns:
                        type: integer
                        example: 60
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 78
                          name:
                            type: string
                            example: 'Ханты-Мансийский Автономный округ - Югра'
                          type:
                            type: string
                            example: 'автономный округ'
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: lgrcvs
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: beatae
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - voluptatem
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 8
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 6
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.delete.success
                  track:
                    id: 72
                    name: 'Job Printer'
                    address: "13722 Destiney Drive\nWest Madison, AK 70072"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Et voluptatem molestiae dolor voluptatem exercitationem. Facilis dolor ea dolore. Sapiente est labore praesentium id nihil similique qui. Laboriosam sit debitis ratione unde. Repellat repellendus nemo voluptatem vel neque debitis assumenda. Dolorem aperiam eum aliquam ad cum delectus atque minima. Placeat ex vitae corrupti aliquid aut repellat eos reiciendis. Ut quisquam dolorum ab qui debitis. Ipsam exercitationem debitis magnam minus delectus accusantium sapiente adipisci.'
                    length: 962
                    turns: 72
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 44
                      name: Мурманская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.delete.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 72
                      name:
                        type: string
                        example: 'Job Printer'
                      address:
                        type: string
                        example: "13722 Destiney Drive\nWest Madison, AK 70072"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Et voluptatem molestiae dolor voluptatem exercitationem. Facilis dolor ea dolore. Sapiente est labore praesentium id nihil similique qui. Laboriosam sit debitis ratione unde. Repellat repellendus nemo voluptatem vel neque debitis assumenda. Dolorem aperiam eum aliquam ad cum delectus atque minima. Placeat ex vitae corrupti aliquid aut repellat eos reiciendis. Ut quisquam dolorum ab qui debitis. Ipsam exercitationem debitis magnam minus delectus accusantium sapiente adipisci.'
                      length:
                        type: integer
                        example: 962
                      turns:
                        type: integer
                        example: 72
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 44
                          name:
                            type: string
                            example: Мурманская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 7
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 211
                    name: 'Sigmund Hessel'
                    email: baylee.oberbrunner@example.org
                    email_verified_at: '2025-03-26T05:25:12.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 211
                      name:
                        type: string
                        example: 'Sigmund Hessel'
                      email:
                        type: string
                        example: baylee.oberbrunner@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-26T05:25:12.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.delete.success
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 212
                    name: 'Shana Lynch'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 212
                      name:
                        type: string
                        example: 'Shana Lynch'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 213
                    name: 'Eleanora Johnson'
                    email: linda15@example.net
                    email_verified_at: '2025-03-26T05:25:13.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 213
                      name:
                        type: string
                        example: 'Eleanora Johnson'
                      email:
                        type: string
                        example: linda15@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-26T05:25:13.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: gwbuvbcnpuz
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: robel.nina@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: ccs
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 214
                      name: 'Myrtle Hoeger'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 215
                      name: 'Prof. Magali Larson'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: beatae
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 1
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 15
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
