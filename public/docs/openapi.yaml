openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.create.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.create.success
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_found
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_found
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: veritatis
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:42'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                inn:
                  type: integer
                  description: ''
                  example: 18
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                phoneNumber:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 14
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: sed
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: commodi
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: unde
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: et
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 17
                  items:
                    type: integer
                    nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 190
                      name: 'Prof. Hellen Stehr'
                      email: xkunde@example.org
                      email_verified_at: '2025-03-19T07:13:42.000000Z'
                      created_at: '2025-03-19T07:13:42.000000Z'
                      updated_at: '2025-03-19T07:13:42.000000Z'
                      avatar: null
                  -
                    status: success
                    message: messages.appointment_race.get_users.success
                    users:
                      id: 191
                      name: 'Prof. Gisselle Nader'
                      email: mkihn@example.org
                      email_verified_at: '2025-03-19T07:13:42.000000Z'
                      created_at: '2025-03-19T07:13:42.000000Z'
                      updated_at: '2025-03-19T07:13:42.000000Z'
                      avatar: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 23
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/pdf':
    get:
      summary: getAppointmentPDF
      operationId: getAppointmentPDF
      description: 'Возвращает документ заявки гонщика для комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 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
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: exercitationem
        required: true
        schema:
          type: string
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.create.success
                  attendance:
                    id: 67
                    name: 'Mrs. Gwendolyn Borer I'
                    desc: 'Sed sed aut ratione a dolore optio dolor. Magni adipisci architecto voluptatem quia voluptas nostrum ea. Molestiae amet voluptates at repudiandae quo consequatur et.'
                    price: '85'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.create.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 67
                      name:
                        type: string
                        example: 'Mrs. Gwendolyn Borer I'
                      desc:
                        type: string
                        example: 'Sed sed aut ratione a dolore optio dolor. Magni adipisci architecto voluptatem quia voluptas nostrum ea. Molestiae amet voluptates at repudiandae quo consequatur et.'
                      price:
                        type: string
                        example: '85'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ddmlfhmnzid
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: cmsasyjj
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 15079.3057688
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 10
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.update.success
                  attendance:
                    id: 68
                    name: 'Kiel Anderson'
                    desc: 'Odit ex est blanditiis. Vitae nobis nobis est porro enim ex. Ipsam quaerat ea facere iusto sapiente officia fugit. Laboriosam iure non et ut quae quia vero.'
                    price: '2.932767e+06'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.update.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 68
                      name:
                        type: string
                        example: 'Kiel Anderson'
                      desc:
                        type: string
                        example: 'Odit ex est blanditiis. Vitae nobis nobis est porro enim ex. Ipsam quaerat ea facere iusto sapiente officia fugit. Laboriosam iure non et ut quae quia vero.'
                      price:
                        type: string
                        example: '2.932767e+06'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ueymkqpxrmqiwmft
                  nullable: false
                desc:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: pyqloxjqlfoibhxheksz
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 3.354
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 4
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.attendance.delete.success
                  attendance:
                    id: 69
                    name: 'Alyce Barrows'
                    desc: 'Occaecati nisi aliquid nihil dolor nulla iste et. Sit maxime rerum nam aut quia doloremque. Expedita fuga iste qui nobis quam maiores illo aut.'
                    price: '5'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.attendance.delete.success
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 69
                      name:
                        type: string
                        example: 'Alyce Barrows'
                      desc:
                        type: string
                        example: 'Occaecati nisi aliquid nihil dolor nulla iste et. Sit maxime rerum nam aut quia doloremque. Expedita fuga iste qui nobis quam maiores illo aut.'
                      price:
                        type: string
                        example: '5'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 16
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 21|VUIrlebAcEDuNL162A0gSnN3w5BRCO2MObnMY2qN228aa89b
                  token_type: Bearer
                  user:
                    id: 180
                    name: 'Cleve Klocko'
                    email: goldner.hilbert@example.org
                    email_verified_at: '2025-03-19T07:13:33.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 21|VUIrlebAcEDuNL162A0gSnN3w5BRCO2MObnMY2qN228aa89b
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 180
                      name:
                        type: string
                        example: 'Cleve Klocko'
                      email:
                        type: string
                        example: goldner.hilbert@example.org
                      email_verified_at:
                        type: string
                        example: '2025-03-19T07:13:33.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. Must be at least 3 characters.'
                  example: marietta.gleason@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: 'LDSk#DDHaCYT%'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 22|CeIyp5tZJbPXy6P7EzLZBCcgU0RR5LIDg9rkBSef97cc7654
                  token_type: Bearer
                  user:
                    id: 181
                    name: 'Desiree Kuhic'
                    email: ila72@example.net
                    email_verified_at: '2025-03-19T07:13:34.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 22|CeIyp5tZJbPXy6P7EzLZBCcgU0RR5LIDg9rkBSef97cc7654
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 181
                      name:
                        type: string
                        example: 'Desiree Kuhic'
                      email:
                        type: string
                        example: ila72@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-19T07:13:34.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: gebpyzwqtil
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lurline.borer@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: M=IWP_xNL
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: enim
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: xjk
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: xpq
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 23|JeWgqZwrmV7Ldv84IO3VyOimwyaSf1ExOGsM6bW4d190dbec
                  token_type: Bearer
                  user:
                    id: 183
                    name: 'Ellis Little IV'
                    email: marquardt.elmo@example.com
                    email_verified_at: '2025-03-19T07:13:35.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 23|JeWgqZwrmV7Ldv84IO3VyOimwyaSf1ExOGsM6bW4d190dbec
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 183
                      name:
                        type: string
                        example: 'Ellis Little IV'
                      email:
                        type: string
                        example: marquardt.elmo@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-19T07:13:35.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 4 characters.'
                  example: ai
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: knwy
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
              required:
                - key
                - phone
      security: []
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 63
                      name: 'Kennedy Kertzmann III'
                      full_name: null
                      coach: null
                      city: Skilesborough
                      avatar: null
                  -
                    status: success
                    message: messages.command.get.success
                    commands:
                      id: 64
                      name: 'Dr. Colt Kling DVM'
                      full_name: null
                      coach: null
                      city: 'East Cassandra'
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 14
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 3
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.create.success
                  command:
                    id: 66
                    name: 'Ressie Beahan'
                    full_name: null
                    coach: null
                    city: 'East Julius'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.create.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 66
                      name:
                        type: string
                        example: 'Ressie Beahan'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'East Julius'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: selb
                  nullable: false
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: spglugrahkaqi
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ereakibz
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: false
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ofiyjqthyxjhdkxlztfkxmywi
                  nullable: false
              required:
                - name
                - locationId
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_for_id.success
                  command:
                    id: 65
                    name: 'Johan Jerde'
                    full_name: null
                    coach: null
                    city: 'Lake Londonside'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_for_id.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 65
                      name:
                        type: string
                        example: 'Johan Jerde'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'Lake Londonside'
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: culpa
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.update.success
                  command:
                    id: 67
                    name: 'Dr. Boyd Yost DDS'
                    full_name: null
                    coach: null
                    city: 'West Dejaview'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.update.success
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 67
                      name:
                        type: string
                        example: 'Dr. Boyd Yost DDS'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: 'West Dejaview'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: othhwmqkqgl
                  nullable: true
                fullName:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gfzh
                  nullable: true
                coach:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vgnvukapdqahindehsty
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                city:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: eiopxkun
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно удаленаю'
                  command:
                    id: 77
                    name: 'Степанова Виктория Борисовна'
                    full_name: null
                    coach: null
                    city: Ногинск
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно удаленаю'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 77
                      name:
                        type: string
                        example: 'Степанова Виктория Борисовна'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Ногинск
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 4
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches':
    get:
      summary: getCoaches
      operationId: getCoaches
      description: 'Получение всех тренеров команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  couches:
                    id: 665
                    name: 'Леонид Андреевич Воронов'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  couches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 665
                      name:
                        type: string
                        example: 'Леонид Андреевич Воронов'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: provident
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 1
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Тренер успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Тренер успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: architecto
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Участник удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Участник удалён.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 666
                    name: 'Макарова Лариса Ивановна'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 666
                      name:
                        type: string
                        example: 'Макарова Лариса Ивановна'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 5
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.get_for_id.success
                  cup:
                    id: 4
                    name: 'Jonas Willms'
                    year: 2013
                    stages: '3'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.get_for_id.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Jonas Willms'
                      year:
                        type: integer
                        example: 2013
                      stages:
                        type: string
                        example: '3'
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 20
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: debitis
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.update.success
                  cup:
                    id: 7
                    name: 'Prof. Autumn Smitham'
                    year: 1997
                    stages: '4'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.update.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 7
                      name:
                        type: string
                        example: 'Prof. Autumn Smitham'
                      year:
                        type: integer
                        example: 1997
                      stages:
                        type: string
                        example: '4'
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: o
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ptonrrjdlkjvlslczvwdvd
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 14
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: est
        required: true
        schema:
          type: string
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.cup.create.success
                  cup:
                    id: 6
                    name: 'Rowland Langworth'
                    year: 1993
                    stages: '2'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.cup.create.success
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: 'Rowland Langworth'
                      year:
                        type: integer
                        example: 1993
                      stages:
                        type: string
                        example: '2'
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: kul
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 19
                  nullable: false
                stages:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: uxmkigwkbedlyxhssnoymk
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
              required:
                - name
                - year
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 192
                    name: file_67da6ea59e81c
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 192
                      name:
                        type: string
                        example: file_67da6ea59e81c
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: polis
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://www.macejkovic.info/'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: necessitatibus
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 193
                      name: file_67da6ea5c740b
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 194
                      name: file_67da6ea5d265c
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}/files':
    get:
      summary: ''
      operationId: getApiUsersCabinetDocumentsIdFiles
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 195
                    name: file_67da6ea60ae25
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 195
                      name:
                        type: string
                        example: file_67da6ea60ae25
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.delete.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.update.success
                  document:
                    id: 196
                    name: file_67da6ea638eaf
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.update.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 196
                      name:
                        type: string
                        example: file_67da6ea638eaf
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: a
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.create.success
                  payment_link: null
                  transaction:
                    id: 116
                    status: false
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.create.success
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 116
                      status:
                        type: boolean
                        example: false
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 6
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:38'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 117
                  status: false
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 117
                  status:
                    type: boolean
                    example: false
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 42
                      name: 'Marvin Weber'
                      description: 'Hic voluptatum minima quae repellat ut est. Voluptatem voluptatem quia qui magni excepturi hic. Ut quos quo et.'
                  -
                    status: success
                    message: messages.grade.get.success
                    grades:
                      id: 43
                      name: 'Judd Ruecker'
                      description: 'Voluptas enim quos odit est magni. Molestias qui ea consequatur earum quaerat quis adipisci quos.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 5
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.create.success
                  grade:
                    id: 45
                    name: 'Kali Cummerata'
                    description: 'Suscipit inventore recusandae dolor suscipit sed. Ad placeat necessitatibus itaque. Omnis eum aspernatur et. Similique occaecati et non voluptatibus labore.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.create.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 45
                      name:
                        type: string
                        example: 'Kali Cummerata'
                      description:
                        type: string
                        example: 'Suscipit inventore recusandae dolor suscipit sed. Ad placeat necessitatibus itaque. Omnis eum aspernatur et. Similique occaecati et non voluptatibus labore.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tgipn
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Quam dolor animi dolorum sequi et inventore non et.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.get_for_id.success
                  grade:
                    id: 44
                    name: 'Lucienne Cole'
                    description: 'Rerum eius consequuntur repellendus quod atque voluptas iure. Sint cumque et dolor quia veritatis sit. Dolorum laborum debitis odit voluptate dicta soluta. Tempora ipsam est labore fugiat.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.get_for_id.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 44
                      name:
                        type: string
                        example: 'Lucienne Cole'
                      description:
                        type: string
                        example: 'Rerum eius consequuntur repellendus quod atque voluptas iure. Sint cumque et dolor quia veritatis sit. Dolorum laborum debitis odit voluptate dicta soluta. Tempora ipsam est labore fugiat.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 13
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.grade.update.success
                  grade:
                    id: 46
                    name: 'Elizabeth Zulauf'
                    description: 'Voluptas est dolorem ullam quas mollitia consequatur ut est. Non et ad pariatur ab harum et. Eum dolorum possimus ut sequi. Atque veniam autem aut officiis.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.grade.update.success
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 46
                      name:
                        type: string
                        example: 'Elizabeth Zulauf'
                      description:
                        type: string
                        example: 'Voluptas est dolorem ullam quas mollitia consequatur ut est. Non et ad pariatur ab harum et. Eum dolorum possimus ut sequi. Atque veniam autem aut officiis.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ekyqqraupdfveaoytddi
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Doloribus et magni eum in modi architecto eum.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 100.'
                  example: 18
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: iusto
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: veniam
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Miss
                    surname: Mr.
                    patronymic: Dr.
                    date_of_birth: '2010-12-06'
                    city: 'Lake Jody'
                    inn: '99999999999'
                    snils: '9999999999'
                    phone_number: 1-534-387-1547
                    start_number: '731'
                    group: Spotters
                    rank_number: '100000'
                    rank: University
                    community: 'Prohaska Ltd'
                    coach: 'Jakayla Romaguera'
                    moto_stamp: Miss
                    engine: Prof.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Miss
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '2010-12-06'
                      city:
                        type: string
                        example: 'Lake Jody'
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: 1-534-387-1547
                      start_number:
                        type: string
                        example: '731'
                      group:
                        type: string
                        example: Spotters
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: University
                      community:
                        type: string
                        example: 'Prohaska Ltd'
                      coach:
                        type: string
                        example: 'Jakayla Romaguera'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: illum
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:41'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 999.'
                  example: 17
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: voluptates
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: provident
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: libero
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quis
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: nihil
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 5
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.update.success
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Ms.
                    date_of_birth: '1983-09-05'
                    city: 'New Kelsi'
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '+1 (323) 421-9590'
                    start_number: '265'
                    group: 'Radiologic Technician'
                    rank_number: '99999'
                    rank: 'Traffic Technician'
                    community: 'Schmidt, Kozey and Gerhold'
                    coach: 'Dr. Aidan Sanford'
                    moto_stamp: Ms.
                    engine: Miss
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.update.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '1983-09-05'
                      city:
                        type: string
                        example: 'New Kelsi'
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '+1 (323) 421-9590'
                      start_number:
                        type: string
                        example: '265'
                      group:
                        type: string
                        example: 'Radiologic Technician'
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Traffic Technician'
                      community:
                        type: string
                        example: 'Schmidt, Kozey and Gerhold'
                      coach:
                        type: string
                        example: 'Dr. Aidan Sanford'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Miss
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: id
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:41'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: sunt
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: blanditiis
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: corrupti
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: delectus
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: esse
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 4
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 19
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 62
                      name: 'Ms. Rosemary Parisian DDS'
                      desc: 'Nihil itaque voluptatibus itaque distinctio veritatis quos. Non est optio voluptate animi. Aut qui nemo nostrum quis iste maiores.'
                      is_work: true
                      date_start: '2025-03-19T05:03:20.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 63
                      name: 'Prof. Maia Mante PhD'
                      desc: 'Inventore quia recusandae eos animi quis hic. Ut repellat distinctio sapiente hic occaecati quisquam pariatur recusandae. Repudiandae quaerat minus delectus voluptatem odit quis.'
                      is_work: true
                      date_start: '2025-03-19T02:21:11.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 18
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 16
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 1
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:38'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:38'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 7
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 8
                  items:
                    type: integer
                    nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.create.success
                  race:
                    id: 65
                    name: "Mossie D'Amore"
                    desc: 'Dolores esse qui voluptate velit inventore. Repellat officiis blanditiis perferendis ut hic aliquam nemo. Nemo omnis voluptatem voluptatem quasi iure ut nobis laborum.'
                    is_work: true
                    date_start: '2025-03-19T19:18:23.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.create.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 65
                      name:
                        type: string
                        example: "Mossie D'Amore"
                      desc:
                        type: string
                        example: 'Dolores esse qui voluptate velit inventore. Repellat officiis blanditiis perferendis ut hic aliquam nemo. Nemo omnis voluptatem voluptatem quasi iure ut nobis laborum.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-19T19:18:23.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: spasiplpobzbzgrkrayoofyeunkhgogkgunxkehrrpsvmgxxjmek
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: provident
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:39'
                  nullable: false
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:39'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 16
                  nullable: true
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 3
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 7
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 19
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 64
                    name: 'Oscar Murphy'
                    desc: 'Autem aliquid nihil repellendus error necessitatibus eius aut. Quia commodi dolores qui vel. Aut similique et molestiae aperiam ullam illum. Amet animi neque voluptatem tenetur saepe.'
                    is_work: false
                    date_start: '2025-03-19T22:15:50.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 64
                      name:
                        type: string
                        example: 'Oscar Murphy'
                      desc:
                        type: string
                        example: 'Autem aliquid nihil repellendus error necessitatibus eius aut. Quia commodi dolores qui vel. Aut similique et molestiae aperiam ullam illum. Amet animi neque voluptatem tenetur saepe.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-19T22:15:50.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 66
                    name: 'Bennett Muller PhD'
                    desc: 'Sit quia deleniti vel quis vero molestiae rerum sed. Accusamus quo vel dolor. Ipsa dicta quam dolor ducimus fugit aut asperiores. Cumque at maiores ut fuga doloremque reprehenderit.'
                    is_work: false
                    date_start: '2025-03-19T22:30:47.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 66
                      name:
                        type: string
                        example: 'Bennett Muller PhD'
                      desc:
                        type: string
                        example: 'Sit quia deleniti vel quis vero molestiae rerum sed. Accusamus quo vel dolor. Ipsa dicta quam dolor ducimus fugit aut asperiores. Cumque at maiores ut fuga doloremque reprehenderit.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-03-19T22:30:47.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
                  example: kntxlgclwdivtpdqora
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: quas
                  nullable: true
                dateStart:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:39'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2025-03-19T07:13:39'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 14
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - voluptatibus
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 18
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 20
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 1
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.toggle_is_work.success
                  race:
                    id: 67
                    name: 'Norberto Goldner PhD'
                    desc: 'Id perspiciatis fuga voluptates possimus sit praesentium exercitationem. Id vero dolore aut a ea. Culpa rem sequi veniam adipisci. A molestiae molestiae optio est nihil porro mollitia.'
                    is_work: true
                    date_start: '2025-03-19T23:20:59.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.toggle_is_work.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 67
                      name:
                        type: string
                        example: 'Norberto Goldner PhD'
                      desc:
                        type: string
                        example: 'Id perspiciatis fuga voluptates possimus sit praesentium exercitationem. Id vero dolore aut a ea. Culpa rem sequi veniam adipisci. A molestiae molestiae optio est nihil porro mollitia.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-03-19T23:20:59.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.error.not_allowed
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.error.not_allowed
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 10
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.send.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
                  example: jparisian@example.org
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.hartmann.com/sit-non-voluptates-molestiae-sunt-eos'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.recovery_password.recovery.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.recovery_password.recovery.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '[5gKgviXGjZg'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: ad
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    id: 189
                    name: 'Noemy Rolfson'
                    email: sauer.ebony@example.com
                    email_verified_at: '2025-03-19T07:13:38.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 189
                      name:
                        type: string
                        example: 'Noemy Rolfson'
                      email:
                        type: string
                        example: sauer.ebony@example.com
                      email_verified_at:
                        type: string
                        example: '2025-03-19T07:13:38.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 11
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 4
                      name: 'Анжелика Александровна Сазонова'
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 5
                      name: 'Макаров Александр Александрович'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 18
                    login: 'Temporibus ipsum dolorem consequuntur qui. Voluptas consequuntur ex possimus. Ipsum eius perferendis omnis expedita autem recusandae assumenda. Molestias fuga cum veniam.'
                    password_1: \UlEJv!nlhkzh=N~|6O
                    password_2: "!eL92*`H.k6M3(*7I('"
                    token: 'Enim non deleniti exercitationem deleniti quam. Dolorem totam ut consequatur eveniet autem non animi nihil. Dicta cumque sint deserunt enim.'
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 18
                      login:
                        type: string
                        example: 'Temporibus ipsum dolorem consequuntur qui. Voluptas consequuntur ex possimus. Ipsum eius perferendis omnis expedita autem recusandae assumenda. Molestias fuga cum veniam.'
                      password_1:
                        type: string
                        example: \UlEJv!nlhkzh=N~|6O
                      password_2:
                        type: string
                        example: "!eL92*`H.k6M3(*7I('"
                      token:
                        type: string
                        example: 'Enim non deleniti exercitationem deleniti quam. Dolorem totam ut consequatur eveniet autem non animi nihil. Dicta cumque sint deserunt enim.'
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gyngpsk
                  nullable: false
                password_1:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wsqzsnvjchby
                  nullable: false
                password_2:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: s
                  nullable: false
                token:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: o
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 55
                      name: 'Physics Teacher'
                      address: "6264 Swaniawski Tunnel Apt. 144\nNew Rosefurt, NH 89264"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Qui sunt ea ut quasi id similique. Velit error velit cum neque est fuga facilis. Aut molestiae aut ad tenetur distinctio dolores ratione repellat. Sequi ad et earum praesentium commodi. Ut odio dolor et aut dicta. Voluptas laudantium voluptatibus nemo dignissimos dolorem qui sit aut. Necessitatibus sed fuga ea est voluptas blanditiis. Odit quibusdam est voluptatem laborum. Deleniti omnis vero quo.'
                      length: 656
                      turns: 47
                      free: true
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 4
                        name: Амурская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 56
                      name: 'Fish Game Warden'
                      address: "928 Reva Mission Apt. 987\nWest Modestamouth, KY 90242-7347"
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Nihil consequatur voluptatum explicabo perferendis in. Culpa sit sit repellendus non fuga. Officia necessitatibus debitis tenetur voluptatem velit non rerum. Aspernatur accusantium natus eius eius sed quidem hic aut. Adipisci odit aspernatur quis. Ratione molestiae et id. Qui aut perspiciatis reiciendis a. Quis expedita fugiat repellat ipsa ullam delectus. Temporibus ut nemo et sed aspernatur voluptatum maxime. Deleniti est corporis quae eaque aliquid.'
                      length: 49
                      turns: 72
                      free: false
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 72
                        name: Тыва
                        type: республика
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 14
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: atque
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 13
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 6
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 58
                    name: Geologist
                    address: "1124 Flatley Forges Suite 910\nSouth Delilah, VT 82771"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Nostrum ipsum ipsum nisi vero quasi dolor qui. Ad velit sunt officiis totam qui quia. Magni natus placeat consectetur dolore numquam quo iure. Culpa rerum nulla ab expedita repudiandae et repudiandae. Autem illum vel quos id reprehenderit natus. Sit qui deleniti dignissimos quaerat eum. Qui alias necessitatibus pariatur. Dolore dolor ad accusamus aut. Sint ipsam odit aut harum vel incidunt. Architecto sunt perspiciatis repellendus voluptatem et dolorum voluptas. Sapiente molestiae in et qui.'
                    length: 982
                    turns: 44
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 8
                      name: Белгородская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 58
                      name:
                        type: string
                        example: Geologist
                      address:
                        type: string
                        example: "1124 Flatley Forges Suite 910\nSouth Delilah, VT 82771"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Nostrum ipsum ipsum nisi vero quasi dolor qui. Ad velit sunt officiis totam qui quia. Magni natus placeat consectetur dolore numquam quo iure. Culpa rerum nulla ab expedita repudiandae et repudiandae. Autem illum vel quos id reprehenderit natus. Sit qui deleniti dignissimos quaerat eum. Qui alias necessitatibus pariatur. Dolore dolor ad accusamus aut. Sint ipsam odit aut harum vel incidunt. Architecto sunt perspiciatis repellendus voluptatem et dolorum voluptas. Sapiente molestiae in et qui.'
                      length:
                        type: integer
                        example: 982
                      turns:
                        type: integer
                        example: 44
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 8
                          name:
                            type: string
                            example: Белгородская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: lwajufzofvdwztgfzyoecuqqqqunhokxdbkkfoctwancuilyzogtbpepfzywebyyeyfleekxnytbe
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: enim
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 5
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 2
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 12
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 16
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 57
                    name: 'Environmental Engineering Technician'
                    address: "904 Glover Fields\nWest Arthurville, CA 78038"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Voluptate cum ipsa occaecati inventore nisi dolore. Aperiam ut tempora sit rem sed vel. Porro consequatur dolorem vel occaecati exercitationem sed aut. Minima quam aliquam maxime sed. Voluptatem repellat nisi et est qui. Est at nostrum minima reprehenderit. Ut dicta aut saepe doloribus ipsa dicta. Et ullam et cumque dignissimos omnis libero minima. Libero id cupiditate molestiae illum aliquid. A ducimus quam nostrum iusto rerum magni. Non et rerum nihil dolores et qui voluptatum rerum.'
                    length: 840
                    turns: 90
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 83
                      name: 'Саха /Якутия/'
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 57
                      name:
                        type: string
                        example: 'Environmental Engineering Technician'
                      address:
                        type: string
                        example: "904 Glover Fields\nWest Arthurville, CA 78038"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Voluptate cum ipsa occaecati inventore nisi dolore. Aperiam ut tempora sit rem sed vel. Porro consequatur dolorem vel occaecati exercitationem sed aut. Minima quam aliquam maxime sed. Voluptatem repellat nisi et est qui. Est at nostrum minima reprehenderit. Ut dicta aut saepe doloribus ipsa dicta. Et ullam et cumque dignissimos omnis libero minima. Libero id cupiditate molestiae illum aliquid. A ducimus quam nostrum iusto rerum magni. Non et rerum nihil dolores et qui voluptatum rerum.'
                      length:
                        type: integer
                        example: 840
                      turns:
                        type: integer
                        example: 90
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 83
                          name:
                            type: string
                            example: 'Саха /Якутия/'
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.update.success
                  track:
                    id: 59
                    name: 'Camera Operator'
                    address: "24376 Lynn Hills Apt. 603\nAriannaburgh, MS 68151-7890"
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Velit perferendis corrupti vitae reprehenderit sint. Et inventore accusamus enim delectus non nihil. Assumenda id rerum mollitia ducimus voluptatibus quas quaerat. Ut nisi qui placeat amet rerum aut aliquam. Cumque quos ex fuga id est fugit aperiam id. Voluptas iste enim ea aut perspiciatis maxime eius. Molestiae facilis aut rerum eveniet similique facere rerum.'
                    length: 873
                    turns: 90
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 47
                      name: Новгородская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.update.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 59
                      name:
                        type: string
                        example: 'Camera Operator'
                      address:
                        type: string
                        example: "24376 Lynn Hills Apt. 603\nAriannaburgh, MS 68151-7890"
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Velit perferendis corrupti vitae reprehenderit sint. Et inventore accusamus enim delectus non nihil. Assumenda id rerum mollitia ducimus voluptatibus quas quaerat. Ut nisi qui placeat amet rerum aut aliquam. Cumque quos ex fuga id est fugit aperiam id. Voluptas iste enim ea aut perspiciatis maxime eius. Molestiae facilis aut rerum eveniet similique facere rerum.'
                      length:
                        type: integer
                        example: 873
                      turns:
                        type: integer
                        example: 90
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 47
                          name:
                            type: string
                            example: Новгородская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_allowed
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_allowed
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: xycliraerlpoarpobytypbpmscxzrxzfofrrqfduutouqcqhwtgexhvgiiixew
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: false
                latitude:
                  type: number
                  description: 'Must be between -87 and 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Must be between -180 and 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Must be an image.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - laborum
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 6
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: animi
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 8
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 16
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно удалён.'
                  track:
                    id: 105
                    name: Жокей
                    address: '307216, Кировская область, город Щёлково, ул. Ленина, 16'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Velit quaerat iste qui enim ex voluptas laudantium. Ab et autem sunt doloremque debitis. Incidunt quibusdam quo qui consequatur ut. Saepe quaerat quos eveniet dolor nesciunt qui amet quam. Optio neque provident repellat omnis qui aut. Qui commodi qui omnis consequatur. Error nesciunt voluptas ducimus qui iusto ipsa dolorem. Voluptatem provident eos voluptatem.'
                    length: 100
                    turns: 30
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 25
                      name: Камчатский
                      type: край
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно удалён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 105
                      name:
                        type: string
                        example: Жокей
                      address:
                        type: string
                        example: '307216, Кировская область, город Щёлково, ул. Ленина, 16'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Velit quaerat iste qui enim ex voluptas laudantium. Ab et autem sunt doloremque debitis. Incidunt quibusdam quo qui consequatur ut. Saepe quaerat quos eveniet dolor nesciunt qui amet quam. Optio neque provident repellat omnis qui aut. Qui commodi qui omnis consequatur. Error nesciunt voluptas ducimus qui iusto ipsa dolorem. Voluptatem provident eos voluptatem.'
                      length:
                        type: integer
                        example: 100
                      turns:
                        type: integer
                        example: 30
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 25
                          name:
                            type: string
                            example: Камчатский
                          type:
                            type: string
                            example: край
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 7
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    id: 184
                    name: 'Josefina Kassulke'
                    email: fritsch.meagan@example.net
                    email_verified_at: '2025-03-19T07:13:35.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 184
                      name:
                        type: string
                        example: 'Josefina Kassulke'
                      email:
                        type: string
                        example: fritsch.meagan@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-19T07:13:35.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.delete.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.delete.success
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 185
                    name: 'Margarett Terry'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 185
                      name:
                        type: string
                        example: 'Margarett Terry'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.not_found
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 186
                    name: 'Adrian Stokes DVM'
                    email: claudine06@example.net
                    email_verified_at: '2025-03-19T07:13:35.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 186
                      name:
                        type: string
                        example: 'Adrian Stokes DVM'
                      email:
                        type: string
                        example: claudine06@example.net
                      email_verified_at:
                        type: string
                        example: '2025-03-19T07:13:35.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
                  example: mckxtjdchfywykhifsioxie
                  nullable: true
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: sschaden@example.com
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Must be an image.'
                  nullable: true
                number:
                  type: string
                  description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
                  example: tansevovf
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 187
                      name: 'Alphonso Ratke DVM'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: messages.user.commision_get.success
                    users:
                      id: 188
                      name: 'Evan McDermott'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: true
                limit:
                  type: integer
                  description: 'Must not be greater than 50.'
                  example: 3
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Must be at least 999. Must not be greater than 10000.'
                  example: 21
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
