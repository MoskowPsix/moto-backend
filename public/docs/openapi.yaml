openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 5|r9bxG5M9pxXCEDzmxQMKoAhbVDJnEX9SvoH346wnbb399638
                  token_type: Bearer
                  user:
                    name: 'Павел Сергеевич Филатов'
                    email: istrelkova@example.com
                    email_verified_at: '2025-01-20T13:32:32.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 5|r9bxG5M9pxXCEDzmxQMKoAhbVDJnEX9SvoH346wnbb399638
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Павел Сергеевич Филатов'
                      email:
                        type: string
                        example: istrelkova@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-20T13:32:32.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'validation.email The <code>email</code> of an existing record in the users table. validation.min.'
                  example: hadley.kuhic@example.org
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: "k'Ng}<_Bvu1DuAeH"
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 6|cRrvm4EAWInEtoFxwJblLqMOALEmHUJTdN7YRapi5b21e0bb
                  token_type: Bearer
                  user:
                    name: 'Галкина Регина Романовна'
                    email: visnykova.dominika@example.net
                    email_verified_at: '2025-01-20T13:32:32.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 6|cRrvm4EAWInEtoFxwJblLqMOALEmHUJTdN7YRapi5b21e0bb
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Галкина Регина Романовна'
                      email:
                        type: string
                        example: visnykova.dominika@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-20T13:32:32.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'validation.min validation.max.'
                  example: ndgqqpxnjxcywpstyzjzlqbaq
                  nullable: false
                email:
                  type: string
                  description: validation.email.
                  example: zmohr@example.org
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: '"1\"YtXe]IU1'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: nemo
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    name: 'Власова Раиса Александровна'
                    email: marat73@example.com
                    email_verified_at: '2025-01-20T13:32:33.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Власова Раиса Александровна'
                      email:
                        type: string
                        example: marat73@example.com
                      email_verified_at:
                        type: string
                        example: '2025-01-20T13:32:33.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 5
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 11
                      name: Экономист
                      address: '087510, Калужская область, город Видное, бульвар Бухарестская, 11'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Illum et deserunt in id est sint vel. Cupiditate voluptatem maxime in sint aperiam non libero fugiat. At esse earum nemo. Aliquid consequatur et cupiditate ipsum debitis repudiandae eos. Voluptatem blanditiis qui qui iste dolores rerum. Veniam fugiat quod atque. Est voluptates similique ducimus deleniti ab perspiciatis beatae. Est tempore distinctio porro voluptas officiis vero. Qui reprehenderit qui quia quia. Rem in vel odit qui similique et iste rerum.'
                      length: 946
                      turns: 20
                      free: true
                      is_work: false
                      spec: null
                      user:
                        name: root
                        email: bolshe.kivi@gmail.com
                        email_verified_at: '2025-01-20T12:39:32.000000Z'
                        avatar: users/MRkSzDvnFidCVmY0gcnK5MVwFW2aomZhffGb0LM7.png
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 12
                      name: Пианист
                      address: '942825, Кемеровская область, город Клин, пер. Сталина, 28'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Voluptas modi possimus dolorum porro. Blanditiis reiciendis pariatur et natus. Velit illum alias id atque nisi quaerat labore. Commodi temporibus quos aut nisi ex velit. Molestiae quam ipsum ipsa veniam voluptatibus. Debitis impedit corporis aliquam nihil. Assumenda quis eligendi dolore quia ut. Quis aut rerum accusantium dolor rem repudiandae. Et nam qui ratione eaque ex. Accusamus ipsam cumque aliquam dolores nemo id. Reiciendis reprehenderit harum aut ipsam vel non at.'
                      length: 956
                      turns: 57
                      free: true
                      is_work: true
                      spec: null
                      user:
                        name: root
                        email: bolshe.kivi@gmail.com
                        email_verified_at: '2025-01-20T12:39:32.000000Z'
                        avatar: users/MRkSzDvnFidCVmY0gcnK5MVwFW2aomZhffGb0LM7.png
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                limit:
                  type: integer
                  description: validation.max.
                  example: 7
                  nullable: false
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 14
                    name: Писатель
                    address: '590647, Читинская область, город Солнечногорск, пл. Домодедовская, 57'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Velit consequuntur praesentium recusandae. Facilis sit maiores enim ea est id est reprehenderit. Suscipit enim dolor tempora molestiae aut dolorem. Beatae facilis assumenda perferendis ducimus. Aperiam officia pariatur minus sit dolore unde. Voluptas reprehenderit explicabo aperiam sint in esse. Nisi quia illo excepturi quo aliquam itaque modi repudiandae. Voluptatem delectus distinctio adipisci blanditiis voluptatum voluptatem iure. Vel odit neque qui possimus unde veniam.'
                    length: 572
                    turns: 26
                    free: false
                    is_work: false
                    spec: null
                    user:
                      name: Fatboy@fat.ru
                      email: Fatboy@fat.ru
                      email_verified_at: null
                      avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: Писатель
                      address:
                        type: string
                        example: '590647, Читинская область, город Солнечногорск, пл. Домодедовская, 57'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Velit consequuntur praesentium recusandae. Facilis sit maiores enim ea est id est reprehenderit. Suscipit enim dolor tempora molestiae aut dolorem. Beatae facilis assumenda perferendis ducimus. Aperiam officia pariatur minus sit dolore unde. Voluptas reprehenderit explicabo aperiam sint in esse. Nisi quia illo excepturi quo aliquam itaque modi repudiandae. Voluptatem delectus distinctio adipisci blanditiis voluptatum voluptatem iure. Vel odit neque qui possimus unde veniam.'
                      length:
                        type: integer
                        example: 572
                      turns:
                        type: integer
                        example: 26
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      user:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Fatboy@fat.ru
                          email:
                            type: string
                            example: Fatboy@fat.ru
                          email_verified_at:
                            type: string
                            example: null
                          avatar:
                            type: string
                            example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: validation.min.
                  example: uzhgrxqbpyhjimxxpmodwrtftfvmwlkqfremywakhicmynz
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: minima
                  nullable: false
                latitude:
                  type: number
                  description: validation.between.
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: validation.between.
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'validation.image validation.max.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 10
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                spec:
                  type: string
                  description: validation.json.
                  example: '["omnis","aut"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 13
                    name: Художник
                    address: '478773, Ульяновская область, город Мытищи, бульвар Будапештсткая, 79'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Aut non animi a voluptatibus optio. Beatae aut eveniet quo quam possimus. Aperiam officiis et mollitia in soluta laudantium qui. Incidunt tempora vero qui consequatur ut velit. Tempore natus debitis est ipsum et. Consequatur et sequi placeat esse. Ut alias ut enim nihil ipsa reprehenderit a. Rerum vero mollitia voluptas. Dolore quia dolore quidem facilis quam. Amet sequi dolorum voluptates quasi fugit quis. Nihil et ea tempora repellendus ut hic.'
                    length: 261
                    turns: 93
                    free: false
                    is_work: true
                    spec: null
                    user:
                      name: root
                      email: bolshe.kivi@gmail.com
                      email_verified_at: '2025-01-20T12:39:32.000000Z'
                      avatar: users/MRkSzDvnFidCVmY0gcnK5MVwFW2aomZhffGb0LM7.png
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: Художник
                      address:
                        type: string
                        example: '478773, Ульяновская область, город Мытищи, бульвар Будапештсткая, 79'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Aut non animi a voluptatibus optio. Beatae aut eveniet quo quam possimus. Aperiam officiis et mollitia in soluta laudantium qui. Incidunt tempora vero qui consequatur ut velit. Tempore natus debitis est ipsum et. Consequatur et sequi placeat esse. Ut alias ut enim nihil ipsa reprehenderit a. Rerum vero mollitia voluptas. Dolore quia dolore quidem facilis quam. Amet sequi dolorum voluptates quasi fugit quis. Nihil et ea tempora repellendus ut hic.'
                      length:
                        type: integer
                        example: 261
                      turns:
                        type: integer
                        example: 93
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      user:
                        type: object
                        properties:
                          name:
                            type: string
                            example: root
                          email:
                            type: string
                            example: bolshe.kivi@gmail.com
                          email_verified_at:
                            type: string
                            example: '2025-01-20T12:39:32.000000Z'
                          avatar:
                            type: string
                            example: users/MRkSzDvnFidCVmY0gcnK5MVwFW2aomZhffGb0LM7.png
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    name: 'Флорентина Львовна Сергеева'
                    email: nazar.muravev@example.org
                    email_verified_at: '2025-01-20T13:32:32.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Флорентина Львовна Сергеева'
                      email:
                        type: string
                        example: nazar.muravev@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-20T13:32:32.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
