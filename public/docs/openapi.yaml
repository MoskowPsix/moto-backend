openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 56|KpeH0efuJn7hYSNMHxSnIGkS2rN9N40dR4kopzjY726559f4
                  token_type: Bearer
                  user:
                    name: 'Жданова Любовь Сергеевна'
                    email: evgeniy.popov@example.org
                    roles: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 56|KpeH0efuJn7hYSNMHxSnIGkS2rN9N40dR4kopzjY726559f4
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Жданова Любовь Сергеевна'
                      email:
                        type: string
                        example: evgeniy.popov@example.org
                      roles:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'validation.email The <code>email</code> of an existing record in the users table. validation.min.'
                  example: vdonnelly@example.net
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: 'eYp`CH7e#^pDa'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 57|KxZraJJVq4Fb3r5uWenSEJQFBwvujCn7UzMWeIzn6c383aa4
                  token_type: Bearer
                  user:
                    name: 'Адриан Евгеньевич Белоусов'
                    email: rsaskova@example.net
                    roles: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 57|KxZraJJVq4Fb3r5uWenSEJQFBwvujCn7UzMWeIzn6c383aa4
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Адриан Евгеньевич Белоусов'
                      email:
                        type: string
                        example: rsaskova@example.net
                      roles:
                        type: array
                        example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'validation.min validation.max.'
                  example: trzmnwhzdknwtrfxa
                  nullable: false
                email:
                  type: string
                  description: validation.email.
                  example: iharber@example.org
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: 'e\X^4LU_l64['
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: sequi
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    name: 'Ярослав Владимирович Сысоев'
                    email: seliverstov.prokor@example.org
                    roles: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Ярослав Владимирович Сысоев'
                      email:
                        type: string
                        example: seliverstov.prokor@example.org
                      roles:
                        type: array
                        example: []
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 5
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: null
                      name: 'Логинов Дан Алексеевич'
                      address: '381471, Ярославская область, город Сергиев Посад, пер. Бухарестская, 53'
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: null
                      name: 'Казаков Владислав Алексеевич'
                      address: '252836, Калужская область, город Шатура, въезд Ленина, 35'
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                limit:
                  type: integer
                  description: validation.max.
                  example: 25
                  nullable: false
      security: []
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    name: 'Владимир Сергеевич Назаров'
                    email: veronika.novikov@example.net
                    roles: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Владимир Сергеевич Назаров'
                      email:
                        type: string
                        example: veronika.novikov@example.net
                      roles:
                        type: array
                        example: []
      tags:
        - User
tags:
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
