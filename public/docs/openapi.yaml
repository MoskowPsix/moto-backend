openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Запись на гонку успешно создана.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Запись на гонку успешно создана.'
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Запрашиваемый ресурс не найден.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Запрашиваемый ресурс не найден.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: voluptatibus
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: culpa
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: ea
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: sequi
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: reiciendis
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 22
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: sit
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: id
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quasi
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: et
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: amet
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 5
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Получить участников в гонке'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 13
                      name: 'Лариса Максимовна Кондратьева'
                      email: antonina.trofimov@example.net
                      email_verified_at: '2025-05-27T19:14:37.000000Z'
                      created_at: '2025-05-27T19:14:37.000000Z'
                      updated_at: '2025-05-27T19:14:37.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 14
                      name: 'Овчинников Тимофей Дмитриевич'
                      email: ssarapov@example.com
                      email_verified_at: '2025-05-27T19:14:37.000000Z'
                      created_at: '2025-05-27T19:14:37.000000Z'
                      updated_at: '2025-05-27T19:14:37.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 3
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 15
                    name: 'Артур Иванович Самсонов'
                    email: zanna.golubev@example.com
                    email_verified_at: '2025-05-27T19:14:37.000000Z'
                    created_at: '2025-05-27T19:14:37.000000Z'
                    updated_at: '2025-05-27T19:14:37.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Артур Иванович Самсонов'
                      email:
                        type: string
                        example: zanna.golubev@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-27T19:14:37.000000Z'
                      created_at:
                        type: string
                        example: '2025-05-27T19:14:37.000000Z'
                      updated_at:
                        type: string
                        example: '2025-05-27T19:14:37.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 1
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/export':
    get:
      summary: Export
      operationId: export
      description: 'Экспорт результатов'
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{raceId}/results/import':
    post:
      summary: Import
      operationId: import
      description: 'Импорт результатов'
      parameters: []
      responses: {  }
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: raceId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/checked':
    post:
      summary: checkedForCommission
      operationId: checkedForCommission
      description: 'Подтверждение записи участника гонки.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Заявка отменена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Заявка отменена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                checked:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - checked
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: 9
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно создана.'
                  attendance:
                    id: 2
                    name: 'Витольд Андреевич Уваров'
                    desc: 'Et ducimus soluta sint dolor totam sit. Quia occaecati et dolores mollitia voluptate. Autem eum sit ea laboriosam omnis porro.'
                    price: '6.30555e+06'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно создана.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Витольд Андреевич Уваров'
                      desc:
                        type: string
                        example: 'Et ducimus soluta sint dolor totam sit. Quia occaecati et dolores mollitia voluptate. Autem eum sit ea laboriosam omnis porro.'
                      price:
                        type: string
                        example: '6.30555e+06'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: rpfezalwzsqhxwatw
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: nx
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 3.0
                  nullable: false
                tax:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: rhetuxazybkm
                  nullable: false
                usn_income_outcome:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vpzlwopurcicdctyuruensv
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 17
                  nullable: false
              required:
                - name
                - desc
                - price
                - tax
                - usn_income_outcome
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно изменена.'
                  attendance:
                    id: 3
                    name: 'Аксёнов Прохор Владимирович'
                    desc: 'Quia aut consequuntur vitae omnis ipsam explicabo. Labore quaerat quas autem voluptatibus vel quidem. Corrupti omnis consequatur et.'
                    price: '467'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно изменена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Аксёнов Прохор Владимирович'
                      desc:
                        type: string
                        example: 'Quia aut consequuntur vitae omnis ipsam explicabo. Labore quaerat quas autem voluptatibus vel quidem. Corrupti omnis consequatur et.'
                      price:
                        type: string
                        example: '467'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: dxebwxl
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: uylkm
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 70966.1
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 20
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно удалена.'
                  attendance:
                    id: 4
                    name: 'Инга Максимовна Калашникова'
                    desc: 'Molestiae voluptatum consequatur expedita ullam. Aut error facilis omnis numquam possimus veniam provident quaerat. Omnis ut aut pariatur nostrum facilis.'
                    price: '8.666119e+08'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно удалена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Инга Максимовна Калашникова'
                      desc:
                        type: string
                        example: 'Molestiae voluptatum consequatur expedita ullam. Aut error facilis omnis numquam possimus veniam provident quaerat. Omnis ut aut pariatur nostrum facilis.'
                      price:
                        type: string
                        example: '8.666119e+08'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 1
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 1
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались.'
                  access_token: 4|aTaKqr4K5Hn1v9fqtMRktfoQBzDH0VgumSVIRiLZ9163f51e
                  token_type: Bearer
                  user:
                    id: 3
                    name: 'Вячеслав Фёдорович Абрамов'
                    email: alekseeva.pavel@example.org
                    email_verified_at: '2025-05-27T19:14:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались.'
                  access_token:
                    type: string
                    example: 4|aTaKqr4K5Hn1v9fqtMRktfoQBzDH0VgumSVIRiLZ9163f51e
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Вячеслав Фёдорович Абрамов'
                      email:
                        type: string
                        example: alekseeva.pavel@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-27T19:14:36.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Такая почта не существует.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Такая почта не существует.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. Количество символов в поле value должно быть не меньше 3.'
                  example: lelia.jones@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: "'kzPb}ybG{5SS^"
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы.'
                  access_token: 5|xZLxj3IsZJJ1sWwv2Cy6yOW7dCNxOlJHG69X7j6Mb2083f70
                  token_type: Bearer
                  user:
                    id: 4
                    name: 'Федосеев Гавриил Львович'
                    email: rada.pestova@example.com
                    email_verified_at: '2025-05-27T19:14:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы.'
                  access_token:
                    type: string
                    example: 5|xZLxj3IsZJJ1sWwv2Cy6yOW7dCNxOlJHG69X7j6Mb2083f70
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Федосеев Гавриил Львович'
                      email:
                        type: string
                        example: rada.pestova@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-27T19:14:36.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Такая почта не существует.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Такая почта не существует.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: fdmvzcyoouydee
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: myles.deckow@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '~\OT}l6hA0'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: et
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: zhobrowi
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: ejtn
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались.'
                  access_token: 6|7Pg3wmO7fosfnoDU4JLXceOF6bSmO5iPk1zqn01V322cad14
                  token_type: Bearer
                  user:
                    id: 6
                    name: 'Лев Максимович Андреев'
                    email: gavriil.doronin@example.org
                    email_verified_at: '2025-05-27T19:14:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались.'
                  access_token:
                    type: string
                    example: 6|7Pg3wmO7fosfnoDU4JLXceOF6bSmO5iPk1zqn01V322cad14
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 6
                      name:
                        type: string
                        example: 'Лев Максимович Андреев'
                      email:
                        type: string
                        example: gavriil.doronin@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-27T19:14:36.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 4.'
                  example: wpqx
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: tdpyrrmi
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: culpa
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: rerum
                  nullable: false
              required:
                - key
                - phone
      security: []
  '/api/phone/{userId}/delete':
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление телефона'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Телефон успешно удалён'
                  phone:
                    number: null
                    last_num: null
                    number_verified_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Телефон успешно удалён'
                  phone:
                    type: object
                    properties:
                      number:
                        type: string
                        example: null
                      last_num:
                        type: string
                        example: null
                      number_verified_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: totam
        required: true
        schema:
          type: string
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Команда успешно получена.'
                    commands:
                      id: 11
                      name: 'Степанов Юлий Романович'
                      full_name: 'Даниил Львович Давыдов'
                      coach: 'Петров Вадим Борисович'
                      city: Мытищи
                      avatar: null
                  -
                    status: success
                    message: 'Команда успешно получена.'
                    commands:
                      id: 12
                      name: 'Виталий Андреевич Галкин'
                      full_name: 'Брагина Инесса Максимовна'
                      coach: 'Жуков Евгений Романович'
                      city: Мытищи
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 9
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: doloribus
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 6
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: expedita
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: accusantium
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно создана.'
                  command:
                    id: 14
                    name: 'Дарья Львовна Меркушева'
                    full_name: 'Блинова Софья Фёдоровна'
                    coach: 'Карпова Лилия Андреевна'
                    city: Истра
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно создана.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: 'Дарья Львовна Меркушева'
                      full_name:
                        type: string
                        example: 'Блинова Софья Фёдоровна'
                      coach:
                        type: string
                        example: 'Карпова Лилия Андреевна'
                      city:
                        type: string
                        example: Истра
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: pybr
                  nullable: false
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: qujisxnfvaagekcykyrtuwn
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: knvyfbezafcktuvq
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 1
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ruozupfs
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда по идентификатору получена успешно.'
                  command:
                    id: 13
                    name: 'Глеб Александрович Рябов'
                    full_name: 'Альбина Фёдоровна Котова'
                    coach: 'Спартак Алексеевич Тарасов'
                    city: Одинцово
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда по идентификатору получена успешно.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: 'Глеб Александрович Рябов'
                      full_name:
                        type: string
                        example: 'Альбина Фёдоровна Котова'
                      coach:
                        type: string
                        example: 'Спартак Алексеевич Тарасов'
                      city:
                        type: string
                        example: Одинцово
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 6
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 5
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: quia
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно изменена.'
                  command:
                    id: 15
                    name: 'Горшков Аким Максимович'
                    full_name: 'Григорий Дмитриевич Бирюков'
                    coach: 'Галина Борисовна Куликова'
                    city: Люберцы
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно изменена.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Горшков Аким Максимович'
                      full_name:
                        type: string
                        example: 'Григорий Дмитриевич Бирюков'
                      coach:
                        type: string
                        example: 'Галина Борисовна Куликова'
                      city:
                        type: string
                        example: Люберцы
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: a
                  nullable: true
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: gecomipj
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: tntbhfsvkpuwovpiq
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: xchuvalepevcgpflwbufxctw
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно удаленаю'
                  command:
                    id: 16
                    name: 'Селезнёва Эмилия Алексеевна'
                    full_name: 'Красильников Николай Дмитриевич'
                    coach: 'Валерия Романовна Гурьева'
                    city: Люберцы
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно удаленаю'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Селезнёва Эмилия Алексеевна'
                      full_name:
                        type: string
                        example: 'Красильников Николай Дмитриевич'
                      coach:
                        type: string
                        example: 'Валерия Романовна Гурьева'
                      city:
                        type: string
                        example: Люберцы
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Тренер успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Тренер успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: molestiae
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Участник удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Участник удалён.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 16
                    name: 'Макаров Гарри Львович'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Макаров Гарри Львович'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 25
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 13
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 17
                    name: 'Суханова Ярослава Максимовна'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 17
                      name:
                        type: string
                        example: 'Суханова Ярослава Максимовна'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: incidunt
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 25
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 18
                    name: 'Клементина Алексеевна Мамонтова'
                    email: danila.ilin@example.org
                    email_verified_at: '2025-05-27T19:14:38.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 18
                      name:
                        type: string
                        example: 'Клементина Алексеевна Мамонтова'
                      email:
                        type: string
                        example: danila.ilin@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-27T19:14:38.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 14
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 8
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок по идентификатору получен успешно.'
                  cup:
                    id: 1
                    name: 'София Владимировна Мишина'
                    year: 2016
                    stages: '9'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок по идентификатору получен успешно.'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'София Владимировна Мишина'
                      year:
                        type: integer
                        example: 2016
                      stages:
                        type: string
                        example: '9'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 18
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок успешно обновлён'
                  cup:
                    id: 4
                    name: 'Трофимова Клементина Сергеевна'
                    year: 1985
                    stages: '10'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок успешно обновлён'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: 'Трофимова Клементина Сергеевна'
                      year:
                        type: integer
                        example: 1985
                      stages:
                        type: string
                        example: '10'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: gk
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                stages:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: knmddyhedoltfimi
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 2
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 1
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: illum
        required: true
        schema:
          type: string
  '/api/cups/race/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение кубков по id гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок по идентификатору гонки получен успешно.'
                  cup:
                    id: 2
                    name: 'Дмитриева Изольда Сергеевна'
                    year: 1991
                    stages: '7'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок по идентификатору гонки получен успешно.'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      name:
                        type: string
                        example: 'Дмитриева Изольда Сергеевна'
                      year:
                        type: integer
                        example: 1991
                      stages:
                        type: string
                        example: '7'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                raceId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the race table.'
                  example: 9
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок успешно создан'
                  cup:
                    id: 3
                    name: 'Игнатьева Ольга Львовна'
                    year: 1985
                    stages: '5'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок успешно создан'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 3
                      name:
                        type: string
                        example: 'Игнатьева Ольга Львовна'
                      year:
                        type: integer
                        example: 1985
                      stages:
                        type: string
                        example: '5'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ftseuwh
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                stages:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: u
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
              required:
                - name
                - year
  /api/degree:
    get:
      summary: get
      operationId: get
      description: 'Получить все уровни.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Уровни успешно получены.'
                    degree:
                      id: null
                      name: null
                      desc: null
                  -
                    status: success
                    message: 'Уровни успешно получены.'
                    degree:
                      id: null
                      name: null
                      desc: null
      tags:
        - Degree
      security: []
  '/api/degree/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение уровня по id.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Уровень по id успешно получен.'
                  degree:
                    id: null
                    name: null
                    desc: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Уровень по id успешно получен.'
                  degree:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Degree
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the degree.'
        example: 10
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 4
                    name: file_68360f1d7467d
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 4
                      name:
                        type: string
                        example: file_68360f1d7467d
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: polis
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'http://sauer.net/id-quia-cupiditate-qui-eos-molestiae'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: corporis
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: consectetur
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: quo
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 5
                      name: file_68360f1d78368
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 6
                      name: file_68360f1d7a735
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 19
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 11
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 7
                    name: file_68360f1d7fda4
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 7
                      name:
                        type: string
                        example: file_68360f1d7fda4
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно изменён.'
                  document:
                    id: 8
                    name: file_68360f1d84dde
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно изменён.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 8
                      name:
                        type: string
                        example: file_68360f1d84dde
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    post:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ проверен и изменён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ проверен и изменён.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                checked:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                comment:
                  type: string
                  description: ''
                  example: est
                  nullable: true
              required:
                - checked
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Транзакция успешно создана.'
                  payment_link: null
                  transaction:
                    id: 1
                    status: null
                    date: null
                    user: null
                    attendances: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Транзакция успешно создана.'
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
                      attendances:
                        type: array
                        example: []
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 9
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:36'
                  nullable: true
              required:
                - attendanceIds
      security: []
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.transaction.get_users.success
                    transactions:
                      id: 3
                      status: null
                      date: null
                      user: null
                      attendances: []
                  -
                    status: success
                    message: messages.transaction.get_users.success
                    transactions:
                      id: 4
                      status: null
                      date: null
                      user: null
                      attendances: []
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1.'
                  example: 77
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 50.'
                  example: 13
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: desc
                  nullable: true
                  enum:
                    - asc
                    - desc
                sortField:
                  type: string
                  description: ''
                  example: amount
                  nullable: true
                  enum:
                    - created_at
                    - amount
                    - type
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  status: null
                  date: null
                  user: null
                  attendances: []
                properties:
                  id:
                    type: integer
                    example: 2
                  status:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
                  attendances:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/transactions/{id}':
    get:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.transaction.get_for_id.success
                  transaction:
                    id: 5
                    status: null
                    date: null
                    user: null
                    attendances: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.transaction.get_for_id.success
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 5
                      status:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
                      attendances:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: 17
        required: true
        schema:
          type: integer
  /api/districts:
    get:
      summary: ''
      operationId: getApiDistricts
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.district.get.success
                  districts: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.district.get.success
                  districts:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка удалена из избранного.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка удалена из избранного.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Класс гонки получен успешно.'
                    grades:
                      id: 11
                      name: 'Нелли Ивановна Логинова'
                      description: 'Eos similique at praesentium et esse qui et. At velit accusamus esse. Sint quibusdam quis veritatis impedit nisi.'
                  -
                    status: success
                    message: 'Класс гонки получен успешно.'
                    grades:
                      id: 12
                      name: 'Вячеслав Максимович Горбачёв'
                      description: 'Enim accusamus totam itaque mollitia illo. Exercitationem reiciendis ducimus ad. Rerum ipsa labore eum voluptatem ut voluptatibus.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 6
                  nullable: true
                gradeNotParent:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно создан.'
                  grade:
                    id: 14
                    name: 'Гаврилова Жанна Андреевна'
                    description: 'Natus et sit modi ullam odio. Amet ut ut quis optio corporis et est. Voluptas beatae omnis voluptas aperiam sint.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно создан.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: 'Гаврилова Жанна Андреевна'
                      description:
                        type: string
                        example: 'Natus et sit modi ullam odio. Amet ut ut quis optio corporis et est. Voluptas beatae omnis voluptas aperiam sint.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: nmbpdnjlnykjwpx
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Sit eius est iste rem sint aut.'
                  nullable: true
              required:
                - name
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки по идентификатору получен успешно.'
                  grade:
                    id: 13
                    name: 'Марат Дмитриевич Блинов'
                    description: 'Voluptate magnam dolore quod iusto est consequatur. Occaecati aut soluta amet odio aut. Sequi atque illo ea possimus. Dolores ut necessitatibus earum nihil.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки по идентификатору получен успешно.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: 'Марат Дмитриевич Блинов'
                      description:
                        type: string
                        example: 'Voluptate magnam dolore quod iusto est consequatur. Occaecati aut soluta amet odio aut. Sequi atque illo ea possimus. Dolores ut necessitatibus earum nihil.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 2
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно изменён.'
                  grade:
                    id: 15
                    name: 'Тимофеев Василий Алексеевич'
                    description: 'Facilis et est eos unde aut voluptatum perferendis. Tenetur quod ut et atque aspernatur delectus aut. Minima et quia vel delectus. Dolor pariatur molestiae provident facere nam omnis.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно изменён.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Тимофеев Василий Алексеевич'
                      description:
                        type: string
                        example: 'Facilis et est eos unde aut voluptatum perferendis. Tenetur quod ut et atque aspernatur delectus aut. Minima et quia vel delectus. Dolor pariatur molestiae provident facere nam omnis.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: woonpxoawergfzcjf
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Dolorem perspiciatis quaerat voluptatem quisquam sit tempora.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 18
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 1
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 4
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ex
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: porro
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Dr.
                    surname: Prof.
                    patronymic: Ms.
                    date_of_birth: '1987-11-26'
                    city: Люберцы
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(35222) 64-0667'
                    start_number: '867'
                    group: 'Финансовый советник'
                    rank_number: '100000'
                    rank: Детектив
                    community: 'ОАО ЭлектроМясТрансМашина'
                    coach: 'Афанасий Дмитриевич Потапов'
                    moto_stamp: Miss
                    engine: Prof.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '1987-11-26'
                      city:
                        type: string
                        example: Люберцы
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(35222) 64-0667'
                      start_number:
                        type: string
                        example: '867'
                      group:
                        type: string
                        example: 'Финансовый советник'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Детектив
                      community:
                        type: string
                        example: 'ОАО ЭлектроМясТрансМашина'
                      coach:
                        type: string
                        example: 'Афанасий Дмитриевич Потапов'
                      moto_stamp:
                        type: string
                        example: Miss
                      engine:
                        type: string
                        example: Prof.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: deserunt
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: dicta
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: eius
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: at
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 11
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: dolore
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: magnam
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: sapiente
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: corporis
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 14
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 11
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Miss
                    surname: Mr.
                    patronymic: Miss
                    date_of_birth: '2013-01-21'
                    city: Истра
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: '(812) 259-45-49'
                    start_number: '779'
                    group: Садовник
                    rank_number: '99999'
                    rank: Автоинструктор
                    community: 'ЗАО ТекстильУралITМашина'
                    coach: 'Стрелкова Изабелла Ивановна'
                    moto_stamp: Mr.
                    engine: Mr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Miss
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: '2013-01-21'
                      city:
                        type: string
                        example: Истра
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(812) 259-45-49'
                      start_number:
                        type: string
                        example: '779'
                      group:
                        type: string
                        example: Садовник
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Автоинструктор
                      community:
                        type: string
                        example: 'ЗАО ТекстильУралITМашина'
                      coach:
                        type: string
                        example: 'Стрелкова Изабелла Ивановна'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Mr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: facere
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: distinctio
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: ipsum
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: nemo
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: ad
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: facere
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: id
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: officiis
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: laborum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: hic
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: impedit
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 15
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 3
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 11
                      name: 'Соловьёва Федосья Алексеевна'
                      desc: 'Distinctio sunt autem aut suscipit ea. Tempore occaecati enim animi dignissimos sed quasi dolorum quibusdam. Iste voluptate voluptatem quae atque sunt alias.'
                      is_work: true
                      date_start: '2025-05-27T22:06:37.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 12
                      name: 'Стрелкова Валерия Александровна'
                      desc: 'Commodi blanditiis eligendi quidem facilis eos. Voluptatem eos ipsum praesentium possimus enim quae et. Qui maxime dolorem dicta neque ipsa sapiente ex nostrum.'
                      is_work: false
                      date_start: '2025-05-27T16:03:21.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 1
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 9
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 16
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 17
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                degreeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the degrees table.'
                  example:
                    - 12
                  items:
                    type: integer
              required:
                - degreeIds
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 14
                    name: 'Русакова Нелли Сергеевна'
                    desc: 'Ipsum eaque perferendis aut quae optio. Sed ipsa praesentium ab rem hic quia odit. Eligendi nobis magnam est minima aut modi quia. Ipsam consequatur sint neque fugiat consequatur.'
                    is_work: false
                    date_start: '2025-05-27T15:52:23.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: 'Русакова Нелли Сергеевна'
                      desc:
                        type: string
                        example: 'Ipsum eaque perferendis aut quae optio. Sed ipsa praesentium ab rem hic quia odit. Eligendi nobis magnam est minima aut modi quia. Ipsam consequatur sint neque fugiat consequatur.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-27T15:52:23.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: ptzenvc
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: cum
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 16
                  nullable: true
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 11
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: aut
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 10
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 18
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 13
                    name: 'Степан Дмитриевич Ларионов'
                    desc: 'Ducimus doloremque placeat quae vel dolorum. Animi commodi dolore repudiandae rerum omnis nihil blanditiis in. Magnam aliquam et omnis voluptate.'
                    is_work: true
                    date_start: '2025-05-27T01:15:51.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: 'Степан Дмитриевич Ларионов'
                      desc:
                        type: string
                        example: 'Ducimus doloremque placeat quae vel dolorum. Animi commodi dolore repudiandae rerum omnis nihil blanditiis in. Magnam aliquam et omnis voluptate.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-27T01:15:51.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 1
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 2
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно удалена.'
                  race:
                    id: 18
                    name: 'Оксана Александровна Абрамова'
                    desc: 'Sint voluptatum delectus vitae aut accusantium sequi dicta repellat. Ab exercitationem dicta sunt enim consectetur quia. Praesentium cum alias velit id omnis.'
                    is_work: false
                    date_start: '2025-05-27T06:20:56.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно удалена.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 18
                      name:
                        type: string
                        example: 'Оксана Александровна Абрамова'
                      desc:
                        type: string
                        example: 'Sint voluptatum delectus vitae aut accusantium sequi dicta repellat. Ab exercitationem dicta sunt enim consectetur quia. Praesentium cum alias velit id omnis.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-27T06:20:56.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 15
                    name: 'Оксана Сергеевна Кузнецова'
                    desc: 'Neque quia voluptates veritatis voluptas cumque modi harum. Commodi distinctio atque vero laudantium numquam sint corrupti. Et iusto ab officiis non tempora voluptatem sit.'
                    is_work: false
                    date_start: '2025-05-27T11:18:49.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: 'Оксана Сергеевна Кузнецова'
                      desc:
                        type: string
                        example: 'Neque quia voluptates veritatis voluptas cumque modi harum. Commodi distinctio atque vero laudantium numquam sint corrupti. Et iusto ab officiis non tempora voluptatem sit.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-05-27T11:18:49.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: kmcgmzrxuegllwjfj
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-05-27T19:14:37'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 18
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - unde
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 1
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 16
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 12
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Состояние гонки успешно изменено на рабочее.'
                  race:
                    id: 16
                    name: 'Щербаков Мирослав Алексеевич'
                    desc: 'Sit quaerat consequuntur incidunt deserunt doloribus. Sapiente molestiae odit quod dolores possimus laudantium repellendus. Incidunt ut quos error est.'
                    is_work: true
                    date_start: '2025-05-27T23:13:08.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Состояние гонки успешно изменено на рабочее.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Щербаков Мирослав Алексеевич'
                      desc:
                        type: string
                        example: 'Sit quaerat consequuntur incidunt deserunt doloribus. Sapiente molestiae odit quod dolores possimus laudantium repellendus. Incidunt ut quos error est.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-27T23:13:08.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Доступ запрещен.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Доступ запрещен.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 20
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/races/{id}/add-document':
    post:
      summary: addDocument
      operationId: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно добавлен'
                  race:
                    id: 19
                    name: 'Трофимова Светлана Александровна'
                    desc: 'Vel quam eaque nesciunt expedita. Ullam necessitatibus vel natus explicabo explicabo veniam. Omnis consequatur excepturi dolor maxime quos. Eaque nesciunt ut id quis.'
                    is_work: true
                    date_start: '2025-05-27T14:34:37.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно добавлен'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 19
                      name:
                        type: string
                        example: 'Трофимова Светлана Александровна'
                      desc:
                        type: string
                        example: 'Vel quam eaque nesciunt expedita. Ullam necessitatibus vel natus explicabo explicabo veniam. Omnis consequatur excepturi dolor maxime quos. Eaque nesciunt ut id quis.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-05-27T14:34:37.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdfFiles:
                  type: array
                  description: 'Must be a file.'
                  items:
                    type: string
                    format: binary
                pdfFilesDel:
                  type: array
                  description: ''
                  example:
                    - ipsum
                  items:
                    type: string
              required:
                - pdfFiles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/race/{id}/results':
    get:
      summary: get
      operationId: get
      description: 'Получение результатов гонки по фильтрам.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: null
                      place: null
                  -
                    status: success
                    message: messages.result_race.get.success
                    race_results:
                      scores: null
                      place: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RaceResult
      security: []
    post:
      summary: create
      operationId: create
      description: 'Сохранение результатов.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Результат гонщика успешно сохранён.'
                  result:
                    scores: null
                    place: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Результат гонщика успешно сохранён.'
                  result:
                    type: object
                    properties:
                      scores:
                        type: string
                        example: null
                      place:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RaceResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 20
                  nullable: false
                cupId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example: 8
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 9
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 1
                  nullable: false
                scores:
                  type: integer
                  description: ''
                  example: 11
                  nullable: false
                place:
                  type: integer
                  description: ''
                  example: 4
                  nullable: false
              required:
                - userId
                - gradeId
                - scores
                - place
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 1
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table.'
                  example: oabbott@example.com
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://hudson.com/alias-et-nemo-sapiente-ratione.html'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пароль был успешно изменён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пароль был успешно изменён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: tenetur
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'hgXc<^%G8K,1?k+\q!>'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: quas
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 12
                    name: 'Мясников Герман Борисович'
                    email: eduard.kirillova@example.net
                    email_verified_at: '2025-05-27T19:14:37.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12
                      name:
                        type: string
                        example: 'Мясников Герман Борисович'
                      email:
                        type: string
                        example: eduard.kirillova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-05-27T19:14:37.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 16
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 1
                      name: 'Анжелика Александровна Матвеева'
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 2
                      name: 'Киселёв Анатолий Владимирович'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 1
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: lyllex
                  nullable: false
                password_1:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: xefjsjm
                  nullable: false
                password_2:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: cctghwo
                  nullable: false
                token:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: xhvvfnbzrvunfcajd
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 11
                      name: Егерь
                      address: '985279, Сахалинская область, город Наро-Фоминск, ул. Чехова, 79'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Assumenda est accusamus voluptas autem atque ratione nulla quia. Laudantium adipisci facere pariatur ea eaque. Neque ab fuga et rerum aut. Iusto aspernatur id accusamus ab reprehenderit quisquam alias expedita. Enim quidem soluta velit non. Dolor omnis ipsam repudiandae sunt aut architecto aut debitis. Ut animi ut eveniet et sequi sint. Blanditiis quibusdam animi fuga aut. Cum accusantium qui enim voluptatem. Suscipit cupiditate enim ut qui ipsa minus.'
                      length: 30
                      turns: 12
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 41
                        name: Мордовия
                        type: республика
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                      attendance: []
                      requisites: null
                      offer: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 12
                      name: Диджей
                      address: '959937, Рязанская область, город Павловский Посад, наб. Ленина, 46'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Reprehenderit dolorum aut cumque tempore aut cupiditate ullam. Blanditiis quo est ducimus qui molestias nulla odit. Reprehenderit ipsa sunt consequatur. Qui consequatur ipsa aliquam aspernatur nostrum. Omnis cupiditate iste natus eos. Veniam deleniti repellendus debitis optio possimus neque. Qui et est repellendus quis quos. Eum hic architecto quisquam nam voluptatem qui aut. Aut consequatur ea suscipit id. Mollitia architecto enim ea qui sed quasi dolor.'
                      length: 419
                      turns: 59
                      free: true
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 84
                        name: Ямало-Ненецкий
                        type: 'автономный округ'
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                      attendance: []
                      requisites: null
                      offer: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                storeIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 20
                  nullable: true
                checkStore:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ab
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 1
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 1
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: quos
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 14
                    name: Автоинструктор
                    address: '839075, Нижегородская область, город Павловский Посад, пер. Ломоносова, 81'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Fuga maxime quae ut asperiores rerum. Dicta labore eum vel ipsam sit placeat. Praesentium iusto non amet aut omnis veniam. Esse voluptas et eos voluptas. Ea dolore ipsa sapiente dolores sed odio amet earum. Autem velit sed ea et consequuntur adipisci. Aliquam dolor consequatur suscipit qui vitae eligendi minima commodi. Tenetur asperiores est excepturi dicta beatae pariatur.'
                    length: 378
                    turns: 5
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 45
                      name: Ненецкий
                      type: 'автономный округ'
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 14
                      name:
                        type: string
                        example: Автоинструктор
                      address:
                        type: string
                        example: '839075, Нижегородская область, город Павловский Посад, пер. Ломоносова, 81'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Fuga maxime quae ut asperiores rerum. Dicta labore eum vel ipsam sit placeat. Praesentium iusto non amet aut omnis veniam. Esse voluptas et eos voluptas. Ea dolore ipsa sapiente dolores sed odio amet earum. Autem velit sed ea et consequuntur adipisci. Aliquam dolor consequatur suscipit qui vitae eligendi minima commodi. Tenetur asperiores est excepturi dicta beatae pariatur.'
                      length:
                        type: integer
                        example: 378
                      turns:
                        type: integer
                        example: 5
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 45
                          name:
                            type: string
                            example: Ненецкий
                          type:
                            type: string
                            example: 'автономный округ'
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: mbkyxcrdubwbedygjzirnirgzmmbuejaheguyunhmmexuzgqbinpereriwbnjzdlkldixxfcpnmqlfctxvvvdvctnu
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: placeat
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 9
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: iure
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 13
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 13
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 13
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                requisitesName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: pguardxwllyyiogrjvdlso
                  nullable: true
                requisitesEmail:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: christelle.greenfelder@example.org
                  nullable: true
                requisitesPhone:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: 'n'
                  nullable: true
                requisitesINN:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: swrlqufzmvp
                  nullable: true
                requisitesPricePolitics:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: pvqjkzgujbuagq
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 13
                    name: Продюсер
                    address: '006724, Белгородская область, город Красногорск, шоссе Гоголя, 26'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Amet aut rerum nostrum eveniet itaque et et occaecati. Ab officia nisi perferendis id esse autem nihil. Odit repellat porro nostrum ea eum aperiam. Et sapiente saepe laboriosam in autem. Dolorem expedita dolores quibusdam molestiae aut in sed repellendus. Quos dicta tempore sapiente maiores blanditiis non error dolore. Aut enim qui necessitatibus vel.'
                    length: 318
                    turns: 64
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 19
                      name: Ингушетия
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 13
                      name:
                        type: string
                        example: Продюсер
                      address:
                        type: string
                        example: '006724, Белгородская область, город Красногорск, шоссе Гоголя, 26'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Amet aut rerum nostrum eveniet itaque et et occaecati. Ab officia nisi perferendis id esse autem nihil. Odit repellat porro nostrum ea eum aperiam. Et sapiente saepe laboriosam in autem. Dolorem expedita dolores quibusdam molestiae aut in sed repellendus. Quos dicta tempore sapiente maiores blanditiis non error dolore. Aut enim qui necessitatibus vel.'
                      length:
                        type: integer
                        example: 318
                      turns:
                        type: integer
                        example: 64
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 19
                          name:
                            type: string
                            example: Ингушетия
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно изменён.'
                  track:
                    id: 15
                    name: Бариста
                    address: '929598, Тульская область, город Серебряные Пруды, бульвар Будапештсткая, 48'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Nemo accusamus beatae voluptates voluptatem consectetur pariatur sed omnis. Nemo voluptatem quos cupiditate inventore. Alias nihil aut minima asperiores. Autem aut id ratione saepe. Facilis provident consequatur quia. Quia ut deleniti fugiat delectus harum. Architecto accusantium aliquid accusamus. Maiores consectetur alias asperiores sit amet.'
                    length: 742
                    turns: 56
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 14
                      name: Воронежская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно изменён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 15
                      name:
                        type: string
                        example: Бариста
                      address:
                        type: string
                        example: '929598, Тульская область, город Серебряные Пруды, бульвар Будапештсткая, 48'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Nemo accusamus beatae voluptates voluptatem consectetur pariatur sed omnis. Nemo voluptatem quos cupiditate inventore. Alias nihil aut minima asperiores. Autem aut id ratione saepe. Facilis provident consequatur quia. Quia ut deleniti fugiat delectus harum. Architecto accusantium aliquid accusamus. Maiores consectetur alias asperiores sit amet.'
                      length:
                        type: integer
                        example: 742
                      turns:
                        type: integer
                        example: 56
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 14
                          name:
                            type: string
                            example: Воронежская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: kyclkxbiczydrtiirhnijigqtbaokjrldyqozkixdvk
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - reprehenderit
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 2
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 14
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 11
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 11
                  nullable: true
                offerFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                requisitesName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: xktxmqxnynjutoxilyfn
                  nullable: true
                requisitesEmail:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: kirlin.dalton@example.org
                  nullable: true
                requisitesPhone:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: dsrxdslbxhl
                  nullable: true
                requisitesINN:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: nsbkmptbnbcbysk
                  nullable: true
                requisitesPricePolitics:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: jyqsajsruunmnehrui
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно удалён.'
                  track:
                    id: 16
                    name: 'Гитарный мастер'
                    address: '188665, Кировская область, город Балашиха, спуск Бухарестская, 65'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Quaerat quasi autem omnis et delectus dolores. Nesciunt ad in ut vel praesentium. Impedit voluptas quibusdam commodi labore voluptatem molestiae excepturi necessitatibus. Dignissimos vero sit optio voluptatem soluta. Recusandae nisi atque repudiandae amet distinctio consectetur. Et reiciendis et ex laudantium deleniti ex exercitationem. Et reiciendis quia nulla aliquam tempora veniam voluptas.'
                    length: 43
                    turns: 63
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 36
                      name: Курская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                    attendance: []
                    requisites: null
                    offer: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно удалён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 16
                      name:
                        type: string
                        example: 'Гитарный мастер'
                      address:
                        type: string
                        example: '188665, Кировская область, город Балашиха, спуск Бухарестская, 65'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Quaerat quasi autem omnis et delectus dolores. Nesciunt ad in ut vel praesentium. Impedit voluptas quibusdam commodi labore voluptatem molestiae excepturi necessitatibus. Dignissimos vero sit optio voluptatem soluta. Recusandae nisi atque repudiandae amet distinctio consectetur. Et reiciendis et ex laudantium deleniti ex exercitationem. Et reiciendis quia nulla aliquam tempora veniam voluptas.'
                      length:
                        type: integer
                        example: 43
                      turns:
                        type: integer
                        example: 63
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 36
                          name:
                            type: string
                            example: Курская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
                      attendance:
                        type: array
                        example: []
                      requisites:
                        type: string
                        example: null
                      offer:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно.'
                  user:
                    id: 7
                    name: 'Воронцова Виктория Сергеевна'
                    email: aleksandr49@example.com
                    email_verified_at: '2025-05-27T19:14:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 7
                      name:
                        type: string
                        example: 'Воронцова Виктория Сергеевна'
                      email:
                        type: string
                        example: aleksandr49@example.com
                      email_verified_at:
                        type: string
                        example: '2025-05-27T19:14:36.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь был успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь был успешно удалён.'
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь получен успешно.'
                  user:
                    id: 8
                    name: 'Баранов Филипп Романович'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 8
                      name:
                        type: string
                        example: 'Баранов Филипп Романович'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  user:
                    id: 9
                    name: 'Фаина Романовна Юдина'
                    email: fmuhin@example.org
                    email_verified_at: '2025-05-27T19:14:36.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: 'Фаина Романовна Юдина'
                      email:
                        type: string
                        example: fmuhin@example.org
                      email_verified_at:
                        type: string
                        example: '2025-05-27T19:14:36.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: rhgfjhnsgzjkakjowfysfo
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: valentine55@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: snrkikder
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 10
                      name: 'Бронислав Дмитриевич Зуев'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 11
                      name: 'Артемьев Семён Фёдорович'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: dolorem
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 8
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Код для подтверждения электронной почты отправлена на вашу почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Код для подтверждения электронной почты отправлена на вашу почту.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Почта уже подтверждена.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Почта уже подтверждена.'
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ваша почта успешно подтверждена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ваша почта успешно подтверждена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Почта уже подтверждена.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Почта уже подтверждена.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Код не подходит.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Код не подходит.'
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 15
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами.'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Degree
    description: 'Методы связанные с уровнями кубков. Например всероссийский, областной и т.д.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RaceResult
    description: 'Управление результатами гонок.'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
