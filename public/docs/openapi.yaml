openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.success
                  access_token: 10|GsWnkl7UcNBmovuUFFJFml5sDtwlBRaWNA4WszyM21807bd4
                  token_type: Bearer
                  user:
                    name: 'Кулагин Алексей Максимович'
                    email: qkolobova@example.net
                    email_verified_at: '2025-01-23T04:28:34.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.success
                  access_token:
                    type: string
                    example: 10|GsWnkl7UcNBmovuUFFJFml5sDtwlBRaWNA4WszyM21807bd4
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Кулагин Алексей Максимович'
                      email:
                        type: string
                        example: qkolobova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-23T04:28:34.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.login.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.login.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'validation.email The <code>email</code> of an existing record in the users table. validation.min.'
                  example: patsy.kemmer@example.net
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: 'YHc8,$$r4'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.register.success
                  access_token: 11|QRGMCXy5EFPYjgZgTBaXeMLOoxysP0pEXz87SVbL7acda010
                  token_type: Bearer
                  user:
                    name: 'Викентий Евгеньевич Филатов'
                    email: gkabanov@example.org
                    email_verified_at: '2025-01-23T04:28:35.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.register.success
                  access_token:
                    type: string
                    example: 11|QRGMCXy5EFPYjgZgTBaXeMLOoxysP0pEXz87SVbL7acda010
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Викентий Евгеньевич Филатов'
                      email:
                        type: string
                        example: gkabanov@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-23T04:28:35.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.auth.register.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.auth.register.error
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'validation.min validation.max.'
                  example: ytmfwawqkgqmpqxpbzm
                  nullable: false
                email:
                  type: string
                  description: validation.email.
                  example: ppowlowski@example.net
                  nullable: false
                password:
                  type: string
                  description: validation.min.
                  example: 'hJ;d=&c%"ye9l|h'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: maxime
                  nullable: false
                avatar:
                  type: string
                  description: ''
                  example: natus
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.success
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth.logout.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth.logout.error
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.create.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.create.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: dignissimos
                  nullable: false
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: false
                data:
                  type: string
                  description: validation.json.
                  example: '["ut","non"]'
                  nullable: false
              required:
                - type
                - file
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
                  -
                    status: success
                    message: messages.document.get_for_user.success
                    documents:
                      id: 1
                      name: file_678f974ca37ac
                      type: фото
                      path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data: '{"kkk": "ssss"}'
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.get_for_user_by_id.success
                  document:
                    id: 1
                    name: file_678f974ca37ac
                    type: фото
                    path: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                    data: '{"kkk": "ssss"}'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.success
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: file_678f974ca37ac
                      type:
                        type: string
                        example: фото
                      path:
                        type: string
                        example: user/documents/hguPCwnOzSndWTwQ41NvPtTSfQg4g3pR368C3jar.png
                      data:
                        type: string
                        example: '{"kkk": "ssss"}'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.document.get_for_user_by_id.not_found
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.document.get_for_user_by_id.not_found
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.personal_info.create.success
                  personal_info:
                    name: Dr.
                    surname: Dr.
                    patronymic: Miss
                    date_of_birth: null
                    city: Балашиха
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: '(495) 799-6700'
                    start_number: '411'
                    group: Егерь
                    rank_number: '100000'
                    rank: Писатель
                    community: 'ОАО БухРеч'
                    coach: 'Моисеев Богдан Андреевич'
                    moto_stamp: Dr.
                    engine: Mr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.personal_info.create.success
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Dr.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Miss
                      date_of_birth:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Балашиха
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(495) 799-6700'
                      start_number:
                        type: string
                        example: '411'
                      group:
                        type: string
                        example: Егерь
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Писатель
                      community:
                        type: string
                        example: 'ОАО БухРеч'
                      coach:
                        type: string
                        example: 'Моисеев Богдан Андреевич'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Mr.
      tags:
        - PersonalInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                surname:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: eos
                  nullable: false
                dateOfBirth:
                  type: string
                  description: validation.date.
                  example: '2025-01-23T04:28:35'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: a
                  nullable: false
                inn:
                  type: integer
                  description: ''
                  example: 1
                  nullable: false
                snils:
                  type: integer
                  description: ''
                  example: 16
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: eius
                  nullable: false
                startNumber:
                  type: integer
                  description: ''
                  example: 7
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: laboriosam
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: aliquid
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                community:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quia
                  nullable: false
                engine:
                  type: string
                  description: ''
                  example: temporibus
                  nullable: false
              required:
                - name
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - rankNumber
                - motoStamp
                - engine
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 23
                      name: 'Буров Григорий Максимович'
                      desc: 'Praesentium perferendis est dolorum aut doloremque id nostrum quidem. Similique omnis recusandae est dolorem non rerum. Non unde tenetur sit autem. Excepturi facere vel delectus.'
                      is_work: false
                      date_start: null
                      images: null
                  -
                    status: success
                    message: messages.race.get.success
                    races:
                      id: 24
                      name: 'Майя Борисовна Морозова'
                      desc: 'Repudiandae aliquam sunt dicta perspiciatis fuga quia dignissimos. Nostrum reiciendis dolores cum sint debitis veritatis. Adipisci voluptas et iusto vel sequi delectus officiis.'
                      is_work: false
                      date_start: null
                      images: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 2
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: harum
                  nullable: true
                limit:
                  type: integer
                  description: validation.max.
                  example: 4
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 26
                  name: 'Тамара Борисовна Фадеева'
                  desc: 'Unde saepe recusandae eligendi iure quam unde cum. Explicabo eveniet facere aut voluptate atque unde tempora exercitationem. In fugiat et eos nobis.'
                  is_work: true
                  date_start: '2025-01-23T04:28:35.000000Z'
                  images: null
                  track_id: 3
                  user_id: 19
                  created_at: '2025-01-23T04:28:35.000000Z'
                  updated_at: '2025-01-23T04:28:35.000000Z'
                properties:
                  id:
                    type: integer
                    example: 26
                  name:
                    type: string
                    example: 'Тамара Борисовна Фадеева'
                  desc:
                    type: string
                    example: 'Unde saepe recusandae eligendi iure quam unde cum. Explicabo eveniet facere aut voluptate atque unde tempora exercitationem. In fugiat et eos nobis.'
                  is_work:
                    type: boolean
                    example: true
                  date_start:
                    type: string
                    example: '2025-01-23T04:28:35.000000Z'
                  images:
                    type: string
                    example: null
                  track_id:
                    type: integer
                    example: 3
                  user_id:
                    type: integer
                    example: 19
                  created_at:
                    type: string
                    example: '2025-01-23T04:28:35.000000Z'
                  updated_at:
                    type: string
                    example: '2025-01-23T04:28:35.000000Z'
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'validation.max validation.min.'
                  example: jocpfgqfdwbxdculheoaiapwddcqjqeunpginpepcgzjhxhbwcrleqawtuomaophhymwmdht
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: minus
                  nullable: true
                date_start:
                  type: string
                  description: validation.date.
                  example: '2025-01-23T04:28:35'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: false
                images:
                  type: array
                  description: 'validation.image validation.max.'
                  items:
                    type: string
                    format: binary
              required:
                - name
                - date_start
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.get_for_id.success
                  race:
                    id: 25
                    name: 'Елизавета Львовна Киселёва'
                    desc: 'Ex magnam qui enim recusandae velit voluptates. Non sint voluptas perspiciatis non velit. Sit minus placeat consequatur pariatur.'
                    is_work: true
                    date_start: null
                    images: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.get_for_id.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 25
                      name:
                        type: string
                        example: 'Елизавета Львовна Киселёва'
                      desc:
                        type: string
                        example: 'Ex magnam qui enim recusandae velit voluptates. Non sint voluptas perspiciatis non velit. Sit minus placeat consequatur pariatur.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: null
                      images:
                        type: string
                        example: null
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: messages.role.get_change_role.success
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
      security: []
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.role.change_role_for_default_user.success
                  user:
                    name: 'Никифоров Андрей Романович'
                    email: gsamsonov@example.org
                    email_verified_at: '2025-01-23T04:28:35.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.role.change_role_for_default_user.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Никифоров Андрей Романович'
                      email:
                        type: string
                        example: gsamsonov@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-23T04:28:35.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 15
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 23
                      name: Экономист
                      address: '266521, Костромская область, город Домодедово, проезд Ломоносова, 76'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Natus aut eos corporis amet quas dignissimos iure. Et quia sit ad. Neque consequatur officia harum earum veritatis qui aut. Eos fuga id accusamus at tempore perferendis. Corporis culpa dignissimos quam fuga. Nam nihil culpa et alias aut rerum nihil enim. Nam placeat sint nulla voluptatum cumque esse. Ut voluptatem et non ad quis consectetur expedita. Et est explicabo voluptatem alias omnis. Nostrum nulla veritatis omnis nemo ut ut excepturi.'
                      length: 823
                      turns: 47
                      free: true
                      is_work: false
                      spec: null
                  -
                    status: success
                    message: messages.track.get.success
                    tracks:
                      id: 24
                      name: Пианист
                      address: '228962, Читинская область, город Сергиев Посад, проезд Домодедовская, 53'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Et deleniti ut et illo sed dolores consequatur. Quasi debitis delectus mollitia ipsum. Assumenda impedit ab repellat dolores dolorem doloremque aut ad. Aliquam porro qui qui. Quia omnis nisi est ab velit dignissimos asperiores. Quaerat libero quidem laboriosam vero. Voluptatum quidem optio ut beatae voluptatem. Sunt minus laboriosam et accusamus. Autem quia ullam libero.'
                      length: 866
                      turns: 31
                      free: false
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: consequatur
                  nullable: true
                limit:
                  type: integer
                  description: validation.max.
                  example: 8
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.create.success
                  track:
                    id: 26
                    name: Промоутер
                    address: '192557, Белгородская область, город Красногорск, пл. Славы, 31'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Aut dolor aliquam nihil aut assumenda sed dolores. Dolor sunt veritatis omnis non. Molestiae provident ad quos cupiditate hic qui deserunt. Alias dolores corrupti repudiandae. Aperiam exercitationem reprehenderit omnis eveniet debitis ex harum. Officia voluptates laborum sit quia. Qui eum ut totam odio aliquid. Et natus neque enim. Pariatur vel nulla qui mollitia quo aut et. Quod aut mollitia sapiente ut et et aspernatur. Vel fugiat dicta sunt eligendi.'
                    length: 218
                    turns: 90
                    free: false
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.create.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 26
                      name:
                        type: string
                        example: Промоутер
                      address:
                        type: string
                        example: '192557, Белгородская область, город Красногорск, пл. Славы, 31'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Aut dolor aliquam nihil aut assumenda sed dolores. Dolor sunt veritatis omnis non. Molestiae provident ad quos cupiditate hic qui deserunt. Alias dolores corrupti repudiandae. Aperiam exercitationem reprehenderit omnis eveniet debitis ex harum. Officia voluptates laborum sit quia. Qui eum ut totam odio aliquid. Et natus neque enim. Pariatur vel nulla qui mollitia quo aut et. Quod aut mollitia sapiente ut et et aspernatur. Vel fugiat dicta sunt eligendi.'
                      length:
                        type: integer
                        example: 218
                      turns:
                        type: integer
                        example: 90
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.track.create.error
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.track.create.error
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: validation.min.
                  example: uomasbaxugbusqbxvkgxnusscewpwwctkwfcibvzbdakebvhzvoixvlcwbjtayhkgrvcfmkeqjrooo
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: exercitationem
                  nullable: false
                latitude:
                  type: number
                  description: validation.between.
                  example: -87
                  nullable: false
                longitude:
                  type: number
                  description: validation.between.
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'validation.image validation.max.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 16
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                spec:
                  type: string
                  description: validation.json.
                  example: '["sunt","voluptatem"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.track.get_for_id.success
                  track:
                    id: 25
                    name: Бизнес-аналитик
                    address: '113086, Волгоградская область, город Шатура, спуск Гагарина, 82'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Suscipit modi consectetur asperiores et. Animi animi harum sunt hic earum dolores placeat. Eum doloremque qui et voluptatem est earum quia. Voluptates nihil accusantium nihil rerum aut id. Aut fugiat voluptatem aliquid et. Qui quam facilis ab blanditiis voluptas sequi possimus. Animi id inventore itaque dolor. Fugit ut aut enim magnam nulla deserunt. Voluptatem et voluptates vel nulla praesentium laudantium totam ut.'
                    length: 553
                    turns: 15
                    free: true
                    is_work: false
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.track.get_for_id.success
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 25
                      name:
                        type: string
                        example: Бизнес-аналитик
                      address:
                        type: string
                        example: '113086, Волгоградская область, город Шатура, спуск Гагарина, 82'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Suscipit modi consectetur asperiores et. Animi animi harum sunt hic earum dolores placeat. Eum doloremque qui et voluptatem est earum quia. Voluptates nihil accusantium nihil rerum aut id. Aut fugiat voluptatem aliquid et. Qui quam facilis ab blanditiis voluptas sequi possimus. Animi id inventore itaque dolor. Fugit ut aut enim magnam nulla deserunt. Voluptatem et voluptates vel nulla praesentium laudantium totam ut.'
                      length:
                        type: integer
                        example: 553
                      turns:
                        type: integer
                        example: 15
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_user_for_token.success
                  user:
                    name: 'Миронов Викентий Евгеньевич'
                    email: evdokimova.elizaveta@example.org
                    email_verified_at: '2025-01-23T04:28:35.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_user_for_token.success
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'Миронов Викентий Евгеньевич'
                      email:
                        type: string
                        example: evdokimova.elizaveta@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-23T04:28:35.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
tags:
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
