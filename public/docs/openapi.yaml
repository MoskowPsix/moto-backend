openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: Toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Запись на гонку успешно создана.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Запись на гонку успешно создана.'
        404:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Запрашиваемый ресурс не найден.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Запрашиваемый ресурс не найден.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.appointment.create.grade_not_exists
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.appointment.create.grade_not_exists
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.error.exists_appointment_race
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.error.exists_appointment_race
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.many_documents
                  documents: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.many_documents
                  documents:
                    type: array
                    example: []
      tags:
        - AppointmentRace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                surname:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: false
                patronymic:
                  type: string
                  description: ''
                  example: velit
                  nullable: false
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:11'
                  nullable: false
                city:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: false
                region:
                  type: string
                  description: ''
                  example: tenetur
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: false
                snils:
                  type: string
                  description: ''
                  example: nam
                  nullable: false
                phoneNumber:
                  type: string
                  description: ''
                  example: tempore
                  nullable: false
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 5
                  nullable: false
                group:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
                rank:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                rankNumber:
                  type: string
                  description: ''
                  example: explicabo
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: praesentium
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: error
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: false
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: voluptate
                  nullable: false
                gradeId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: aut
                  nullable: false
                commandId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: null
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: dolor
                  nullable: false
                documentIds:
                  type: array
                  description: ''
                  example:
                    - 13
                  items:
                    type: integer
                    nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
              required:
                - surname
                - patronymic
                - dateOfBirth
                - city
                - inn
                - snils
                - phoneNumber
                - startNumber
                - group
                - rank
                - motoStamp
                - locationId
                - gradeId
                - numberAndSeria
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 871
                      name: 'Сидорова Рената Александровна'
                      email: ynoskov@example.com
                      email_verified_at: '2025-04-22T11:31:11.000000Z'
                      created_at: '2025-04-22T11:31:11.000000Z'
                      updated_at: '2025-04-22T11:31:11.000000Z'
                      avatar: null
                      deleted_at: null
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 872
                      name: 'Родионова Надежда Ивановна'
                      email: belozerov.albert@example.net
                      email_verified_at: '2025-04-22T11:31:11.000000Z'
                      created_at: '2025-04-22T11:31:11.000000Z'
                      updated_at: '2025-04-22T11:31:11.000000Z'
                      avatar: null
                      deleted_at: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 21
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: GetTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/appointment-race/{id}/pdf':
    get:
      summary: GetAppointmentPDF
      operationId: getAppointmentPDF
      description: 'Возвращает документ заявки гонщика для комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the appointment race.'
        example: veritatis
        required: true
        schema:
          type: string
  '/api/races/{id}/appointment-race/appointments':
    get:
      summary: GetAppointmentsUsers
      operationId: getAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment_race.get_users_for_commission.success
                  users:
                    id: 873
                    name: 'Федосья Сергеевна Сазонова'
                    email: mark37@example.org
                    email_verified_at: '2025-04-22T11:31:11.000000Z'
                    created_at: '2025-04-22T11:31:11.000000Z'
                    updated_at: '2025-04-22T11:31:11.000000Z'
                    avatar: null
                    deleted_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment_race.get_users_for_commission.success
                  users:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 873
                      name:
                        type: string
                        example: 'Федосья Сергеевна Сазонова'
                      email:
                        type: string
                        example: mark37@example.org
                      email_verified_at:
                        type: string
                        example: '2025-04-22T11:31:11.000000Z'
                      created_at:
                        type: string
                        example: '2025-04-22T11:31:11.000000Z'
                      updated_at:
                        type: string
                        example: '2025-04-22T11:31:11.000000Z'
                      avatar:
                        type: string
                        example: null
                      deleted_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 2
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table/export':
    get:
      summary: Export
      operationId: export
      description: 'Экспорт заявок'
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  /api/attendances:
    post:
      summary: create
      operationId: create
      description: 'Создание платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно создана.'
                  attendance:
                    id: 115
                    name: 'Нестор Романович Крюков'
                    desc: 'Dolores ut nulla nulla perferendis. Enim rerum corrupti ut nobis. Fugiat sint sit aut repellat dolores. Aut voluptas dolores reprehenderit quia.'
                    price: '9.436435e+06'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно создана.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 115
                      name:
                        type: string
                        example: 'Нестор Романович Крюков'
                      desc:
                        type: string
                        example: 'Dolores ut nulla nulla perferendis. Enim rerum corrupti ut nobis. Fugiat sint sit aut repellat dolores. Aut voluptas dolores reprehenderit quia.'
                      price:
                        type: string
                        example: '9.436435e+06'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: wkimzdrax
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: os
                  nullable: false
                price:
                  type: number
                  description: ''
                  example: 531146.059
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 2
                  nullable: false
              required:
                - name
                - desc
                - price
                - trackId
  '/api/attendance/{id}':
    post:
      summary: update
      operationId: update
      description: 'Редактирование платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно изменена.'
                  attendance:
                    id: 116
                    name: 'Светлана Романовна Молчанова'
                    desc: 'Illum recusandae dicta est itaque fugiat. Tempora adipisci commodi aperiam ea sapiente velit sunt. Esse voluptatem quasi et eos perspiciatis repellat. Fugit tenetur et odit aperiam accusantium.'
                    price: '17'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно изменена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 116
                      name:
                        type: string
                        example: 'Светлана Романовна Молчанова'
                      desc:
                        type: string
                        example: 'Illum recusandae dicta est itaque fugiat. Tempora adipisci commodi aperiam ea sapiente velit sunt. Esse voluptatem quasi et eos perspiciatis repellat. Fugit tenetur et odit aperiam accusantium.'
                      price:
                        type: string
                        example: '17'
      tags:
        - Attendance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: texeulwmrfcclnftxrf
                  nullable: false
                desc:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ltup
                  nullable: true
                price:
                  type: number
                  description: ''
                  example: 640369.180448
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 7
                  nullable: false
              required:
                - name
                - price
                - trackId
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление платной услуги'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Платная услуга успешно удалена.'
                  attendance:
                    id: 117
                    name: 'Максим Борисович Фролов'
                    desc: 'Exercitationem assumenda est laborum sint. Sit facilis magnam nihil fuga aut quo ratione. Et fugiat esse qui non incidunt alias porro veritatis. Minima assumenda ut corrupti molestias.'
                    price: '4.7294688e+08'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Платная услуга успешно удалена.'
                  attendance:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 117
                      name:
                        type: string
                        example: 'Максим Борисович Фролов'
                      desc:
                        type: string
                        example: 'Exercitationem assumenda est laborum sint. Sit facilis magnam nihil fuga aut quo ratione. Et fugiat esse qui non incidunt alias porro veritatis. Minima assumenda ut corrupti molestias.'
                      price:
                        type: string
                        example: '4.7294688e+08'
      tags:
        - Attendance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example: 8
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the attendance.'
        example: 114
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались.'
                  access_token: 967|waXv4kdfQVl0gXpD2MuoBLKcekDgiaxrK3XJI7ANdcc8605d
                  token_type: Bearer
                  user:
                    id: 861
                    name: 'Зиновьева Ирина Романовна'
                    email: nelli87@example.org
                    email_verified_at: '2025-04-22T11:31:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались.'
                  access_token:
                    type: string
                    example: 967|waXv4kdfQVl0gXpD2MuoBLKcekDgiaxrK3XJI7ANdcc8605d
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 861
                      name:
                        type: string
                        example: 'Зиновьева Ирина Романовна'
                      email:
                        type: string
                        example: nelli87@example.org
                      email_verified_at:
                        type: string
                        example: '2025-04-22T11:31:09.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Такая почта не существует.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Такая почта не существует.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. Количество символов в поле value должно быть не меньше 3.'
                  example: elsa.hoeger@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: 'X$O~z]g}\.N'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы.'
                  access_token: 968|MDNKsfmP2Qllxhsxb534qMQDIYsV72ZIlaRGjj4r2332cd57
                  token_type: Bearer
                  user:
                    id: 862
                    name: 'Горшкова Анжелика Алексеевна'
                    email: odintov.boris@example.org
                    email_verified_at: '2025-04-22T11:31:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы.'
                  access_token:
                    type: string
                    example: 968|MDNKsfmP2Qllxhsxb534qMQDIYsV72ZIlaRGjj4r2332cd57
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 862
                      name:
                        type: string
                        example: 'Горшкова Анжелика Алексеевна'
                      email:
                        type: string
                        example: odintov.boris@example.org
                      email_verified_at:
                        type: string
                        example: '2025-04-22T11:31:09.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Такая почта не существует.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Такая почта не существует.'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: frxhx
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: miller.kunde@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '7I1l<jQ$:IAS<'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: doloremque
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/phone/login:
    post:
      summary: Login
      operationId: login
      description: 'Вход пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: ctshnd
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
              required:
                - number
      security: []
  /api/phone/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя через телефон.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.auth_phone.login.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.auth_phone.login.success
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: u
                  nullable: false
                callback:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
              required:
                - number
      security: []
  /api/phone/verify:
    post:
      summary: Verify
      operationId: verify
      description: 'Подтверждение телефона и вход пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались.'
                  access_token: 969|9dVHML3VmLlK3Txz3C2THTCIYvkyMwSdqulPuHURf1a9c7fe
                  token_type: Bearer
                  user:
                    id: 864
                    name: 'Игнат Фёдорович Туров'
                    email: grisin.alla@example.net
                    email_verified_at: '2025-04-22T11:31:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались.'
                  access_token:
                    type: string
                    example: 969|9dVHML3VmLlK3Txz3C2THTCIYvkyMwSdqulPuHURf1a9c7fe
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 864
                      name:
                        type: string
                        example: 'Игнат Фёдорович Туров'
                      email:
                        type: string
                        example: grisin.alla@example.net
                      email_verified_at:
                        type: string
                        example: '2025-04-22T11:31:09.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pin:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 4.'
                  example: bsy
                  nullable: false
                number:
                  type: string
                  description: 'The <code>number</code> of an existing record in the phones table. Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: qfunfxjr
                  nullable: false
              required:
                - pin
                - number
      security: []
  /api/phone/verify/hook:
    post:
      summary: ''
      operationId: postApiPhoneVerifyHook
      description: ''
      parameters: []
      responses: {  }
      tags:
        - AuthPhone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                phone:
                  type: string
                  description: ''
                  example: reprehenderit
                  nullable: false
              required:
                - key
                - phone
      security: []
  '/api/phone/{userId}/delete':
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление телефона'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Телефон успешно удалён'
                  phone:
                    number: null
                    last_num: null
                    number_verified_at: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Телефон успешно удалён'
                  phone:
                    type: object
                    properties:
                      number:
                        type: string
                        example: null
                      last_num:
                        type: string
                        example: null
                      number_verified_at:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AuthPhone
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  /api/commands:
    get:
      summary: get
      operationId: get
      description: 'Получение всех команд по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Команда успешно получена.'
                    commands:
                      id: 165
                      name: 'Захар Сергеевич Беляев'
                      full_name: null
                      coach: null
                      city: Истра
                      avatar: null
                  -
                    status: success
                    message: 'Команда успешно получена.'
                    commands:
                      id: 166
                      name: 'Даниил Львович Суханов'
                      full_name: null
                      coach: null
                      city: Пушкино
                      avatar: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 19
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 4
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 22
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 20
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: dolor
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: vel
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: tempore
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно создана.'
                  command:
                    id: 168
                    name: 'Богданова Анастасия Львовна'
                    full_name: null
                    coach: null
                    city: Клин
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно создана.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 168
                      name:
                        type: string
                        example: 'Богданова Анастасия Львовна'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Клин
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: httvuajaslibeirwmyzcx
                  nullable: false
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: abzbvsyhtf
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: nbwlzbicwugf
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 11
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: q
                  nullable: false
              required:
                - name
                - city
  '/api/commands/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение команд по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда по идентификатору получена успешно.'
                  command:
                    id: 167
                    name: 'Виль Андреевич Жуков'
                    full_name: null
                    coach: null
                    city: Люберцы
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда по идентификатору получена успешно.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 167
                      name:
                        type: string
                        example: 'Виль Андреевич Жуков'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Люберцы
                      avatar:
                        type: string
                        example: null
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 10
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                locationId:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: autem
                  nullable: true
                fullName:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: rem
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Редактирование команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно изменена.'
                  command:
                    id: 169
                    name: 'Харитонова Дина Сергеевна'
                    full_name: null
                    coach: null
                    city: Щёлково
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно изменена.'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 169
                      name:
                        type: string
                        example: 'Харитонова Дина Сергеевна'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Щёлково
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: auztdplfzchpvcazvya
                  nullable: true
                fullName:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: l
                  nullable: true
                coach:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: kmmjiuyyhyjwh
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                city:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: zhg
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление команды'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Команда успешно удаленаю'
                  command:
                    id: 170
                    name: 'Евгения Владимировна Анисимова'
                    full_name: null
                    coach: null
                    city: Шатура
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Команда успешно удаленаю'
                  command:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 170
                      name:
                        type: string
                        example: 'Евгения Владимировна Анисимова'
                      full_name:
                        type: string
                        example: null
                      coach:
                        type: string
                        example: null
                      city:
                        type: string
                        example: Шатура
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/couches/{user_id}':
    post:
      summary: toggleCouch
      operationId: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Тренер успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Тренер успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
      -
        in: path
        name: user_id
        description: 'The ID of the user.'
        example: tenetur
        required: true
        schema:
          type: string
  '/api/commands/{command_id}/members':
    post:
      summary: toggleMember
      operationId: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Участник удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Участник удалён.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
    get:
      summary: getMembers
      operationId: getMembers
      description: 'Получить всех участников команды.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.couches.get.success
                  members:
                    id: 874
                    name: 'Бобров Эрик Борисович'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.couches.get.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 874
                      name:
                        type: string
                        example: 'Бобров Эрик Борисович'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 12
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 2
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/coaches':
    get:
      summary: getCoachesForAll
      operationId: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_coaches_for_all.success
                  coaches:
                    id: 875
                    name: 'Рада Александровна Власова'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_coaches_for_all.success
                  coaches:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 875
                      name:
                        type: string
                        example: 'Рада Александровна Власова'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 22
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/commands/{command_id}/members-for-coach':
    get:
      summary: getMembersForCoach
      operationId: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.command.get_members_for_coach.success
                  members:
                    id: 876
                    name: 'Гусев Юлиан Сергеевич'
                    email: sabramova@example.com
                    email_verified_at: '2025-04-22T11:31:12.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.command.get_members_for_coach.success
                  members:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 876
                      name:
                        type: string
                        example: 'Гусев Юлиан Сергеевич'
                      email:
                        type: string
                        example: sabramova@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-22T11:31:12.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Command
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 2
                  nullable: true
                raceIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the races table.'
                  example: 9
                  nullable: true
                checkMember:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
    parameters:
      -
        in: path
        name: command_id
        description: 'The ID of the command.'
        example: 66
        required: true
        schema:
          type: integer
  '/api/cups/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение кубков по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок по идентификатору получен успешно.'
                  cup:
                    id: 79
                    name: 'Мельников Никита Евгеньевич'
                    year: 1974
                    stages: '4'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок по идентификатору получен успешно.'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 79
                      name:
                        type: string
                        example: 'Мельников Никита Евгеньевич'
                      year:
                        type: integer
                        example: 1974
                      stages:
                        type: string
                        example: '4'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 7
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: veniam
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: et
                  nullable: true
      security: []
    post:
      summary: update
      operationId: update
      description: 'Обновление кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок успешно обновлён'
                  cup:
                    id: 82
                    name: 'Дина Ивановна Мишина'
                    year: 1990
                    stages: '3'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок успешно обновлён'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 82
                      name:
                        type: string
                        example: 'Дина Ивановна Мишина'
                      year:
                        type: integer
                        example: 1990
                      stages:
                        type: string
                        example: '3'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: yfdo
                  nullable: true
                year:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                stages:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: ruyjcwvaykz
                  nullable: true
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 4
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 13
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cup.'
        example: reiciendis
        required: true
        schema:
          type: string
  /api/cups:
    post:
      summary: create
      operationId: create
      description: 'Создание кубка'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Кубок успешно создан'
                  cup:
                    id: 81
                    name: 'Эльвира Дмитриевна Шилова'
                    year: 1978
                    stages: '10'
                    image: null
                    color: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Кубок успешно создан'
                  cup:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 81
                      name:
                        type: string
                        example: 'Эльвира Дмитриевна Шилова'
                      year:
                        type: integer
                        example: 1978
                      stages:
                        type: string
                        example: '10'
                      image:
                        type: string
                        example: null
                      color:
                        type: string
                        example: null
      tags:
        - Cup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: bqyxnfkyaualdjqaqhpjwn
                  nullable: false
                year:
                  type: integer
                  description: ''
                  example: 19
                  nullable: false
                image:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                color:
                  type: string
                  description: ''
                  example: possimus
                  nullable: true
                stages:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: vj
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 10
                  nullable: true
              required:
                - name
                - year
  /api/degree:
    get:
      summary: get
      operationId: get
      description: 'Получить все уровни.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Уровни успешно получены.'
                    degree:
                      id: null
                      name: null
                      desc: null
                  -
                    status: success
                    message: 'Уровни успешно получены.'
                    degree:
                      id: null
                      name: null
                      desc: null
      tags:
        - Degree
      security: []
  '/api/degree/{id}':
    get:
      summary: getForRaceId
      operationId: getForRaceId
      description: 'Получение уровня по id.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Уровень по id успешно получен.'
                  degree:
                    id: null
                    name: null
                    desc: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Уровень по id успешно получен.'
                  degree:
                    type: object
                    properties:
                      id:
                        type: string
                        example: null
                      name:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Degree
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the degree.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 1006
                    name: file_68077dff07214
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1006
                      name:
                        type: string
                        example: file_68077dff07214
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
      tags:
        - Document
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: notarius
                  nullable: false
                  enum:
                    - licenses
                    - polis
                    - notarius
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                url:
                  type: string
                  description: ''
                  example: 'https://armstrong.com/quasi-enim-sit-esse-possimus-possimus-delectus.html'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: aspernatur
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: rerum
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: ex
                  nullable: true
              required:
                - type
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 1007
                      name: file_68077dff0f96c
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 1008
                      name: file_68077dff128d3
                      type: notarius
                      url_view: null
                      number: null
                      issued_whom: null
                      it_works_date: null
                      is_checked: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 7
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 19
                  nullable: true
      security: []
  '/api/users/cabinet/documents/{id}/files':
    get:
      summary: ''
      operationId: getApiUsersCabinetDocumentsIdFiles
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: !!binary 
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 1009
                    name: file_68077dff1e837
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1009
                      name:
                        type: string
                        example: file_68077dff1e837
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно изменён.'
                  document:
                    id: 1010
                    name: file_68077dff27ac9
                    type: notarius
                    url_view: null
                    number: null
                    issued_whom: null
                    it_works_date: null
                    is_checked: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно изменён.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1010
                      name:
                        type: string
                        example: file_68077dff27ac9
                      type:
                        type: string
                        example: notarius
                      url_view:
                        type: string
                        example: null
                      number:
                        type: string
                        example: null
                      issued_whom:
                        type: string
                        example: null
                      it_works_date:
                        type: string
                        example: null
                      is_checked:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                number:
                  type: string
                  description: ''
                  example: vero
                  nullable: true
                issuedWhom:
                  type: string
                  description: ''
                  example: asperiores
                  nullable: true
                itWorksDate:
                  type: string
                  description: ''
                  example: illo
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  '/api/documents/{id}/commission-checked':
    get:
      summary: VerifyDocsForCommission
      operationId: verifyDocsForCommission
      description: 'Сделать документ проверенным. Метод для комиссии.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.document.verify_docs_for_commission.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.document.verify_docs_for_commission.success
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 7
        required: true
        schema:
          type: integer
  /api/transactions:
    post:
      summary: create
      operationId: create
      description: 'Создание транзакции'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Транзакция успешно создана.'
                  payment_link: null
                  transaction:
                    id: 78
                    status: null
                    desc: null
                    count: null
                    date: null
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Транзакция успешно создана.'
                  payment_link:
                    type: string
                    example: null
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 78
                      status:
                        type: string
                        example: null
                      desc:
                        type: string
                        example: null
                      count:
                        type: string
                        example: null
                      date:
                        type: string
                        example: null
                      user:
                        type: string
                        example: null
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the attendances table.'
                  example:
                    - 20
                  items:
                    type: integer
                date:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
              required:
                - attendanceIds
      security: []
  /api/transactions/result:
    post:
      summary: result
      operationId: result
      description: 'Получение ответа'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 79
                  status: null
                  desc: null
                  count: null
                  date: null
                  user: null
                properties:
                  id:
                    type: integer
                    example: 79
                  status:
                    type: string
                    example: null
                  desc:
                    type: string
                    example: null
                  count:
                    type: string
                    example: null
                  date:
                    type: string
                    example: null
                  user:
                    type: string
                    example: null
      tags:
        - Endpoints
      security: []
  '/api/race/{id}/favorite':
    post:
      summary: toggleFavoriteRace
      operationId: toggleFavoriteRace
      description: 'Добавить или убрать гонку из избранного.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка удалена из избранного.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка удалена из избранного.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - FavoriteUser
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  /api/grades:
    get:
      summary: get
      operationId: get
      description: 'Получение всех классов по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Класс гонки получен успешно.'
                    grades:
                      id: 190
                      name: 'Елизавета Борисовна Фомичёва'
                      description: 'Nihil dolorem suscipit exercitationem. Quo sint nobis sed iure quas eum aliquid. Exercitationem eius et occaecati doloribus. Aliquid sint nostrum autem asperiores.'
                  -
                    status: success
                    message: 'Класс гонки получен успешно.'
                    grades:
                      id: 191
                      name: 'Бобылёва Изабелла Сергеевна'
                      description: 'Non autem vero ullam quas inventore est. Dolor at repellat aut nemo esse. Dolores debitis iusto qui soluta. Facere ad voluptatem aliquid et laborum.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 13
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quaerat
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 9
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно создан.'
                  grade:
                    id: 193
                    name: 'Бобров Витольд Максимович'
                    description: 'Quae et tempore reiciendis. Consequatur occaecati aut porro laudantium ratione quibusdam a optio. Nihil aspernatur ipsum porro nesciunt quia.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно создан.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 193
                      name:
                        type: string
                        example: 'Бобров Витольд Максимович'
                      description:
                        type: string
                        example: 'Quae et tempore reiciendis. Consequatur occaecati aut porro laudantium ratione quibusdam a optio. Nihil aspernatur ipsum porro nesciunt quia.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: fmkghkmtn
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Nihil rerum neque et dolor aliquid quo.'
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 12
                  nullable: false
              required:
                - name
                - gradeId
  '/api/grades/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение класса по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки по идентификатору получен успешно.'
                  grade:
                    id: 192
                    name: 'Платон Андреевич Журавлёв'
                    description: 'Quo nostrum laboriosam in amet sed dicta. Ut fugiat aliquam deserunt pariatur quis neque. Iure consectetur pariatur blanditiis. Atque iste eum sed autem nostrum itaque quasi.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки по идентификатору получен успешно.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 192
                      name:
                        type: string
                        example: 'Платон Андреевич Журавлёв'
                      description:
                        type: string
                        example: 'Quo nostrum laboriosam in amet sed dicta. Ut fugiat aliquam deserunt pariatur quis neque. Iure consectetur pariatur blanditiis. Atque iste eum sed autem nostrum itaque quasi.'
      tags:
        - Grade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 20
                  nullable: false
                userId:
                  type: integer
                  description: ''
                  example: 3
                  nullable: true
              required:
                - id
      security: []
    patch:
      summary: update
      operationId: update
      description: 'Редактирование класса'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Класс гонки успешно изменён.'
                  grade:
                    id: 194
                    name: 'Никита Алексеевич Тарасов'
                    description: 'Illum sequi rerum et architecto. Aut temporibus doloribus esse sit ut nisi quia. Et magnam quae tempore et velit est.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Класс гонки успешно изменён.'
                  grade:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 194
                      name:
                        type: string
                        example: 'Никита Алексеевич Тарасов'
                      description:
                        type: string
                        example: 'Illum sequi rerum et architecto. Aut temporibus doloribus esse sit ut nisi quia. Et magnam quae tempore et velit est.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Grade
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: mudemzldnqwrlygpa
                  nullable: true
                description:
                  type: string
                  description: ''
                  example: 'Ipsum culpa vitae sint ex.'
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 3
                  nullable: true
                gradeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example: 14
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the grade.'
        example: 2
        required: true
        schema:
          type: integer
  /api/locations:
    get:
      summary: get
      operationId: get
      description: 'Получение всех городов с фильтрацией'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
                  -
                    status: success
                    message: messages.location.get_all.success
                    data:
                      id: null
                      name: null
                      type: null
      tags:
        - Location
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 100.'
                  example: 12
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: nulla
                  nullable: true
                name:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                raceCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackCountExists:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commandCountExists:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Mrs.
                    surname: Prof.
                    patronymic: Ms.
                    date_of_birth: '2019-12-31'
                    city: Егорьевск
                    inn: '99999999999'
                    snils: '10000000000'
                    phone_number: '+7 (922) 974-5686'
                    start_number: '363'
                    group: Фотограф
                    rank_number: '99999'
                    rank: Бизнес-аналитик
                    community: 'МФО МеталОблВостокТраст'
                    coach: 'Аксёнова Тамара Дмитриевна'
                    moto_stamp: Ms.
                    engine: Dr.
                    number_and_seria: '9999999999'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mrs.
                      surname:
                        type: string
                        example: Prof.
                      patronymic:
                        type: string
                        example: Ms.
                      date_of_birth:
                        type: string
                        example: '2019-12-31'
                      city:
                        type: string
                        example: Егорьевск
                      inn:
                        type: string
                        example: '99999999999'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '+7 (922) 974-5686'
                      start_number:
                        type: string
                        example: '363'
                      group:
                        type: string
                        example: Фотограф
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: Бизнес-аналитик
                      community:
                        type: string
                        example: 'МФО МеталОблВостокТраст'
                      coach:
                        type: string
                        example: 'Аксёнова Тамара Дмитриевна'
                      moto_stamp:
                        type: string
                        example: Ms.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '9999999999'
                      region:
                        type: string
                        example: null
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: accusantium
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: numquam
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: earum
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: dicta
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                startNumber:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
                  example: 10
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: quaerat
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: fuga
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: aut
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: ducimus
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: accusamus
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: ex
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: ipsum
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: non
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 1
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 1
                  nullable: true
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Prof.
                    surname: Mr.
                    patronymic: Dr.
                    date_of_birth: '1998-09-30'
                    city: Одинцово
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '+7 (922) 625-5940'
                    start_number: '439'
                    group: Продюсер
                    rank_number: '100000'
                    rank: Архивист
                    community: 'ООО ЦементЮпитерИнжМаш'
                    coach: 'Майя Ивановна Лаврентьева'
                    moto_stamp: Mr.
                    engine: Dr.
                    number_and_seria: '10000000000'
                    region: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Dr.
                      date_of_birth:
                        type: string
                        example: '1998-09-30'
                      city:
                        type: string
                        example: Одинцово
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '+7 (922) 625-5940'
                      start_number:
                        type: string
                        example: '439'
                      group:
                        type: string
                        example: Продюсер
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Архивист
                      community:
                        type: string
                        example: 'ООО ЦементЮпитерИнжМаш'
                      coach:
                        type: string
                        example: 'Майя Ивановна Лаврентьева'
                      moto_stamp:
                        type: string
                        example: Mr.
                      engine:
                        type: string
                        example: Dr.
                      number_and_seria:
                        type: string
                        example: '10000000000'
                      region:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: nobis
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: deserunt
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: eum
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: vero
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: eligendi
                  nullable: true
                startNumber:
                  type: string
                  description: ''
                  example: a
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: dolores
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: debitis
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: culpa
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: perspiciatis
                  nullable: true
                numberAndSeria:
                  type: string
                  description: ''
                  example: similique
                  nullable: true
                region:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 3
                  nullable: true
                commandId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the commands table.'
                  example: 19
                  nullable: true
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 241
                      name: 'Корнилова Анжелика Алексеевна'
                      desc: 'Quo ex voluptas ut sunt. Et dolores sunt dignissimos beatae recusandae ut occaecati. Exercitationem unde expedita temporibus et optio reprehenderit. Voluptatum qui harum velit qui officia nihil.'
                      is_work: false
                      date_start: '2025-04-22T02:03:00.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 242
                      name: 'Ольга Романовна Моисеева'
                      desc: 'Error enim et est quod aperiam dolor ullam. Perferendis vero deserunt enim et expedita eos cupiditate. Enim sit ipsum enim. Reprehenderit hic ut placeat eaque.'
                      is_work: false
                      date_start: '2025-04-22T15:18:46.000000Z'
                      images: null
                      contacts: null
                      record_end: null
                      record_start: null
                      position_file: null
                      results_file: null
                      pdf_files: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 12
                  nullable: true
                userIdExists:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 8
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 9
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 16
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 11
                  items:
                    type: integer
                    nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                dateEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 19
                  nullable: true
                statusIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
                sortField:
                  type: string
                  description: ''
                  example: qui
                  nullable: true
                sort:
                  type: string
                  description: ''
                  example: debitis
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 244
                    name: 'Гордей Романович Лукин'
                    desc: 'Accusamus laboriosam est sit ea molestiae. Dolorem dolorem voluptatem aut nihil. Sed officia ab vero aut non.'
                    is_work: false
                    date_start: '2025-04-22T16:35:45.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 244
                      name:
                        type: string
                        example: 'Гордей Романович Лукин'
                      desc:
                        type: string
                        example: 'Accusamus laboriosam est sit ea molestiae. Dolorem dolorem voluptatem aut nihil. Sed officia ab vero aut non.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-22T16:35:45.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: jxyakntprfdoqhxjyeuuhncfspjyavnyblhlhtetfxlnqbnryvsyaqziprbloyyeewpwhnlujpfkvywhneho
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: false
                recordStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 14
                  nullable: true
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: string
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: illo
                  nullable: false
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 9
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 16
                  items:
                    type: integer
                    nullable: true
              required:
                - name
                - dateStart
                - locationId
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 243
                    name: 'Соболева Инга Борисовна'
                    desc: 'Quis enim ipsam rerum doloribus aperiam. Natus sint qui modi et sit tempora. Rerum perferendis officiis dicta. Non qui eum temporibus rerum sit alias.'
                    is_work: false
                    date_start: '2025-04-22T13:15:16.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 243
                      name:
                        type: string
                        example: 'Соболева Инга Борисовна'
                      desc:
                        type: string
                        example: 'Quis enim ipsam rerum doloribus aperiam. Natus sint qui modi et sit tempora. Rerum perferendis officiis dicta. Non qui eum temporibus rerum sit alias.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-22T13:15:16.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 6
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                favouritesUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                commissionUser:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 7
                  items:
                    type: integer
                    nullable: true
      security: []
    delete:
      summary: delete
      operationId: delete
      description: 'Удаление гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно удалена.'
                  race:
                    id: 248
                    name: 'Голубев Геннадий Иванович'
                    desc: 'Dolor magnam modi dicta laborum quis quisquam. Unde inventore quis ab. Labore impedit et nesciunt ratione. Architecto id distinctio dolores culpa exercitationem sit temporibus recusandae.'
                    is_work: true
                    date_start: '2025-04-22T02:21:00.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно удалена.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 248
                      name:
                        type: string
                        example: 'Голубев Геннадий Иванович'
                      desc:
                        type: string
                        example: 'Dolor magnam modi dicta laborum quis quisquam. Unde inventore quis ab. Labore impedit et nesciunt ratione. Architecto id distinctio dolores culpa exercitationem sit temporibus recusandae.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-04-22T02:21:00.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 245
                    name: 'Роберт Львович Осипов'
                    desc: 'Soluta expedita sint enim non. Itaque eos sit nulla voluptatem maiores amet aut. Incidunt temporibus ad cupiditate animi.'
                    is_work: true
                    date_start: '2025-04-22T16:15:15.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 245
                      name:
                        type: string
                        example: 'Роберт Львович Осипов'
                      desc:
                        type: string
                        example: 'Soluta expedita sint enim non. Itaque eos sit nulla voluptatem maiores amet aut. Incidunt temporibus ad cupiditate animi.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-04-22T16:15:15.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: ocvfquzafmazkczscdafdtigtbotulxtwnoukhnwhodgmrlsvvrcyjyqunwmmoxnlodvluvbiem
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: culpa
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                recordEnd:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                recordStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-04-22T11:31:10'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 15
                  nullable: true
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - et
                  items:
                    type: string
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                gradeIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the grades table.'
                  example:
                    - 15
                  items:
                    type: integer
                    nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 8
                  nullable: true
                statusId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the statuses table.'
                  example: 1
                  nullable: true
                cupIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the cups table.'
                  example:
                    - 9
                  items:
                    type: integer
                    nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/toggle-is-work':
    get:
      summary: toggleIsWork
      operationId: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Состояние гонки успешно изменено на не рабочее.'
                  race:
                    id: 246
                    name: 'Эмилия Ивановна Никифорова'
                    desc: 'Quisquam dolorum aperiam quo ea enim autem molestiae labore. In laboriosam quis consequuntur eius itaque quas quo. Esse asperiores distinctio totam aut harum doloremque facere.'
                    is_work: false
                    date_start: '2025-04-22T01:04:29.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Состояние гонки успешно изменено на не рабочее.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 246
                      name:
                        type: string
                        example: 'Эмилия Ивановна Никифорова'
                      desc:
                        type: string
                        example: 'Quisquam dolorum aperiam quo ea enim autem molestiae labore. In laboriosam quis consequuntur eius itaque quas quo. Esse asperiores distinctio totam aut harum doloremque facere.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-22T01:04:29.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/commission/add':
    post:
      summary: addCommission
      operationId: addCommission
      description: 'Прикрепить судей к гонке.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.commission.add.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.commission.add.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Доступ запрещен.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Доступ запрещен.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.user.add_commission.incorrect_role
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.user.add_commission.incorrect_role
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                usersIds:
                  type: array
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example:
                    - 10
                  items:
                    type: integer
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  '/api/races/{id}/add-document':
    post:
      summary: addDocument
      operationId: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно добавлен'
                  race:
                    id: 249
                    name: 'Прохор Александрович Хохлов'
                    desc: 'Minima est recusandae deserunt. Quia incidunt quos nostrum aut reiciendis enim. Ipsum explicabo labore in.'
                    is_work: false
                    date_start: '2025-04-22T21:08:23.000000Z'
                    images: null
                    contacts: null
                    record_end: null
                    record_start: null
                    position_file: null
                    results_file: null
                    pdf_files: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно добавлен'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 249
                      name:
                        type: string
                        example: 'Прохор Александрович Хохлов'
                      desc:
                        type: string
                        example: 'Minima est recusandae deserunt. Quia incidunt quos nostrum aut reiciendis enim. Ipsum explicabo labore in.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-04-22T21:08:23.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      record_end:
                        type: string
                        example: null
                      record_start:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
                      pdf_files:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pdfFiles:
                  type: array
                  description: 'Must be a file.'
                  items:
                    type: string
                    format: binary
                pdfFilesDel:
                  type: array
                  description: ''
                  example:
                    - cum
                  items:
                    type: string
              required:
                - pdfFiles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 24
        required: true
        schema:
          type: integer
  /api/recovery-password/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка токена восстановления на почту'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ссылка на восстановление пароля отправлена на вашу электронную почту.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table.'
                  example: schneider.shad@example.com
                  nullable: false
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.crona.com/consequatur-praesentium-vel-repellendus-a-pariatur-quam-non.html'
                  nullable: false
              required:
                - email
                - url
      security: []
  /api/recovery-password/recovery:
    post:
      summary: recovery
      operationId: recovery
      description: 'Смена пароля с токена из почты'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пароль был успешно изменён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пароль был успешно изменён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
      tags:
        - RecoveryPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: vero
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: '"\j''.-@-[[-|OT;'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: beatae
                  nullable: false
              required:
                - token
                - password
                - password_confirmation
      security: []
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 870
                    name: 'Сидоров Геннадий Львович'
                    email: sergei.bobylev@example.org
                    email_verified_at: '2025-04-22T11:31:10.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 870
                      name:
                        type: string
                        example: 'Сидоров Геннадий Львович'
                      email:
                        type: string
                        example: sergei.bobylev@example.org
                      email_verified_at:
                        type: string
                        example: '2025-04-22T11:31:10.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 12
                  nullable: false
              required:
                - roleId
  /api/statuses:
    get:
      summary: get
      operationId: get
      description: 'Получение всех статусов'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 57
                      name: 'Кулагин Тарас Владимирович'
                  -
                    status: success
                    message: 'Статусы получены успешно.'
                    statuses:
                      id: 58
                      name: 'Анна Борисовна Зиновьева'
      tags:
        - Status
      security: []
  /api/stores:
    post:
      summary: create
      operationId: create
      description: 'Создание магазина'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.store.create.success
                  store:
                    id: 56
                    login: 'Ipsam repellendus maiores non vel ea saepe laboriosam. Laborum non necessitatibus voluptatem assumenda. Et itaque itaque nam fugiat dolorem.'
                    password_1: 'H*/ct`5K|8T\*Nza-Y'
                    password_2: 'y*viK8NP?HQJ'
                    token: 'Et dolorem tenetur a quo aut veritatis inventore sed. Sint ex voluptatem architecto sed quam. Est ducimus sint eligendi iste illo. Suscipit iste qui ut repellendus aut saepe.'
                    user: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.store.create.success
                  store:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 56
                      login:
                        type: string
                        example: 'Ipsam repellendus maiores non vel ea saepe laboriosam. Laborum non necessitatibus voluptatem assumenda. Et itaque itaque nam fugiat dolorem.'
                      password_1:
                        type: string
                        example: 'H*/ct`5K|8T\*Nza-Y'
                      password_2:
                        type: string
                        example: 'y*viK8NP?HQJ'
                      token:
                        type: string
                        example: 'Et dolorem tenetur a quo aut veritatis inventore sed. Sint ex voluptatem architecto sed quam. Est ducimus sint eligendi iste illo. Suscipit iste qui ut repellendus aut saepe.'
                      user:
                        type: string
                        example: null
      tags:
        - Store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: inaxhzaakqibx
                  nullable: false
                password_1:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: txcjqfycprrt
                  nullable: false
                password_2:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: miqwpgwpqhzblt
                  nullable: false
                token:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255.'
                  example: aqpqmhdaotcnhfdqtdirztg
                  nullable: false
              required:
                - login
                - password_1
                - password_2
                - token
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 205
                      name: Ветеринар
                      address: '892596, Астраханская область, город Сергиев Посад, въезд Сталина, 20'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Низкая
                        color: '#22CA3D'
                      desc: 'Non molestiae voluptate aut omnis et rerum. Unde quo voluptatem perferendis vel. Qui optio quis laudantium cum voluptate sint quia. Libero quia sunt magni sed aut et quibusdam officia. Voluptatem voluptatem accusamus eos voluptatem distinctio. Dolor sequi qui non maiores quidem rerum. Qui qui ut tenetur consequatur aspernatur totam. Quae in illum quae nihil veniam sed. Quod tenetur commodi fugit nihil. Inventore quibusdam id quasi quo.'
                      length: 173
                      turns: 17
                      free: true
                      is_work: false
                      spec: null
                      contacts: null
                      location:
                        id: 72
                        name: Тыва
                        type: республика
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 206
                      name: Пианист
                      address: '839598, Челябинская область, город Ногинск, ул. Балканская, 37'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Repellat qui assumenda dolor nobis ullam. Animi odit aut perspiciatis cumque nulla dolorum. Odio adipisci nostrum aut id dolorem esse quidem. Neque maiores qui similique quis. Eos officiis non nostrum eligendi. Quis dolorem mollitia quasi repudiandae eligendi deleniti. Molestiae quia dignissimos non fuga earum. Ab quis aliquid esse alias nulla cupiditate dicta.'
                      length: 785
                      turns: 26
                      free: true
                      is_work: true
                      spec: null
                      contacts: null
                      location:
                        id: 22
                        name: Калининградская
                        type: область
                      light: null
                      season: null
                      schema_img: null
                      logo: null
                      store: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 14
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: iure
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 9
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 17
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 208
                    name: Радист
                    address: '646702, Сахалинская область, город Наро-Фоминск, проезд Ленина, 10'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Высокая
                      color: '#FD1215'
                    desc: 'Natus veniam autem molestiae. Odit error enim sit cumque a error sit. In reiciendis sed quos sint ut. Ea ut dolores assumenda nostrum tempora explicabo mollitia beatae. Pariatur voluptas et nisi velit fugit cum ab. Voluptas minima et dicta quibusdam. Animi asperiores deserunt quae dolores. Est et eaque ea. Architecto inventore veniam voluptatibus id ratione consequatur. Cum error nisi repellat animi. Labore non qui sunt et officiis assumenda. Animi consequatur officiis doloribus est.'
                    length: 41
                    turns: 74
                    free: false
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 3
                      name: Алтайский
                      type: край
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 208
                      name:
                        type: string
                        example: Радист
                      address:
                        type: string
                        example: '646702, Сахалинская область, город Наро-Фоминск, проезд Ленина, 10'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Высокая
                          color:
                            type: string
                            example: '#FD1215'
                      desc:
                        type: string
                        example: 'Natus veniam autem molestiae. Odit error enim sit cumque a error sit. In reiciendis sed quos sint ut. Ea ut dolores assumenda nostrum tempora explicabo mollitia beatae. Pariatur voluptas et nisi velit fugit cum ab. Voluptas minima et dicta quibusdam. Animi asperiores deserunt quae dolores. Est et eaque ea. Architecto inventore veniam voluptatibus id ratione consequatur. Cum error nisi repellat animi. Labore non qui sunt et officiis assumenda. Animi consequatur officiis doloribus est.'
                      length:
                        type: integer
                        example: 41
                      turns:
                        type: integer
                        example: 74
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 3
                          name:
                            type: string
                            example: Алтайский
                          type:
                            type: string
                            example: край
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: yhijibqgycmcaidzggdrcngnhbgiencpyfxsshzuyhgi
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -180
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 1
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: rem
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                contacts:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                spec:
                  type: object
                  description: ''
                  example: null
                  nullable: true
                  properties: {  }
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 9
                  nullable: true
                logo:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                light:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                season:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                schemaImg:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 8
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 207
                    name: 'Креативный директор'
                    address: '158421, Орловская область, город Озёры, бульвар Косиора, 73'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Itaque nesciunt eius dolor et soluta. Iste in et rerum omnis dicta est sit nihil. Voluptas voluptate consequatur molestiae eius. Nisi nesciunt eaque harum blanditiis distinctio atque veritatis. Sed nihil ipsa provident voluptatem reprehenderit mollitia. Ea provident sit consectetur sed sed iste. Sit corporis fuga quod porro. Est eum quis autem illum qui enim. Ut repellendus id esse repellat perferendis ea. Provident sunt sunt minus aspernatur. Nulla sit iste in accusantium accusantium non.'
                    length: 666
                    turns: 69
                    free: false
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 49
                      name: Омская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 207
                      name:
                        type: string
                        example: 'Креативный директор'
                      address:
                        type: string
                        example: '158421, Орловская область, город Озёры, бульвар Косиора, 73'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Itaque nesciunt eius dolor et soluta. Iste in et rerum omnis dicta est sit nihil. Voluptas voluptate consequatur molestiae eius. Nisi nesciunt eaque harum blanditiis distinctio atque veritatis. Sed nihil ipsa provident voluptatem reprehenderit mollitia. Ea provident sit consectetur sed sed iste. Sit corporis fuga quod porro. Est eum quis autem illum qui enim. Ut repellendus id esse repellat perferendis ea. Provident sunt sunt minus aspernatur. Nulla sit iste in accusantium accusantium non.'
                      length:
                        type: integer
                        example: 666
                      turns:
                        type: integer
                        example: 69
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 49
                          name:
                            type: string
                            example: Омская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    post:
      summary: update
      operationId: update
      description: 'Метод редактирования трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно изменён.'
                  track:
                    id: 209
                    name: Водитель
                    address: '927043, Пензенская область, город Луховицы, пер. Ленина, 46'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Necessitatibus dolorum fugiat fuga nihil eaque. Est excepturi repudiandae ipsum amet sunt repellat. Sit voluptates explicabo at. Doloribus et voluptas officiis cumque. Itaque consequatur asperiores recusandae magni quasi aut. Nam quod odio dolorem consectetur autem minus omnis. Aut ut facilis perferendis ut. Atque voluptates dolor aut voluptates. Optio nesciunt placeat fugiat qui consequatur officia incidunt. Numquam ut voluptatum cumque molestias.'
                    length: 741
                    turns: 11
                    free: true
                    is_work: false
                    spec: null
                    contacts: null
                    location:
                      id: 69
                      name: Тверская
                      type: область
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно изменён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 209
                      name:
                        type: string
                        example: Водитель
                      address:
                        type: string
                        example: '927043, Пензенская область, город Луховицы, пер. Ленина, 46'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Necessitatibus dolorum fugiat fuga nihil eaque. Est excepturi repudiandae ipsum amet sunt repellat. Sit voluptates explicabo at. Doloribus et voluptas officiis cumque. Itaque consequatur asperiores recusandae magni quasi aut. Nam quod odio dolorem consectetur autem minus omnis. Aut ut facilis perferendis ut. Atque voluptates dolor aut voluptates. Optio nesciunt placeat fugiat qui consequatur officia incidunt. Numquam ut voluptatum cumque molestias.'
                      length:
                        type: integer
                        example: 741
                      turns:
                        type: integer
                        example: 11
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: false
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 69
                          name:
                            type: string
                            example: Тверская
                          type:
                            type: string
                            example: область
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: aqajritnpbfrlltcacqjmyqivjkioqsxqzbxt
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: repudiandae
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                imagesAdd:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                imagesDel:
                  type: array
                  description: ''
                  example:
                    - consequuntur
                  items:
                    type: string
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 8
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: fugiat
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 20
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 19
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                spec:
                  type: string
                  description: ''
                  example: null
                  nullable: true
                locationId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the locations table.'
                  example: 5
                  nullable: true
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 13
                  nullable: true
                storeId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the stores table.'
                  example: 20
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
    delete:
      summary: delete
      operationId: delete
      description: 'Метод удаления трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно удалён.'
                  track:
                    id: 210
                    name: Писатель
                    address: '128197, Иркутская область, город Солнечногорск, наб. Балканская, 20'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Ducimus non et nam ipsam voluptates ab qui id. Sit natus aliquam dignissimos ratione facilis a. Earum et architecto dicta dolorum. Libero tenetur facilis omnis optio possimus. Ea enim nam sit consectetur dolore similique id. Voluptate porro ut nobis reprehenderit aut. Sint rem ut nihil. Dignissimos harum qui dicta incidunt optio rerum. Quo occaecati et consequatur nesciunt accusamus.'
                    length: 301
                    turns: 82
                    free: true
                    is_work: true
                    spec: null
                    contacts: null
                    location:
                      id: 80
                      name: Чеченская
                      type: республика
                    light: null
                    season: null
                    schema_img: null
                    logo: null
                    store: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно удалён.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 210
                      name:
                        type: string
                        example: Писатель
                      address:
                        type: string
                        example: '128197, Иркутская область, город Солнечногорск, наб. Балканская, 20'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Ducimus non et nam ipsam voluptates ab qui id. Sit natus aliquam dignissimos ratione facilis a. Earum et architecto dicta dolorum. Libero tenetur facilis omnis optio possimus. Ea enim nam sit consectetur dolore similique id. Voluptate porro ut nobis reprehenderit aut. Sint rem ut nihil. Dignissimos harum qui dicta incidunt optio rerum. Quo occaecati et consequatur nesciunt accusamus.'
                      length:
                        type: integer
                        example: 301
                      turns:
                        type: integer
                        example: 82
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      location:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 80
                          name:
                            type: string
                            example: Чеченская
                          type:
                            type: string
                            example: республика
                      light:
                        type: string
                        example: null
                      season:
                        type: string
                        example: null
                      schema_img:
                        type: string
                        example: null
                      logo:
                        type: string
                        example: null
                      store:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 24
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно.'
                  user:
                    id: 865
                    name: 'Большакова Нелли Романовна'
                    email: sefimova@example.com
                    email_verified_at: '2025-04-22T11:31:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 865
                      name:
                        type: string
                        example: 'Большакова Нелли Романовна'
                      email:
                        type: string
                        example: sefimova@example.com
                      email_verified_at:
                        type: string
                        example: '2025-04-22T11:31:09.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление аккаунта пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь был успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь был успешно удалён.'
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь получен успешно.'
                  user:
                    id: 866
                    name: 'Любовь Львовна Князева'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь получен успешно.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 866
                      name:
                        type: string
                        example: 'Любовь Львовна Князева'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 14
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  user:
                    id: 867
                    name: 'Молчанов Донат Львович'
                    email: danila.baranova@example.net
                    email_verified_at: '2025-04-22T11:31:09.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 867
                      name:
                        type: string
                        example: 'Молчанов Донат Львович'
                      email:
                        type: string
                        example: danila.baranova@example.net
                      email_verified_at:
                        type: string
                        example: '2025-04-22T11:31:09.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ошибка при изменении информации о пользователе. Попробуйте позже.'
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: wktbfmiokssvphdq
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: bartell.odie@example.net
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
                number:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 10. Количество символов в значении поля value не может превышать 12.'
                  example: nk
                  nullable: true
  /api/users-commissions:
    get:
      summary: getCommissions
      operationId: getCommissions
      description: 'Получить список судей'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 868
                      name: 'Зоя Фёдоровна Ларионова'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Судьи были получены успешно.'
                    users:
                      id: 869
                      name: 'Инна Сергеевна Лобанова'
                      avatar: null
                      personal: []
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: sit
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: culpa
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 21
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Код для подтверждения электронной почты отправлена на вашу почту.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Код для подтверждения электронной почты отправлена на вашу почту.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Почта уже подтверждена.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Почта уже подтверждена.'
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Ваша почта успешно подтверждена.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Ваша почта успешно подтверждена.'
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Почта уже подтверждена.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Почта уже подтверждена.'
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: 'Код не подходит.'
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: 'Код не подходит.'
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 19
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Attendance
    description: 'Методы связанные с платными услугами'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: AuthPhone
    description: 'Авторизация пользователей через телефон.'
  -
    name: Command
    description: 'Методы связанные с командами'
  -
    name: Cup
    description: 'Методы связанные с кубками'
  -
    name: Degree
    description: 'Методы связанные с уровнями кубков. Например всероссийский, областной и т.д.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: Endpoints
    description: ''
  -
    name: FavoriteUser
    description: 'Методы связанные с избранными гонками.'
  -
    name: Grade
    description: 'Методы связанные с классами'
  -
    name: Location
    description: 'Методы для взаимодействия с городами'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: RecoveryPassword
    description: 'Методы связанные с восстановлением пароля'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Status
    description: 'Методы связанные с статусами гонок'
  -
    name: Store
    description: 'Методы связанные с магазинами'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
