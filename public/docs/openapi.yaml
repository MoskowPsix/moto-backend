openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  '/api/races/{id}/toggle-appointment-race':
    post:
      summary: toggle
      operationId: toggle
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно создана.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно создана.'
                  -
                    description: ''
                    type: object
                    example:
                      status: success
                      message: 'Запись на гонку успешно удалена.'
                    properties:
                      status:
                        type: string
                        example: success
                      message:
                        type: string
                        example: 'Запись на гонку успешно удалена.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users':
    get:
      summary: GetUsersAppointmentRace
      operationId: getUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 60
                      name: 'Гордеева Татьяна Дмитриевна'
                      avatar: null
                      personal: []
                  -
                    status: success
                    message: 'Пользователи получены успешно.'
                    users:
                      id: 61
                      name: 'Валентина Дмитриевна Котова'
                      avatar: null
                      personal: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                paginate:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: earum
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 2
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/appointment-race/users-table':
    get:
      summary: getTable
      operationId: getTable
      description: 'Получить ссылку на таблицу участников'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.appointment.create_table.success
                  table_url: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.appointment.create_table.success
                  table_url:
                    type: array
                    example: []
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - AppointmentRace
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: Login
      operationId: login
      description: 'Авторизация пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно авторизовались'
                  access_token: 17|9v8RDb3KioLn528fU1Ud3PH3r4eKABpHnf4gfXK2ad087021
                  token_type: Bearer
                  user:
                    id: 53
                    name: 'Михайлов Артур Борисович'
                    email: ustinov.miroslav@example.net
                    email_verified_at: '2025-02-04T10:24:44.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно авторизовались'
                  access_token:
                    type: string
                    example: 17|9v8RDb3KioLn528fU1Ud3PH3r4eKABpHnf4gfXK2ad087021
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 53
                      name:
                        type: string
                        example: 'Михайлов Артур Борисович'
                      email:
                        type: string
                        example: ustinov.miroslav@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:24:44.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Неудачная авторизации'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Неудачная авторизации'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
                  example: clakin@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: "GG'vY>i|{q"
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/register:
    post:
      summary: Register
      operationId: register
      description: 'Регистрация нового пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Вы успешно зарегистрированы'
                  access_token: 18|bYcGO4pNgltUhus1cpbDFqlOr4lL15LAyxzVCQSq19987d28
                  token_type: Bearer
                  user:
                    id: 54
                    name: 'Станислав Андреевич Блохин'
                    email: gleb03@example.net
                    email_verified_at: '2025-02-04T10:24:45.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Вы успешно зарегистрированы'
                  access_token:
                    type: string
                    example: 18|bYcGO4pNgltUhus1cpbDFqlOr4lL15LAyxzVCQSq19987d28
                  token_type:
                    type: string
                    example: Bearer
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 54
                      name:
                        type: string
                        example: 'Станислав Андреевич Блохин'
                      email:
                        type: string
                        example: gleb03@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:24:45.000000Z'
                      avatar:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Регистрация прошла неудачно'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Регистрация прошла неудачно'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: ofadrbhzmzwb
                  nullable: false
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: gcole@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 8.'
                  example: 'bAK)j}R/X>b-bHDk'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'The value and <code>password</code> must match.'
                  example: id
                  nullable: false
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/logout:
    post:
      summary: logout
      operationId: logout
      description: 'Выход пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь успешно вышел.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь успешно вышел.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'При выходе пользователя произошла критическия ошибка.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'При выходе пользователя произошла критическия ошибка.'
      tags:
        - Auth
  /api/users/cabinet/documents:
    post:
      summary: Create
      operationId: create
      description: 'Создание документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно создан.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно создан.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
      tags:
        - Document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: eos
                  nullable: false
                data:
                  type: string
                  description: ''
                  example: earum
                  nullable: false
              required:
                - type
                - data
      security: []
    get:
      summary: GetForUser
      operationId: getForUser
      description: 'Получение всех документов пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
                  -
                    status: success
                    message: 'Документы пользователя получены успешно.'
                    documents:
                      id: 9
                      name: file_67a1c13b2f577
                      type: licenses
                      path: no-file
                      data:
                        licensesNumber: '11112222'
                        licensesFileLink: ssssssssss
      tags:
        - Document
      security: []
  '/api/users/cabinet/documents/{id}':
    get:
      summary: GetForUserById
      operationId: getForUserById
      description: 'Получение документа пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ по идентификатору получен успешно.'
                  document:
                    id: 9
                    name: file_67a1c13b2f577
                    type: licenses
                    path: no-file
                    data:
                      licensesNumber: '11112222'
                      licensesFileLink: ssssssssss
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ по идентификатору получен успешно.'
                  document:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 9
                      name:
                        type: string
                        example: file_67a1c13b2f577
                      type:
                        type: string
                        example: licenses
                      path:
                        type: string
                        example: no-file
                      data:
                        type: object
                        properties:
                          licensesNumber:
                            type: string
                            example: '11112222'
                          licensesFileLink:
                            type: string
                            example: ssssssssss
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Документ не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Документ не найден.'
      tags:
        - Document
      security: []
    delete:
      summary: Delete
      operationId: delete
      description: 'Удаление документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Документ успешно удалён.'
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Документ успешно удалён.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  '/api/users/cabinet/documents/{id}/update':
    post:
      summary: Update
      operationId: update
      description: 'Изменение документа пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 9
                  name: file_67a1c13b2f577
                  type: licenses
                  path: no-file
                  data: '{"licensesNumber":"11112222","licensesFileLink":"ssssssssss"}'
                  user_id: 1
                  created_at: '2025-02-04T07:26:51.000000Z'
                  updated_at: '2025-02-04T07:26:51.000000Z'
                properties:
                  id:
                    type: integer
                    example: 9
                  name:
                    type: string
                    example: file_67a1c13b2f577
                  type:
                    type: string
                    example: licenses
                  path:
                    type: string
                    example: no-file
                  data:
                    type: string
                    example: '{"licensesNumber":"11112222","licensesFileLink":"ssssssssss"}'
                  user_id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2025-02-04T07:26:51.000000Z'
                  updated_at:
                    type: string
                    example: '2025-02-04T07:26:51.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Document
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                  description: ''
                  example: null
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the document.'
        example: 9
        required: true
        schema:
          type: integer
  /api/users/cabinet/personal-info:
    post:
      summary: Create
      operationId: create
      description: 'Создать запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе создана успешно.'
                  personal_info:
                    name: Mr.
                    surname: Mr.
                    patronymic: Mrs.
                    date_of_birth: '1991-08-03'
                    city: Чехов
                    inn: '100000000000'
                    snils: '9999999999'
                    phone_number: '(495) 756-9623'
                    start_number: '905'
                    group: Егерь
                    rank_number: '99999'
                    rank: 'Системный аналитик'
                    community: 'ООО РемМорТелекомОпт'
                    coach: 'Миронов Сергей Андреевич'
                    moto_stamp: Dr.
                    engine: Dr.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе создана успешно.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Mr.
                      surname:
                        type: string
                        example: Mr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1991-08-03'
                      city:
                        type: string
                        example: Чехов
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '9999999999'
                      phone_number:
                        type: string
                        example: '(495) 756-9623'
                      start_number:
                        type: string
                        example: '905'
                      group:
                        type: string
                        example: Егерь
                      rank_number:
                        type: string
                        example: '99999'
                      rank:
                        type: string
                        example: 'Системный аналитик'
                      community:
                        type: string
                        example: 'ООО РемМорТелекомОпт'
                      coach:
                        type: string
                        example: 'Миронов Сергей Андреевич'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Dr.
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: error
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: placeat
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T10:24:45'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: nostrum
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: est
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: voluptas
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: nesciunt
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 7
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: pariatur
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: sint
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: illum
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: eos
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: adipisci
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: modi
                  nullable: true
      security: []
    patch:
      summary: Update
      operationId: update
      description: 'Обновить запись персональных данных'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    name: Prof.
                    surname: Dr.
                    patronymic: Mrs.
                    date_of_birth: '1989-09-06'
                    city: Видное
                    inn: '100000000000'
                    snils: '10000000000'
                    phone_number: '(495) 919-3343'
                    start_number: '863'
                    group: 'Научный сотрудник'
                    rank_number: '100000'
                    rank: Телохранитель
                    community: 'ЗАО УралБухМикроПром'
                    coach: 'Алексеева Розалина Алексеевна'
                    moto_stamp: Dr.
                    engine: Mrs.
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Информация о пользователе успешно изменена.'
                  personal_info:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Prof.
                      surname:
                        type: string
                        example: Dr.
                      patronymic:
                        type: string
                        example: Mrs.
                      date_of_birth:
                        type: string
                        example: '1989-09-06'
                      city:
                        type: string
                        example: Видное
                      inn:
                        type: string
                        example: '100000000000'
                      snils:
                        type: string
                        example: '10000000000'
                      phone_number:
                        type: string
                        example: '(495) 919-3343'
                      start_number:
                        type: string
                        example: '863'
                      group:
                        type: string
                        example: 'Научный сотрудник'
                      rank_number:
                        type: string
                        example: '100000'
                      rank:
                        type: string
                        example: Телохранитель
                      community:
                        type: string
                        example: 'ЗАО УралБухМикроПром'
                      coach:
                        type: string
                        example: 'Алексеева Розалина Алексеевна'
                      moto_stamp:
                        type: string
                        example: Dr.
                      engine:
                        type: string
                        example: Mrs.
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - PersonalInfo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: true
                surname:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                patronymic:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: true
                dateOfBirth:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T10:24:45'
                  nullable: true
                city:
                  type: string
                  description: ''
                  example: doloremque
                  nullable: true
                inn:
                  type: string
                  description: ''
                  example: maxime
                  nullable: true
                snils:
                  type: string
                  description: ''
                  example: tempora
                  nullable: true
                phoneNumber:
                  type: string
                  description: ''
                  example: et
                  nullable: true
                startNumber:
                  type: integer
                  description: ''
                  example: 9
                  nullable: true
                group:
                  type: string
                  description: ''
                  example: omnis
                  nullable: true
                rank:
                  type: string
                  description: ''
                  example: atque
                  nullable: true
                rankNumber:
                  type: string
                  description: ''
                  example: unde
                  nullable: true
                community:
                  type: string
                  description: ''
                  example: molestias
                  nullable: true
                coach:
                  type: string
                  description: ''
                  example: enim
                  nullable: true
                motoStamp:
                  type: string
                  description: ''
                  example: sed
                  nullable: true
                engine:
                  type: string
                  description: ''
                  example: est
                  nullable: true
      security: []
  /api/races:
    get:
      summary: get
      operationId: get
      description: 'Получение всех гонок по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 38
                      name: 'София Алексеевна Нестерова'
                      desc: 'Laborum dolores molestiae ex accusamus mollitia magni quis sunt. Ut illo in qui sunt cupiditate non. Voluptatibus aperiam incidunt reiciendis ut illo sint. Optio quia modi accusantium inventore qui.'
                      is_work: true
                      date_start: '2025-02-04T03:46:03.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
                  -
                    status: success
                    message: 'Гонки получены успешно.'
                    races:
                      id: 39
                      name: 'Федотов Марк Максимович'
                      desc: 'Quo aut tenetur aut in amet. Dolorem fuga ad similique saepe quasi. Dicta sit beatae eligendi odio et. Officiis ea quam praesentium quod quis a.'
                      is_work: true
                      date_start: '2025-02-04T19:22:39.000000Z'
                      images: null
                      contacts: null
                      position_file: null
                      results_file: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 5
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: earum
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 15
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 2
                  nullable: true
                pastRace:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Создание гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка успешно создана.'
                  race:
                    id: 41
                    name: 'Горбунова Анфиса Борисовна'
                    desc: 'Nobis quia reprehenderit doloremque quas. Harum dicta sint debitis omnis. Fuga iusto deserunt sit. Deleniti et maxime ab quas. Numquam commodi quos soluta dolorem dolores facilis.'
                    is_work: true
                    date_start: '2025-02-04T07:57:58.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка успешно создана.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 41
                      name:
                        type: string
                        example: 'Горбунова Анфиса Борисовна'
                      desc:
                        type: string
                        example: 'Nobis quia reprehenderit doloremque quas. Harum dicta sint debitis omnis. Fuga iusto deserunt sit. Deleniti et maxime ab quas. Numquam commodi quos soluta dolorem dolores facilis.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-04T07:57:58.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: uidmx
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: magni
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T10:24:45'
                  nullable: false
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 15
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
              required:
                - name
                - dateStart
                - trackId
      security: []
  '/api/races/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение гонки по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Гонка по идентификатору получена успешно.'
                  race:
                    id: 40
                    name: 'Мальвина Евгеньевна Шарапова'
                    desc: 'Autem quidem itaque ex in animi rem. Provident cupiditate et tempora quam consequatur. Quis voluptatem similique quis omnis ex consequatur.'
                    is_work: true
                    date_start: '2025-02-04T18:13:41.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Гонка по идентификатору получена успешно.'
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 40
                      name:
                        type: string
                        example: 'Мальвина Евгеньевна Шарапова'
                      desc:
                        type: string
                        example: 'Autem quidem itaque ex in animi rem. Provident cupiditate et tempora quam consequatur. Quis voluptatem similique quis omnis ex consequatur.'
                      is_work:
                        type: boolean
                        example: true
                      date_start:
                        type: string
                        example: '2025-02-04T18:13:41.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
      tags:
        - Race
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ''
                  example: 17
                  nullable: true
                appointmentUser:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  '/api/races/{id}/update':
    post:
      summary: update
      operationId: update
      description: 'Редактирование гонки'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.race.update.success
                  race:
                    id: 42
                    name: 'Сергей Дмитриевич Козлов'
                    desc: 'Sint totam enim eligendi quos laborum. Unde nobis et sed repellendus distinctio. Magni nulla ratione numquam doloribus alias labore. Expedita a delectus error rerum rerum voluptatum ut.'
                    is_work: false
                    date_start: '2025-02-04T20:02:10.000000Z'
                    images: null
                    contacts: null
                    position_file: null
                    results_file: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.race.update.success
                  race:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                      name:
                        type: string
                        example: 'Сергей Дмитриевич Козлов'
                      desc:
                        type: string
                        example: 'Sint totam enim eligendi quos laborum. Unde nobis et sed repellendus distinctio. Magni nulla ratione numquam doloribus alias labore. Expedita a delectus error rerum rerum voluptatum ut.'
                      is_work:
                        type: boolean
                        example: false
                      date_start:
                        type: string
                        example: '2025-02-04T20:02:10.000000Z'
                      images:
                        type: string
                        example: null
                      contacts:
                        type: string
                        example: null
                      position_file:
                        type: string
                        example: null
                      results_file:
                        type: string
                        example: null
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Доступ запрещен.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Доступ запрещен.'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Race
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в значении поля value не может превышать 255. Количество символов в поле value должно быть не меньше 3.'
                  example: peitninjtficnweybjjlpweouktnpydkptdlkmgckxennejrjwvjcryvgcagicmxfogjlfncdqkxusjru
                  nullable: true
                desc:
                  type: string
                  description: ''
                  example: quisquam
                  nullable: true
                dateStart:
                  type: string
                  description: 'Значение поля value не является датой.'
                  example: '2025-02-04T10:24:45'
                  nullable: true
                trackId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the tracks table.'
                  example: 8
                  nullable: true
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                positionFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
                resultsFile:
                  type: string
                  format: binary
                  description: 'Must be a file.'
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the race.'
        example: 2
        required: true
        schema:
          type: integer
  /api/roles-change:
    get:
      summary: GetChangeRoles
      operationId: getChangeRoles
      description: 'Получение ролей которые может сменить обычный пользователь'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
                  -
                    status: success
                    message: 'Роль к которым может перейти пользователь успешно получены.'
                    role:
                      id: 1
                      name: Root
      tags:
        - Role
    post:
      summary: ChangeRoleForDefaultUser
      operationId: changeRoleForDefaultUser
      description: 'Сменить роль для обычного пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Роль пользователя успешно изменена.'
                  user:
                    id: 59
                    name: 'Рафаил Сергеевич Муравьёв'
                    email: immanuil.kononov@example.com
                    email_verified_at: '2025-02-04T10:24:45.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Роль пользователя успешно изменена.'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 59
                      name:
                        type: string
                        example: 'Рафаил Сергеевич Муравьёв'
                      email:
                        type: string
                        example: immanuil.kononov@example.com
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:24:45.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - Role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the roles table.'
                  example: 19
                  nullable: false
              required:
                - roleId
  /api/tracks:
    get:
      summary: get
      operationId: get
      description: 'Получение трасс по фильтрам'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 31
                      name: Арт-директор
                      address: '380054, Орловская область, город Чехов, въезд Сталина, 99'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Высокая
                        color: '#FD1215'
                      desc: 'Ea sint ut inventore beatae voluptas eveniet soluta. Beatae modi velit est architecto commodi eos. Repellat incidunt enim ipsa accusamus id quia ut dolorem. Harum voluptatibus eveniet dolor voluptatem non itaque consequatur. Rerum et quia tempore nesciunt. Excepturi illo blanditiis reprehenderit corrupti hic. Aliquid veritatis ut officia. Numquam dolorem a et aut doloremque maxime sit. Ut sunt et rerum non tempora. Ut harum ipsa nam et temporibus sed quisquam.'
                      length: 404
                      turns: 56
                      free: false
                      is_work: true
                      spec: null
                  -
                    status: success
                    message: 'Треки получены успешно.'
                    tracks:
                      id: 32
                      name: Жокей
                      address: '198714, Кемеровская область, город Можайск, наб. Гоголя, 41'
                      images: null
                      latitude: 0
                      longitude: 0
                      level:
                        name: Средняя
                        color: '#EF7C08'
                      desc: 'Maiores aperiam eos et magni at dicta reiciendis. Accusamus soluta molestias minima dicta dolore excepturi. Et ut vel cupiditate autem non rem. Et omnis quis et ratione amet. Qui doloremque consequatur veniam est aspernatur voluptatibus molestiae unde. Unde dolore quae in accusamus blanditiis fugiat. Aut sint excepturi accusantium voluptate distinctio numquam sed. Accusantium quibusdam dicta quas est sit.'
                      length: 618
                      turns: 78
                      free: false
                      is_work: false
                      spec: null
      tags:
        - Track
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: 16
                  nullable: true
                paginate:
                  type: boolean
                  description: ''
                  example: true
                  nullable: true
                page:
                  type: string
                  description: ''
                  example: quibusdam
                  nullable: true
                limit:
                  type: integer
                  description: 'Значение поля value не может быть больше 50.'
                  example: 13
                  nullable: true
      security: []
    post:
      summary: create
      operationId: create
      description: 'Метод создания трека'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек успешно создан.'
                  track:
                    id: 34
                    name: Чабан
                    address: '072765, Амурская область, город Наро-Фоминск, проезд Ладыгина, 22'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Низкая
                      color: '#22CA3D'
                    desc: 'Vero nisi debitis est molestiae quos distinctio. Dolores consequuntur porro facere ut. Maxime sed placeat enim vel quia molestiae quo. Quisquam non corporis deserunt rerum quia sunt harum placeat. Inventore consequatur quia aut beatae. Dolores enim maiores et nisi. Recusandae id odio culpa alias non quam. Quidem voluptate exercitationem modi voluptatem dolor saepe quae.'
                    length: 281
                    turns: 58
                    free: true
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек успешно создан.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 34
                      name:
                        type: string
                        example: Чабан
                      address:
                        type: string
                        example: '072765, Амурская область, город Наро-Фоминск, проезд Ладыгина, 22'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Низкая
                          color:
                            type: string
                            example: '#22CA3D'
                      desc:
                        type: string
                        example: 'Vero nisi debitis est molestiae quos distinctio. Dolores consequuntur porro facere ut. Maxime sed placeat enim vel quia molestiae quo. Quisquam non corporis deserunt rerum quia sunt harum placeat. Inventore consequatur quia aut beatae. Dolores enim maiores et nisi. Recusandae id odio culpa alias non quam. Quidem voluptate exercitationem modi voluptatem dolor saepe quae.'
                      length:
                        type: integer
                        example: 281
                      turns:
                        type: integer
                        example: 58
                      free:
                        type: boolean
                        example: true
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Ошибка при создании трека.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Ошибка при создании трека.'
      tags:
        - Track
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3.'
                  example: guspmbpyvdrwwbalsjdvvjint
                  nullable: false
                address:
                  type: string
                  description: ''
                  example: cumque
                  nullable: false
                latitude:
                  type: number
                  description: 'Значение поля value должно быть между -87 и 89.'
                  example: -86
                  nullable: false
                longitude:
                  type: number
                  description: 'Значение поля value должно быть между -180 и 180.'
                  example: -179
                  nullable: false
                images:
                  type: array
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  items:
                    type: string
                    format: binary
                levelId:
                  type: integer
                  description: 'The <code>id</code> of an existing record in the levels table.'
                  example: 1
                  nullable: false
                desc:
                  type: string
                  description: ''
                  example: assumenda
                  nullable: true
                length:
                  type: integer
                  description: ''
                  example: 15
                  nullable: true
                turns:
                  type: integer
                  description: ''
                  example: 11
                  nullable: true
                free:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                is_work:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                contacts:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["consequatur","nihil"]'
                  nullable: true
                spec:
                  type: string
                  description: 'Значение поля value должно быть JSON строкой.'
                  example: '["est","illum"]'
                  nullable: true
              required:
                - name
                - address
                - latitude
                - longitude
                - is_work
  '/api/tracks/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получение трассы по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Трек по идентификатору получен успешно.'
                  track:
                    id: 33
                    name: Егерь
                    address: '008557, Ивановская область, город Подольск, бульвар Сталина, 82'
                    images: null
                    latitude: 0
                    longitude: 0
                    level:
                      name: Средняя
                      color: '#EF7C08'
                    desc: 'Omnis ad beatae commodi soluta quod. Excepturi architecto aut qui. Doloribus et corrupti commodi. Maxime quia est nam consectetur qui. Quo iure explicabo eum ipsam eum et eveniet. Reiciendis velit doloremque veritatis nihil provident. Vero aliquam nobis et at officiis voluptate. Mollitia omnis libero quae ab porro. Vel dignissimos aut asperiores aut. Voluptatem aut ratione ad at animi vero fugiat. Sequi et debitis nostrum. Asperiores veniam asperiores ducimus qui ut.'
                    length: 194
                    turns: 70
                    free: false
                    is_work: true
                    spec: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Трек по идентификатору получен успешно.'
                  track:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 33
                      name:
                        type: string
                        example: Егерь
                      address:
                        type: string
                        example: '008557, Ивановская область, город Подольск, бульвар Сталина, 82'
                      images:
                        type: string
                        example: null
                      latitude:
                        type: integer
                        example: 0
                      longitude:
                        type: integer
                        example: 0
                      level:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Средняя
                          color:
                            type: string
                            example: '#EF7C08'
                      desc:
                        type: string
                        example: 'Omnis ad beatae commodi soluta quod. Excepturi architecto aut qui. Doloribus et corrupti commodi. Maxime quia est nam consectetur qui. Quo iure explicabo eum ipsam eum et eveniet. Reiciendis velit doloremque veritatis nihil provident. Vero aliquam nobis et at officiis voluptate. Mollitia omnis libero quae ab porro. Vel dignissimos aut asperiores aut. Voluptatem aut ratione ad at animi vero fugiat. Sequi et debitis nostrum. Asperiores veniam asperiores ducimus qui ut.'
                      length:
                        type: integer
                        example: 194
                      turns:
                        type: integer
                        example: 70
                      free:
                        type: boolean
                        example: false
                      is_work:
                        type: boolean
                        example: true
                      spec:
                        type: string
                        example: null
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - Track
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the track.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users:
    get:
      summary: GetUserForToken
      operationId: getUserForToken
      description: 'Получить данные пользователя по токену'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: 'Пользователь по токену получен успешно'
                  user:
                    id: 56
                    name: 'Тарас Алексеевич Капустин'
                    email: fedor12@example.org
                    email_verified_at: '2025-02-04T10:24:45.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Пользователь по токену получен успешно'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 56
                      name:
                        type: string
                        example: 'Тарас Алексеевич Капустин'
                      email:
                        type: string
                        example: fedor12@example.org
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:24:45.000000Z'
                      avatar:
                        type: string
                        example: null
      tags:
        - User
  '/api/users/{id}':
    get:
      summary: getForId
      operationId: getForId
      description: 'Получить пользователя по id'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.get_for_id.success
                  user:
                    id: 57
                    name: 'Брагин Данила Андреевич'
                    avatar: null
                    personal: []
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.get_for_id.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 57
                      name:
                        type: string
                        example: 'Брагин Данила Андреевич'
                      avatar:
                        type: string
                        example: null
                      personal:
                        type: array
                        example: []
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: 'Запрашиваемый ресурс не найден.'
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Запрашиваемый ресурс не найден.'
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 1
        required: true
        schema:
          type: integer
  /api/users/update:
    post:
      summary: update
      operationId: update
      description: 'Обновить профиль пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.success
                  user:
                    id: 58
                    name: 'Дементьева Таисия Александровна'
                    email: kalinina.mikail@example.net
                    email_verified_at: '2025-02-04T10:24:45.000000Z'
                    avatar: null
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.success
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 58
                      name:
                        type: string
                        example: 'Дементьева Таисия Александровна'
                      email:
                        type: string
                        example: kalinina.mikail@example.net
                      email_verified_at:
                        type: string
                        example: '2025-02-04T10:24:45.000000Z'
                      avatar:
                        type: string
                        example: null
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.user.update.error
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.user.update.error
      tags:
        - User
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
                  example: udzmte
                  nullable: true
                email:
                  type: string
                  description: 'Значение поля value должно быть действительным электронным адресом.'
                  example: marley87@example.org
                  nullable: true
                avatar:
                  type: string
                  format: binary
                  description: 'Файл, указанный в поле value, должен быть изображением.'
                  nullable: true
  /api/verification-email/send:
    post:
      summary: send
      operationId: send
      description: 'Отправка письма на почту пользователя'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.send.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.send.success
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  message: messages.verification_email.send.already_sent
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: messages.verification_email.send.already_sent
      tags:
        - VerificationEmail
  /api/verification-email/verify:
    post:
      summary: verify
      operationId: verify
      description: 'Подтверждение почты пользователя по коду из письма'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  message: messages.verification_email.verification.success
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: messages.verification_email.verification.success
        403:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.send.already_sent
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.send.already_sent
                  -
                    description: ''
                    type: object
                    example:
                      status: error
                      message: messages.verification_email.verification.incorrect
                    properties:
                      status:
                        type: string
                        example: error
                      message:
                        type: string
                        example: messages.verification_email.verification.incorrect
      tags:
        - VerificationEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: integer
                  description: 'Значение поля value должно быть не меньше 999. Значение поля value не может быть больше 10000.'
                  example: 4
                  nullable: false
              required:
                - code
tags:
  -
    name: AppointmentRace
    description: 'Методы отвечающие за запись участников'
  -
    name: Auth
    description: 'Авторизация пользователей и всё что с ней связано.'
  -
    name: Document
    description: 'Методы взаимодействия с документами пользователя'
  -
    name: PersonalInfo
    description: 'Всё что связанно с персональной информацией пользователя'
  -
    name: Race
    description: 'Методы связанные с гонками'
  -
    name: Role
    description: 'Методы взаимодествия с ролями'
  -
    name: Track
    description: 'Методы взаимодествия с трассами на которых проходят гонки'
  -
    name: User
    description: 'Методы манипуляции пользователем.'
  -
    name: VerificationEmail
    description: 'Подтверждение почты через письмо'
