version: "3.8"

services:
    moto_db:
        image: postgis/postgis:latest
        restart: always
        deploy:
            replicas: 1
            restart_policy:
                delay: 5s
                condition: on-failure
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_DB: ${DB_DATABASE}
        ports:
            - "${DB_PORT}:5432"
        volumes:
            - ./db/data:/var/lib/postgresql/data
        networks:
            - db_net
    moto_backend:
        image: moskowpsix/moto-backend:develop
        restart: always
        deploy:
            replicas: 1
            restart_policy:
                delay: 5s
                condition: on-failure
        env_file: .env
        volumes:
            - ./laravel:/var/www/moto_backend
        working_dir: /var/www/moto_backend
        networks:
            - nginx_net
            - db_net

    nginx:
        image: nginx:latest
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./laravel:/var/www/moto_backend
        ports:
            - "100:80"
        depends_on:
            - moto_backend
        networks:
            - nginx_net

#    elasticsearch:
#        container_name: vokrug_elasticsearch
#        image: elasticsearch:8.15.3
#        restart: always
#        deploy:
#            replicas: 1
#            restart_policy:
#                delay: 5s
#                condition: on-failure
#        #            resources:
#        #                limits:
#        #                    cpus: "0.5"
#        #                    memory: "512M"
#        environment:
#            - discovery.type=single-node
#            - xpack.security.enabled=true
#            - xpack.security.enrollment.enabled=true
#            - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
#            - ELASTIC_USERNAME=${ELASTICSEARCH_USERNAME}
#        ports:
#            - "${ELASTICSEARCH_PORT}:9200"
#            - "9300:9300"
#        volumes:
#            - ./elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#        #            - ./elastic/data:/usr/share/elasticsearch/data
#        networks:
#            - es-net
#        command: >
#            bash -c "
#              /usr/local/bin/docker-entrypoint.sh &
#              echo 'Waiting for Elasticsearch to be ready...';
#              until curl -k --silent http://localhost:9200 -u elastic:${ELASTICSEARCH_PASSWORD} > /dev/null; do
#                sleep 5;
#              done;
#              echo 'Creating new user...';
#              curl -u elastic:${ELASTICSEARCH_PASSWORD} -X POST 'http://localhost:9200/_security/user/${ELASTICSEARCH_USERNAME}' -H 'Content-Type: application/json' -d'
#              {
#                \"password\" : \"${ELASTICSEARCH_PASSWORD}\",
#                \"roles\" : [ \"superuser\", \"kibana_user\" ],
#                \"full_name\" : \"Admin User\",
#                \"email\" : \"admin@example.com\",
#                \"enabled\": true
#              }' --insecure;
#              echo 'Updating role permissions...';
#              curl -u elastic:${ELASTICSEARCH_PASSWORD} -X PUT 'http://localhost:9200/_security/role/kibana_user' -H 'Content-Type: application/json' -d'
#              {
#                \"cluster\": [\"all\"],
#                \"indices\": [
#                  {
#                    \"names\": [\".kibana*\", \"*\"],
#                    \"privileges\": [\"all\", \"create_index\"]
#                  }
#                ]
#              }' --insecure;
#              echo 'User and roles configured successfully!';
#              wait
#            "

networks:
    nginx_net:
    db_net:
