name: Race
description: 'Методы связанные с гонками'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/races
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех гонок по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userIdExists:
        name: userIdExists
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: blanditiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      appointmentUser:
        name: appointmentUser
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      favouritesUser:
        name: favouritesUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commissionUser:
        name: commissionUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      pastRace:
        name: pastRace
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 5
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-15T06:41:36'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateEnd:
        name: dateEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-15T06:41:36'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusIds:
        name: statusIds
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example:
          - 5
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sortField:
        name: sortField
        description: ''
        required: false
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 9
      userIdExists: 13
      paginate: true
      page: blanditiis
      limit: 11
      appointmentUser: false
      favouritesUser: true
      commissionUser: true
      trackId: 20
      pastRace: false
      gradeIds:
        - 5
      dateStart: '2025-04-15T06:41:36'
      dateEnd: '2025-04-15T06:41:36'
      locationId: 19
      statusIds:
        - 5
      sortField: soluta
      sort: vel
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.race.get.success","races":{"id":166,"name":"Lauren Bogisich MD","desc":"Aut eligendi hic accusamus laborum in rerum dolores. Tempore sunt veniam ex est voluptas veritatis quis iure. Et ipsum qui facere.","is_work":true,"date_start":"2025-04-15T06:55:33.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}},{"status":"success","message":"messages.race.get.success","races":{"id":167,"name":"Dale Watsica","desc":"A atque suscipit nihil et molestiae deserunt officia labore. Est repudiandae quo aut cupiditate omnis molestias nobis commodi. Ducimus perferendis beatae reiciendis rem magnam.","is_work":false,"date_start":"2025-04-15T10:19:45.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение гонки по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: ''
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      appointmentUser:
        name: appointmentUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      favouritesUser:
        name: favouritesUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commissionUser:
        name: commissionUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 10
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 11
      appointmentUser: true
      favouritesUser: true
      commissionUser: true
      gradeIds:
        - 10
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.get_for_id.success","race":{"id":168,"name":"Prof. Caroline Corkery","desc":"Nam modi aut nam. Quo rem exercitationem sit veritatis facilis non ut. Maiores amet adipisci non sunt sit.","is_work":true,"date_start":"2025-04-15T02:35:31.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/races
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание гонки'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
        required: true
        example: mvrsaxmqiitypkerjyxdxtwfaxiudaeqmgqqkynxthhekjncujfrdzojbvsum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: true
        example: '2025-04-15T06:41:37'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      recordStart:
        name: recordStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-15T06:41:37'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordEnd:
        name: recordEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-15T06:41:37'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      images:
        name: images
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      positionFile:
        name: positionFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resultsFile:
        name: resultsFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      pdfFile:
        name: pdfFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 2
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: true
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      statusId:
        name: statusId
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cupIds:
        name: cupIds
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example:
          - 12
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: mvrsaxmqiitypkerjyxdxtwfaxiudaeqmgqqkynxthhekjncujfrdzojbvsum
      desc: placeat
      dateStart: '2025-04-15T06:41:37'
      recordStart: '2025-04-15T06:41:37'
      recordEnd: '2025-04-15T06:41:37'
      trackId: 16
      gradeIds:
        - 2
      locationId: accusantium
      statusId: 1
      cupIds:
        - 12
    fileParameters:
      images:
        - null
      positionFile: null
      resultsFile: null
      pdfFile: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.create.success","race":{"id":169,"name":"Monty Kuphal","desc":"Earum quis perferendis placeat et ut. Rerum totam voluptatem velit ipsum est. Ab architecto rerum iste eos.","is_work":true,"date_start":"2025-04-15T00:28:13.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/update'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование гонки'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
        required: false
        example: bncgxfxixsidsuprwvbrjovkesposezxaxehejgucdmiraorclixr
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-15T06:41:37'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordEnd:
        name: recordEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-15T06:41:37'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordStart:
        name: recordStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-15T06:41:37'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imagesAdd:
        name: imagesAdd
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      imagesDel:
        name: imagesDel
        description: ''
        required: false
        example:
          - ullam
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      positionFile:
        name: positionFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resultsFile:
        name: resultsFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      pdfFiles:
        name: pdfFiles
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 2
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusId:
        name: statusId
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cupIds:
        name: cupIds
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example:
          - 15
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: bncgxfxixsidsuprwvbrjovkesposezxaxehejgucdmiraorclixr
      desc: ea
      dateStart: '2025-04-15T06:41:37'
      recordEnd: '2025-04-15T06:41:37'
      recordStart: '2025-04-15T06:41:37'
      trackId: 6
      imagesDel:
        - ullam
      gradeIds:
        - 2
      locationId: 9
      statusId: 18
      cupIds:
        - 15
    fileParameters:
      imagesAdd:
        - null
      positionFile: null
      resultsFile: null
      pdfFiles: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.update.success","race":{"id":170,"name":"Dr. Christian Herzog Jr.","desc":"Illo dicta doloremque debitis deserunt ut dolore. Tempore architecto dolores hic eligendi dolor facilis eos. Minima voluptas consequuntur corrupti est et ipsam.","is_work":true,"date_start":"2025-04-15T08:56:10.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/toggle-is-work'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.toggle_is_work.success","race":{"id":171,"name":"Scarlett Bins","desc":"Cum est aut exercitationem eligendi. Sequi et alias quisquam mollitia qui magni. Optio dolor voluptas perspiciatis. Et maiores autem molestiae corrupti qui itaque reprehenderit.","is_work":false,"date_start":"2025-04-15T17:16:29.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/commission/add'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: addCommission
      description: 'Прикрепить судей к гонке.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      usersIds:
        name: usersIds
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example:
          - 19
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      usersIds:
        - 19
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.commission.add.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.user.add_commission.incorrect_role"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/races/{id}'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: delete
      description: 'Удаление гонки'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.delete.success","race":{"id":173,"name":"Nellie Ziemann","desc":"Odit odio ut et rem harum quo. Omnis voluptatum cumque doloribus voluptas omnis eum ad. Dolor earum velit dolorem voluptas et. Aut itaque est et ipsa id officiis molestiae.","is_work":false,"date_start":"2025-04-15T08:12:17.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
