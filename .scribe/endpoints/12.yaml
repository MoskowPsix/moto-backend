name: Cup
description: 'Методы связанные с кубками'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение кубков по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: facere
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: facere
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 100.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: true
      limit: 9
      page: nam
      name: et
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.get_for_id.success","cup":{"id":83,"name":"Ms. Therese Hoppe DDS","year":1983,"stages":"9","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cups
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xbmfclkw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year:
        name: year
        description: ''
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xznfqxxt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: xbmfclkw
      year: 6
      color: vitae
      stages: xznfqxxt
      locationId: 10
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.create.success","cup":{"id":85,"name":"Loma Baumbach","year":2005,"stages":"6","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Обновление кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: epgwza
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      year:
        name: year
        description: ''
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nzdtgklwauqnvghbzxbjc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: cupiditate
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: epgwza
      year: 14
      stages: nzdtgklwauqnvghbzxbjc
      color: cupiditate
      locationId: 14
      userId: 4
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.update.success","cup":{"id":86,"name":"Harrison Rowe","year":2019,"stages":"2","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
