name: Auth
description: 'Авторизация пользователей и всё что с ней связано.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Авторизация пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
        required: true
        example: bruen.fritz@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Количество символов в поле value должно быть не меньше 3.'
        required: true
        example: 'uw&mq/%%~M{CSd^42k)'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: bruen.fritz@example.org
      password: 'uw&mq/%%~M{CSd^42k)'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.login.success","access_token":"16|14NLQadpSp7ZTsjKkhTcSXh8fmGlv9mkJiCkfJmKab50163a","token_type":"Bearer","user":{"id":32,"name":"\u0413\u0440\u0438\u0433\u043e\u0440\u044c\u0435\u0432 \u0418\u043e\u0441\u0438\u0444 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447","email":"ruslan18@example.net","email_verified_at":"2025-01-23T08:39:04.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"success","message":"messages.auth.login.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Регистрация нового пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
        required: true
        example: ylxytfxdrduiln
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Значение поля value должно быть действительным электронным адресом.'
        required: true
        example: mitchell32@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Количество символов в поле value должно быть не меньше 8.'
        required: true
        example: 'WunQy6cJf0p1g8}|VQ'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The value and <code>password</code> must match.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: ylxytfxdrduiln
      email: mitchell32@example.com
      password: 'WunQy6cJf0p1g8}|VQ'
      password_confirmation: voluptatem
      avatar: molestiae
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.register.success","access_token":"17|0asnuIVT1kVUhCcqRoamStqKALHImPps9E0LXPP10fc18c37","token_type":"Bearer","user":{"id":33,"name":"\u0410\u0433\u0430\u0444\u043e\u043d\u043e\u0432\u0430 \u0418\u0437\u0430\u0431\u0435\u043b\u043b\u0430 \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u043d\u0430","email":"gblokin@example.com","email_verified_at":"2025-01-23T08:39:05.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.auth.register.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: logout
      description: 'Выход пользователя'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.logout.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"success","message":"messages.auth.logout.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
