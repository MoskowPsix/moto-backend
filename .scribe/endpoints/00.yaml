name: Auth
description: 'Авторизация пользователей и всё что с ней связано.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Авторизация пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. Must be at least 3 characters.'
        required: true
        example: zbuckridge@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 3 characters.'
        required: true
        example: 'rMg^1R"9[kk%v"ge(p-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: zbuckridge@example.com
      password: 'rMg^1R"9[kk%v"ge(p-'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.login.success","access_token":"15|jCZOoS64YIskvwo86SZlolCRyzi4M67ltBFxejOe1d09e9ae","token_type":"Bearer","user":{"id":156,"name":null,"email":"cicero21@example.net","email_verified_at":"2025-03-17T09:52:45.000000Z","avatar":null,"personal":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"success","message":"messages.auth.login.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Регистрация нового пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
        required: true
        example: lyfyuipekdsbcwfpyvpytlj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: alessandro.kuhn@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: '(@j>Z6_,8zt<Cuw4:'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The value and <code>password</code> must match.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      avatar:
        name: avatar
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: lyfyuipekdsbcwfpyvpytlj
      email: alessandro.kuhn@example.org
      password: '(@j>Z6_,8zt<Cuw4:'
      password_confirmation: aut
    fileParameters:
      avatar: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.register.success","access_token":"16|qinlhuA67zPxMrGmcHc3NRAJRPQmDCQdbXdZqFnEacafac77","token_type":"Bearer","user":{"id":157,"name":null,"email":"salvatore68@example.com","email_verified_at":"2025-03-17T09:52:46.000000Z","avatar":null,"personal":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.auth.register.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: logout
      description: 'Выход пользователя'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.logout.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"success","message":"messages.auth.logout.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
