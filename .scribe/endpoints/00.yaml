name: Auth
description: 'Авторизация пользователей и всё что с ней связано.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Авторизация пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Значение поля value должно быть действительным электронным адресом. The <code>email</code> of an existing record in the users table. Количество символов в поле value должно быть не меньше 3.'
        required: true
        example: nienow.juanita@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Количество символов в поле value должно быть не меньше 3.'
        required: true
        example: 'mNWu\"q[/Q,@2'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: nienow.juanita@example.com
      password: 'mNWu\"q[/Q,@2'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.login.success","access_token":"24|2bsTvGrZbZgtgcuDReDklNHe1Q0IGRWB4nq7HCyU7e92f6bf","token_type":"Bearer","user":{"id":44,"name":"\u0421\u0442\u0430\u043d\u0438\u0441\u043b\u0430\u0432 \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447 \u0411\u043e\u0433\u0434\u0430\u043d\u043e\u0432","email":"semen69@example.org","email_verified_at":"2025-01-23T13:29:21.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"success","message":"messages.auth.login.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Регистрация нового пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в поле value должно быть не меньше 3. Количество символов в значении поля value не может превышать 50.'
        required: true
        example: idijleekxd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Значение поля value должно быть действительным электронным адресом.'
        required: true
        example: pfannerstill.eliza@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Количество символов в поле value должно быть не меньше 8.'
        required: true
        example: '@58;pa~p2`[@Ch'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The value and <code>password</code> must match.'
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      avatar:
        name: avatar
        description: ''
        required: false
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: idijleekxd
      email: pfannerstill.eliza@example.com
      password: '@58;pa~p2`[@Ch'
      password_confirmation: dicta
      avatar: qui
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.register.success","access_token":"25|1jEgQToz4svadMBQtbmDTE9kFzID9KFWSBt23Sh894192928","token_type":"Bearer","user":{"id":45,"name":"\u041c\u0435\u0434\u0432\u0435\u0434\u0435\u0432 \u041d\u0438\u043a\u043e\u0434\u0438\u043c \u0424\u0451\u0434\u043e\u0440\u043e\u0432\u0438\u0447","email":"rmikeev@example.net","email_verified_at":"2025-01-23T13:29:21.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.auth.register.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: logout
      description: 'Выход пользователя'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.logout.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"success","message":"messages.auth.logout.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
