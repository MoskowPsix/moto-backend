name: AppointmentRace
description: 'Методы отвечающие за запись участников'
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/toggle-appointment-race'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: toggle
      description: 'Записаться и отменить запись на гонку'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 24
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      surname:
        name: surname
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      patronymic:
        name: patronymic
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      dateOfBirth:
        name: dateOfBirth
        description: 'Значение поля value не является датой.'
        required: true
        example: '2025-03-17T10:28:28'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      region:
        name: region
        description: ''
        required: false
        example: aliquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      inn:
        name: inn
        description: ''
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      snils:
        name: snils
        description: ''
        required: true
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phoneNumber:
        name: phoneNumber
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      startNumber:
        name: startNumber
        description: 'Значение поля value должно быть не меньше 1. Значение поля value не может быть больше 999.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      group:
        name: group
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rank:
        name: rank
        description: ''
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rankNumber:
        name: rankNumber
        description: ''
        required: false
        example: similique
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      community:
        name: community
        description: ''
        required: false
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      coach:
        name: coach
        description: ''
        required: false
        example: nisi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      motoStamp:
        name: motoStamp
        description: ''
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: true
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gradeId:
        name: gradeId
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: true
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commandId:
        name: commandId
        description: 'The <code>id</code> of an existing record in the commands table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      numberAndSeria:
        name: numberAndSeria
        description: ''
        required: true
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      documentIds:
        name: documentIds
        description: ''
        required: false
        example:
          - 12
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      surname: vel
      patronymic: et
      dateOfBirth: '2025-03-17T10:28:28'
      city: consequuntur
      region: aliquam
      inn: 3
      snils: dolorem
      phoneNumber: 17
      startNumber: 10
      group: et
      rank: rerum
      rankNumber: similique
      community: cum
      coach: nisi
      motoStamp: voluptatem
      locationId: molestiae
      gradeId: quisquam
      numberAndSeria: cum
      documentIds:
        - 12
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u0417\u0430\u043f\u0438\u0441\u044c \u043d\u0430 \u0433\u043e\u043d\u043a\u0443 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0430."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.appointment.create.grade_not_exists"}'
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: '{"status":"error","message":"messages.error.exists_appointment_race"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"status":"success","message":"messages.appointment.create_table.many_documents","documents":[]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/appointment-race/users'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: GetUsersAppointmentRace
      description: 'Записаться и отменить запись на гонку'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 24
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Значение поля value не может быть больше 50.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: true
      page: dolor
      limit: 7
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","users":{"id":624,"name":null,"email":"svytoslav14@example.com","email_verified_at":"2025-03-17T10:28:28.000000Z","created_at":"2025-03-17T10:28:28.000000Z","updated_at":"2025-03-17T10:28:28.000000Z","avatar":null,"personal_info":null}},{"status":"success","message":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","users":{"id":625,"name":null,"email":"apollon.danilova@example.net","email_verified_at":"2025-03-17T10:28:28.000000Z","created_at":"2025-03-17T10:28:28.000000Z","updated_at":"2025-03-17T10:28:28.000000Z","avatar":null,"personal_info":null}}]'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/appointment-race/users-table'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: getTable
      description: 'Получить ссылку на таблицу участников'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 24
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.appointment.create_table.success","table_url":[]}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u0414\u043e\u0441\u0442\u0443\u043f \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/appointment-race/{id}/pdf'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: getAppointmentPDF
      description: 'Возвращает документ заявки гонщика для комиссии'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the appointment race.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: !!binary 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
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
