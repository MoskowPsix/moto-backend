name: Command
description: 'Методы связанные с командами'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/commands
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех команд по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userIdExists:
        name: userIdExists
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checkMember:
        name: checkMember
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: libero
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city:
        name: city
        description: ''
        required: false
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      fullName:
        name: fullName
        description: ''
        required: false
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      coach:
        name: coach
        description: ''
        required: false
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 14
      userIdExists: 18
      checkMember: false
      paginate: false
      page: libero
      limit: 3
      locationId: 20
      city: illo
      fullName: odit
      coach: deserunt
      name: culpa
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.command.get.success","commands":{"id":171,"name":"Dr. Cindy Stanton","full_name":null,"coach":null,"city":"South Andreberg","avatar":null}},{"status":"success","message":"messages.command.get.success","commands":{"id":172,"name":"Kenneth Muller","full_name":null,"coach":null,"city":"East Winston","avatar":null}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/commands/{id}'
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение команд по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the command.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: ''
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userIdExists:
        name: userIdExists
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checkMember:
        name: checkMember
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: ''
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city:
        name: city
        description: ''
        required: false
        example: vero
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      fullName:
        name: fullName
        description: ''
        required: false
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      coach:
        name: coach
        description: ''
        required: false
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 10
      userIdExists: 17
      checkMember: false
      locationId: 15
      city: vero
      fullName: deserunt
      coach: eos
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.command.get_for_id.success","command":{"id":173,"name":"Davon Keebler","full_name":null,"coach":null,"city":"Mariamfurt","avatar":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/commands
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание команды'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: pvrqwnkhmkoagegcdtlvrqz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      fullName:
        name: fullName
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ijk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      coach:
        name: coach
        description: 'Must not be greater than 255 characters.'
        required: false
        example: txnpc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      avatar:
        name: avatar
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city:
        name: city
        description: 'Must not be greater than 255 characters.'
        required: true
        example: roivuddjynsdpzxxwsz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: pvrqwnkhmkoagegcdtlvrqz
      fullName: ijk
      coach: txnpc
      locationId: 6
      city: roivuddjynsdpzxxwsz
    fileParameters:
      avatar: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.command.create.success","command":{"id":174,"name":"Lura Mayert DVM","full_name":null,"coach":null,"city":"New Darryl","avatar":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/commands/{id}'
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование команды'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the command.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dwah
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      fullName:
        name: fullName
        description: 'Must not be greater than 255 characters.'
        required: false
        example: murrenahnjeqfruyijlrz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      coach:
        name: coach
        description: 'Must not be greater than 255 characters.'
        required: false
        example: oysqpbidpdwnjnczuzfcm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      avatar:
        name: avatar
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city:
        name: city
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pczzdnedzcmfgei
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: dwah
      fullName: murrenahnjeqfruyijlrz
      coach: oysqpbidpdwnjnczuzfcm
      city: pczzdnedzcmfgei
      locationId: 20
    fileParameters:
      avatar: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.command.update.success","command":{"id":175,"name":"Miss Jazmyne Kertzmann PhD","full_name":null,"coach":null,"city":"Bradfordshire","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/commands/{id}'
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: delete
      description: 'Удаление команды'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the command.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.command.delete.success","command":{"id":176,"name":"Prof. Kamren Breitenberg DVM","full_name":null,"coach":null,"city":"Rozellaville","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/commands/{command_id}/couches/{user_id}'
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: toggleCouch
      description: 'Добавление и удаление тренера из команды, может пользоваться только владелец команды.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      command_id:
        name: command_id
        description: 'The ID of the command.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: asperiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      command_id: 15
      user_id: asperiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.command.add_couch.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/commands/{command_id}/members'
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: toggleMember
      description: 'Привязка пользователя к команде от имени самого пользователя.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      command_id:
        name: command_id
        description: 'The ID of the command.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      command_id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.command.member_toggle.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/commands/{command_id}/members'
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: getMembers
      description: 'Получить всех участников команды.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      command_id:
        name: command_id
        description: 'The ID of the command.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      command_id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      raceIdExists:
        name: raceIdExists
        description: 'The <code>id</code> of an existing record in the races table.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checkMember:
        name: checkMember
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: false
      page: culpa
      limit: 1
      raceIdExists: 14
      checkMember: false
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.couches.get.success","members":{"id":474,"name":"Winnifred Anderson Jr.","avatar":null,"personal":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/commands/{command_id}/coaches'
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: getCoachesForAll
      description: 'Получение всех тренеров по команде для всех.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      command_id:
        name: command_id
        description: 'The ID of the command.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      command_id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: consequuntur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: true
      page: consequuntur
      limit: 24
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.command.get_coaches_for_all.success","coaches":{"id":475,"name":"Lourdes Stroman","avatar":null,"personal":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/commands/{command_id}/members-for-coach'
    metadata:
      groupName: Command
      groupDescription: 'Методы связанные с командами'
      subgroup: ''
      subgroupDescription: ''
      title: getMembersForCoach
      description: 'Получение всех участников по тренеру.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      command_id:
        name: command_id
        description: 'The ID of the command.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      command_id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: distinctio
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      raceIdExists:
        name: raceIdExists
        description: 'The <code>id</code> of an existing record in the races table.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checkMember:
        name: checkMember
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: false
      page: distinctio
      limit: 17
      raceIdExists: 1
      checkMember: false
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.command.get_members_for_coach.success","members":{"id":476,"name":"Miss Brooke Thompson DVM","email":"domenic52@example.com","email_verified_at":"2025-04-16T05:47:00.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
