name: Cup
description: 'Методы связанные с кубками'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение кубков по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 100.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: magni
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: true
      limit: 4
      page: voluptates
      name: magni
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.get_for_id.success","cup":{"id":115,"name":"Prof. Dorian Sanford","year":1997,"stages":"7","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/cups/race/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: getForRaceId
      description: 'Получение кубков по id гонки'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      raceId:
        name: raceId
        description: 'The <code>id</code> of an existing record in the race table.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      raceId: 19
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.get_for_race_id.success","cup":{"id":116,"name":"Alvina Cassin","year":1994,"stages":"7","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cups
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: txiibkjkatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year:
        name: year
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: ipsum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vutsopmserxjdd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: txiibkjkatum
      year: 2
      color: ipsum
      stages: vutsopmserxjdd
      locationId: 9
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.create.success","cup":{"id":117,"name":"Kamryn Purdy","year":1973,"stages":"8","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Обновление кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      year:
        name: year
        description: ''
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Must not be greater than 255 characters.'
        required: false
        example: qbpwqfqojtjnl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: m
      year: 12
      stages: qbpwqfqojtjnl
      color: id
      locationId: 11
      userId: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.update.success","cup":{"id":118,"name":"Terrence Ward PhD","year":2016,"stages":"2","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
