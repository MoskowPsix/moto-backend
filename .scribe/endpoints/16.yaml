name: AppointmentRace
description: 'Методы отвечающие за запись участников'
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/toggle-appointment-race'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: Toggle
      description: 'Записаться и отменить запись на гонку'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      surname:
        name: surname
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      patronymic:
        name: patronymic
        description: ''
        required: true
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      dateOfBirth:
        name: dateOfBirth
        description: 'Must be a valid date.'
        required: true
        example: '2025-05-12T12:43:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      city:
        name: city
        description: ''
        required: true
        example: dolore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      region:
        name: region
        description: ''
        required: false
        example: numquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      inn:
        name: inn
        description: ''
        required: true
        example: ipsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      snils:
        name: snils
        description: ''
        required: true
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phoneNumber:
        name: phoneNumber
        description: ''
        required: true
        example: odio
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      startNumber:
        name: startNumber
        description: 'Must be at least 1. Must not be greater than 999.'
        required: true
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      group:
        name: group
        description: ''
        required: true
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rank:
        name: rank
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      rankNumber:
        name: rankNumber
        description: ''
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      community:
        name: community
        description: ''
        required: false
        example: quibusdam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      coach:
        name: coach
        description: ''
        required: false
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      motoStamp:
        name: motoStamp
        description: ''
        required: true
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gradeId:
        name: gradeId
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      commandId:
        name: commandId
        description: 'The <code>id</code> of an existing record in the commands table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      numberAndSeria:
        name: numberAndSeria
        description: ''
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      documentIds:
        name: documentIds
        description: ''
        required: false
        example:
          - 14
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      surname: et
      patronymic: recusandae
      dateOfBirth: '2025-05-12T12:43:08'
      city: dolore
      region: numquam
      inn: ipsa
      snils: quis
      phoneNumber: odio
      startNumber: 24
      group: accusantium
      rank: tempore
      rankNumber: aut
      community: quibusdam
      coach: rerum
      motoStamp: natus
      locationId: vel
      gradeId: id
      numberAndSeria: vel
      documentIds:
        - 14
      userId: 6
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.appointment_race.create.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.appointment.create.grade_not_exists"}'
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: '{"status":"error","message":"messages.error.exists_appointment_race"}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"status":"success","message":"messages.appointment.create_table.many_documents","documents":[]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/appointment-race/users'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: GetUsersAppointmentRace
      description: 'Получить участников в гонке'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 23
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: false
      page: iusto
      limit: 23
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.appointment_race.get_users.success","users":{"id":641,"name":"Kaleb Predovic","email":"trey.robel@example.com","email_verified_at":"2025-05-12T12:43:08.000000Z","created_at":"2025-05-12T12:43:08.000000Z","updated_at":"2025-05-12T12:43:08.000000Z","avatar":null,"deleted_at":null}},{"status":"success","message":"messages.appointment_race.get_users.success","users":{"id":642,"name":"Mrs. Marlene Schneider","email":"jessy.dicki@example.net","email_verified_at":"2025-05-12T12:43:08.000000Z","created_at":"2025-05-12T12:43:08.000000Z","updated_at":"2025-05-12T12:43:08.000000Z","avatar":null,"deleted_at":null}}]'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/appointment-race/users-table'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: GetTable
      description: 'Получить ссылку на таблицу участников'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.appointment.create_table.success","table_url":[]}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/appointment-race/appointments'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: GetAppointmentsUsers
      description: 'Возвращает пользователей для комиссии.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: true
      page: in
      limit: 19
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.appointment_race.get_users_for_commission.success","users":{"id":643,"name":"Werner Klocko","email":"gbruen@example.org","email_verified_at":"2025-05-12T12:43:08.000000Z","created_at":"2025-05-12T12:43:08.000000Z","updated_at":"2025-05-12T12:43:08.000000Z","avatar":null,"deleted_at":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{raceId}/results/export'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: Export
      description: 'Экспорт результатов'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      raceId:
        name: raceId
        description: ''
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      raceId: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{raceId}/results/import'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: Import
      description: 'Импорт результатов'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      raceId:
        name: raceId
        description: ''
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      raceId: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/appointment-race/{id}/checked'
    metadata:
      groupName: AppointmentRace
      groupDescription: 'Методы отвечающие за запись участников'
      subgroup: ''
      subgroupDescription: ''
      title: checkedForCommission
      description: 'Подтверждение записи участника гонки.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the appointment race.'
        required: true
        example: 60
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 60
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      comment:
        name: comment
        description: ''
        required: false
        example: sapiente
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checked:
        name: checked
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      comment: sapiente
      checked: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.appointment_race.checked.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
