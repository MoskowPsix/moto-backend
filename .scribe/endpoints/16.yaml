name: Grade
description: 'Методы связанные с классами'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/grades
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех классов по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 23
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 5
      paginate: false
      page: harum
      limit: 23
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.grade.get.success","grades":{"id":37,"name":"America Feest","description":"Mollitia quae minima doloribus ipsum eius architecto. Rerum atque enim et debitis et aut dolorum. Voluptate expedita occaecati perferendis."}},{"status":"success","message":"messages.grade.get.success","grades":{"id":38,"name":"Prof. Felicita Monahan","description":"Eligendi deleniti porro eaque non. Doloribus nemo dolore dolores nulla voluptate. Placeat rerum ea amet commodi magni voluptates nesciunt."}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/grades/{id}'
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение класса по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      userId:
        name: userId
        description: ''
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 18
      userId: 20
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.grade.get_for_id.success","grade":{"id":39,"name":"Asa Kautzer","description":"Eum nobis voluptatem unde quam et error. Exercitationem aperiam ea laudantium delectus. Necessitatibus veniam consequatur rem minima ducimus perferendis molestias."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/grades
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание класса'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: egbefpqldeguxbji
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Sit in quaerat saepe dignissimos fugit.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: egbefpqldeguxbji
      description: 'Sit in quaerat saepe dignissimos fugit.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.grade.create.success","grade":{"id":40,"name":"Mariana Shields","description":"Aut nisi est ea est. Ea harum incidunt corrupti. Laudantium corporis autem et facilis rem velit voluptatem."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/grades/{id}'
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование класса'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bsc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Voluptatum inventore eveniet quia optio iusto nihil tempore qui.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: bsc
      description: 'Voluptatum inventore eveniet quia optio iusto nihil tempore qui.'
      userId: 9
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.grade.update.success","grade":{"id":41,"name":"Aliya Reynolds V","description":"Doloribus ab recusandae architecto. Cum voluptatum nostrum possimus est. Error dolorem ipsam earum."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
