name: Grade
description: 'Методы связанные с классами'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/grades
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех классов по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: incidunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Значение поля value не может быть больше 50.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 10
      paginate: false
      page: incidunt
      limit: 25
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e","grades":{"id":75,"name":"\u041a\u0430\u043b\u0438\u043d\u0438\u043d\u0430 \u041c\u0430\u0440\u0433\u0430\u0440\u0438\u0442\u0430 \u0415\u0432\u0433\u0435\u043d\u044c\u0435\u0432\u043d\u0430","description":"Excepturi esse accusamus iusto eos in magni dolore voluptas. Quis aut ut aliquid non est fuga."}},{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e","grades":{"id":76,"name":"\u0424\u043b\u043e\u0440\u0435\u043d\u0442\u0438\u043d\u0430 \u0418\u0432\u0430\u043d\u043e\u0432\u043d\u0430 \u041a\u0440\u044b\u043b\u043e\u0432\u0430","description":"Sint est eum voluptatem doloremque expedita. Dolores voluptas recusandae non deserunt tenetur. Et voluptas voluptatem ut assumenda sint enim. Fugiat quis et natus mollitia quibusdam eos ut."}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/grades/{id}'
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение класса по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      userId:
        name: userId
        description: ''
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 14
      userId: 15
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e","grade":{"id":77,"name":"\u041d\u0430\u0437\u0430\u0440\u043e\u0432 \u0410\u0432\u0433\u0443\u0441\u0442 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\u043e\u0432\u0438\u0447","description":"Culpa similique voluptas sed numquam. Repellat fugiat animi numquam. Qui beatae vero nobis velit incidunt. Rerum est nisi officiis ut tempore. Officiis sunt non error animi."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/grades
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание класса'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: true
        example: aakt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Qui magni hic occaecati quia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: aakt
      description: 'Qui magni hic occaecati quia.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d","grade":{"id":78,"name":"\u0413\u0435\u0440\u0430\u0441\u0438\u043c\u043e\u0432\u0430 \u0417\u0438\u043d\u0430\u0438\u0434\u0430 \u0418\u0432\u0430\u043d\u043e\u0432\u043d\u0430","description":"Quaerat qui nihil est perferendis consequatur repellat eum et. Qui quia iste nihil est corrupti. Ea eos qui asperiores voluptatem ratione. Eveniet dignissimos sunt eligendi ea unde omnis."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/grades/{id}'
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование класса'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: false
        example: htd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Nam sapiente saepe et consequatur.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: htd
      description: 'Nam sapiente saepe et consequatur.'
      userId: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0451\u043d","grade":{"id":79,"name":"\u041a\u043e\u0441\u0442\u0438\u043d \u0418\u043d\u043d\u043e\u043a\u0435\u043d\u0442\u0438\u0439 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447","description":"Quia impedit eaque soluta recusandae sunt et adipisci odio. Facere quos numquam quia voluptatem consequatur ut. Fugit sit dolores corporis aut omnis eum aliquid."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
