name: Race
description: 'Методы связанные с гонками'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/races
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех гонок по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userIdExists:
        name: userIdExists
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: minus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      appointmentUser:
        name: appointmentUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      favouritesUser:
        name: favouritesUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commissionUser:
        name: commissionUser
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      pastRace:
        name: pastRace
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 13
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-16T05:46:57'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateEnd:
        name: dateEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-16T05:46:57'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusIds:
        name: statusIds
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example:
          - 8
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sortField:
        name: sortField
        description: ''
        required: false
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: ipsum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 4
      userIdExists: 2
      paginate: false
      page: minus
      limit: 17
      appointmentUser: true
      favouritesUser: true
      commissionUser: false
      trackId: 5
      pastRace: false
      gradeIds:
        - 13
      dateStart: '2025-04-16T05:46:57'
      dateEnd: '2025-04-16T05:46:57'
      locationId: 7
      statusIds:
        - 8
      sortField: repellendus
      sort: ipsum
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.race.get.success","races":{"id":207,"name":"Noelia West","desc":"Dolore est est reiciendis praesentium. Laudantium dolore beatae eaque molestiae ad. Necessitatibus illo ea optio totam. Totam et ea est molestiae.","is_work":false,"date_start":"2025-04-16T03:07:52.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}},{"status":"success","message":"messages.race.get.success","races":{"id":208,"name":"Dane Blanda","desc":"Perspiciatis reprehenderit dolorum et nemo et. Unde quia nesciunt exercitationem et quas. Est dolore nesciunt reprehenderit nam eos qui pariatur.","is_work":true,"date_start":"2025-04-16T15:51:39.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение гонки по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: ''
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      appointmentUser:
        name: appointmentUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      favouritesUser:
        name: favouritesUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commissionUser:
        name: commissionUser
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 15
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 5
      appointmentUser: true
      favouritesUser: true
      commissionUser: false
      gradeIds:
        - 15
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.get_for_id.success","race":{"id":209,"name":"Sam Walter","desc":"Ipsam error sint voluptatibus vel qui. Dolores voluptas qui consectetur ex nostrum.","is_work":true,"date_start":"2025-04-16T01:10:35.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/races
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание гонки'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
        required: true
        example: yphxverlfotnaoiwsuhstrplcvfbeondgnaanjhiygbaqlxgqkflnxjjmpxqnihsckyyleevwajrptuoxlsnaeqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: true
        example: '2025-04-16T05:46:57'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      recordStart:
        name: recordStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-16T05:46:57'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordEnd:
        name: recordEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-16T05:46:57'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      images:
        name: images
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      positionFile:
        name: positionFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resultsFile:
        name: resultsFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 12
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: true
        example: voluptatum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      statusId:
        name: statusId
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cupIds:
        name: cupIds
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example:
          - 4
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: yphxverlfotnaoiwsuhstrplcvfbeondgnaanjhiygbaqlxgqkflnxjjmpxqnihsckyyleevwajrptuoxlsnaeqa
      desc: qui
      dateStart: '2025-04-16T05:46:57'
      recordStart: '2025-04-16T05:46:57'
      recordEnd: '2025-04-16T05:46:57'
      trackId: 8
      gradeIds:
        - 12
      locationId: voluptatum
      statusId: 6
      cupIds:
        - 4
    fileParameters:
      images:
        - null
      positionFile: null
      resultsFile: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.create.success","race":{"id":210,"name":"Eriberto Nicolas","desc":"Explicabo excepturi enim aliquid quis sequi ipsam sapiente sit. Libero aut omnis consectetur veniam est tempora delectus.","is_work":false,"date_start":"2025-04-16T17:33:54.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/update'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование гонки'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
        required: false
        example: ddeoqzwxcyatekjvkaklauqezuxlacshqrerlqyzdkjdspjhwwfbxccrqcutvyvgewwtltqcuvaze
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-16T05:46:57'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordEnd:
        name: recordEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-16T05:46:57'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordStart:
        name: recordStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-16T05:46:57'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imagesAdd:
        name: imagesAdd
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      imagesDel:
        name: imagesDel
        description: ''
        required: false
        example:
          - maxime
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      positionFile:
        name: positionFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resultsFile:
        name: resultsFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 15
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusId:
        name: statusId
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cupIds:
        name: cupIds
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example:
          - 5
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: ddeoqzwxcyatekjvkaklauqezuxlacshqrerlqyzdkjdspjhwwfbxccrqcutvyvgewwtltqcuvaze
      desc: non
      dateStart: '2025-04-16T05:46:57'
      recordEnd: '2025-04-16T05:46:57'
      recordStart: '2025-04-16T05:46:57'
      trackId: 10
      imagesDel:
        - maxime
      gradeIds:
        - 15
      locationId: 12
      statusId: 20
      cupIds:
        - 5
    fileParameters:
      imagesAdd:
        - null
      positionFile: null
      resultsFile: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.update.success","race":{"id":211,"name":"Carmen Shields MD","desc":"Vel ducimus blanditiis ut ex at. Et aliquam tempore perferendis velit error qui. Laudantium quidem id ut doloribus vero.","is_work":true,"date_start":"2025-04-16T15:31:34.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/toggle-is-work'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.toggle_is_work.success","race":{"id":212,"name":"Elda Mann","desc":"Necessitatibus tempore deleniti explicabo consequatur. Ea quibusdam repellendus ducimus. Nemo molestiae nesciunt perspiciatis omnis. Blanditiis voluptas rerum nihil veniam non.","is_work":true,"date_start":"2025-04-16T08:36:37.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/commission/add'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: addCommission
      description: 'Прикрепить судей к гонке.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      usersIds:
        name: usersIds
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example:
          - 2
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      usersIds:
        - 2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.commission.add.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.user.add_commission.incorrect_role"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/races/{id}'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: delete
      description: 'Удаление гонки'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.delete.success","race":{"id":214,"name":"Mr. Dewitt Effertz","desc":"Dolore placeat laudantium doloribus harum. Qui eum in qui ullam corporis tenetur. Laboriosam praesentium voluptas non ea aut doloribus. Quia ipsa voluptatem aut itaque.","is_work":true,"date_start":"2025-04-16T16:41:20.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/add-document'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdfFiles:
        name: pdfFiles
        description: 'Must be a file.'
        required: true
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      pdfFiles:
        - null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.document.success","race":{"id":215,"name":"Dulce Daniel","desc":"Fugit minima et ipsa ab eum est optio. Eos repellendus temporibus sunt quod occaecati sed mollitia. Ratione aperiam pariatur minima et.","is_work":false,"date_start":"2025-04-16T13:19:49.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
