name: Grade
description: 'Методы связанные с классами'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/grades
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех классов по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Значение поля value не может быть больше 50.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 17
      paginate: false
      page: a
      limit: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","grades":{"id":125,"name":"\u0414\u0430\u0432\u0438\u0434 \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447 \u041f\u0430\u043d\u043e\u0432","description":"Tempora facilis odit rerum veritatis rerum quo. Laudantium optio consequatur temporibus dolor illo. Cum blanditiis aut accusantium."}},{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","grades":{"id":126,"name":"\u0412\u0438\u043a\u0442\u043e\u0440\u0438\u044f \u0424\u0451\u0434\u043e\u0440\u043e\u0432\u043d\u0430 \u0413\u043e\u043b\u0443\u0431\u0435\u0432\u0430","description":"Velit sapiente eum ea quod assumenda. Maxime voluptatem culpa aut cum voluptatum omnis. Dignissimos eaque neque saepe possimus est accusamus natus."}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/grades/{id}'
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение класса по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      userId:
        name: userId
        description: ''
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 12
      userId: 7
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","grade":{"id":127,"name":"\u0422\u0435\u0442\u0435\u0440\u0438\u043d \u041d\u0435\u0441\u0442\u043e\u0440 \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u0438\u0447","description":"Hic sed aut veniam a ut nihil. Provident aliquam omnis dicta qui. Reiciendis labore repudiandae enim delectus et est. Aut ratione ut nihil earum officiis."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/grades
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание класса'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: true
        example: jlobhpnozvomtqgxwc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Ipsa mollitia eius at fugiat voluptatum ut.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: jlobhpnozvomtqgxwc
      description: 'Ipsa mollitia eius at fugiat voluptatum ut.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d.","grade":{"id":128,"name":"\u0414\u0438\u0430\u043d\u0430 \u0411\u043e\u0440\u0438\u0441\u043e\u0432\u043d\u0430 \u0420\u0443\u0441\u0430\u043a\u043e\u0432\u0430","description":"Atque laboriosam ipsam eum minima corporis. Necessitatibus eius voluptatibus voluptas voluptas. Minima qui id saepe qui quam in. Tenetur accusamus est voluptatibus quasi ipsam iure."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/grades/{id}'
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование класса'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: false
        example: mbx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Facilis tempore illum tempora quia cumque deserunt esse.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: mbx
      description: 'Facilis tempore illum tempora quia cumque deserunt esse.'
      userId: 9
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0451\u043d.","grade":{"id":129,"name":"\u0411\u043e\u0433\u0434\u0430\u043d\u043e\u0432\u0430 \u042e\u043b\u0438\u044f \u0414\u043c\u0438\u0442\u0440\u0438\u0435\u0432\u043d\u0430","description":"Officiis qui perspiciatis repellendus aut. Natus non dolorem qui totam quo repellat et."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
