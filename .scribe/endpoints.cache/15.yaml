## Autogenerated by Scribe. DO NOT MODIFY.

name: Grade
description: 'Методы связанные с классами'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/grades
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех классов по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Значение поля value не может быть больше 50.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 20
      paginate: true
      page: natus
      limit: 14
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e","grades":{"id":60,"name":"\u0422\u0430\u0442\u044c\u044f\u043d\u0430 \u0418\u0432\u0430\u043d\u043e\u0432\u043d\u0430 \u041c\u0430\u0442\u0432\u0435\u0435\u0432\u0430","description":"Qui veniam autem ducimus similique. Vel doloribus quaerat dolores tempora. Alias nesciunt tenetur suscipit."}},{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e","grades":{"id":61,"name":"\u0412\u0435\u0440\u043e\u043d\u0438\u043a\u0430 \u0418\u0432\u0430\u043d\u043e\u0432\u043d\u0430 \u0413\u0443\u043b\u044f\u0435\u0432\u0430","description":"Consequuntur dolorem dolorum quaerat possimus enim quo explicabo. Voluptates accusamus assumenda consequatur. Aspernatur voluptas voluptate in."}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/grades/{id}'
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение класса по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      userId:
        name: userId
        description: ''
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      id: 18
      userId: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e","grade":{"id":62,"name":"\u041d\u0435\u043a\u0440\u0430\u0441\u043e\u0432\u0430 \u041c\u0430\u0440\u0438\u044f \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u043d\u0430","description":"Quo aut voluptatem enim voluptatum ratione. Dolorum odit ut nulla eum quia optio alias eos. Voluptas ab quod consequatur inventore. Ab distinctio illum eum."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/grades
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание класса'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: true
        example: rmybdctijjnalmxpb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'In eos fugiat et rem delectus.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: rmybdctijjnalmxpb
      description: 'In eos fugiat et rem delectus.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d","grade":{"id":63,"name":"\u0415\u0444\u0440\u0435\u043c\u043e\u0432\u0430 \u041c\u0430\u0439\u044f \u0420\u043e\u043c\u0430\u043d\u043e\u0432\u043d\u0430","description":"Minus nostrum id sint iusto quo iste necessitatibus temporibus. Odit veritatis illum eligendi eos voluptatem tempore. Quibusdam qui libero quis in. Ab voluptatem nulla sed in dolor voluptatem."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/grades/{id}'
    metadata:
      groupName: Grade
      groupDescription: 'Методы связанные с классами'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование класса'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: false
        example: bfsdekgazzum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Omnis ut et rerum dolorum et recusandae.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: bfsdekgazzum
      description: 'Omnis ut et rerum dolorum et recusandae.'
      userId: 20
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u043b\u0430\u0441\u0441 \u0433\u043e\u043d\u043a\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0451\u043d","grade":{"id":64,"name":"\u0414\u043e\u0431\u0440\u044b\u043d\u044f \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447 \u0410\u0444\u0430\u043d\u0430\u0441\u044c\u0435\u0432","description":"Placeat recusandae id ipsam et odio. Ut assumenda saepe atque enim. Alias et laudantium ea ut inventore sit libero iure."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
