## Autogenerated by Scribe. DO NOT MODIFY.

name: Cup
description: 'Методы связанные с кубками'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение кубков по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: true
      limit: 7
      page: nesciunt
      name: molestiae
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.get_for_id.success","cup":{"id":99,"name":"Robbie Little DVM","year":2014,"stages":"7","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cups
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: dkmibxjm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year:
        name: year
        description: ''
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vwufufbrrir
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: dkmibxjm
      year: 3
      color: iure
      stages: vwufufbrrir
      locationId: 12
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.create.success","cup":{"id":101,"name":"Lonnie Connelly I","year":1974,"stages":"3","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Обновление кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: sridkqsssjj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      year:
        name: year
        description: ''
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ouncdghzbzedpx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: sridkqsssjj
      year: 10
      stages: ouncdghzbzedpx
      color: dolorem
      locationId: 18
      userId: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.update.success","cup":{"id":102,"name":"Prof. Tyler Parisian PhD","year":1990,"stages":"3","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
