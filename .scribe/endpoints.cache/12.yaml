## Autogenerated by Scribe. DO NOT MODIFY.

name: Cup
description: 'Методы связанные с кубками'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение кубков по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: officia
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: officia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 100.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: dolorem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: false
      limit: 2
      page: sunt
      name: dolorem
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.get_for_id.success","cup":{"id":107,"name":"Maria Von","year":1993,"stages":"6","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cups
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: dvqrzvqqubbngvcbtfl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year:
        name: year
        description: ''
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: repellendus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Must not be greater than 255 characters.'
        required: false
        example: rnvavbijtpedv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: dvqrzvqqubbngvcbtfl
      year: 14
      color: repellendus
      stages: rnvavbijtpedv
      locationId: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.create.success","cup":{"id":109,"name":"Estefania Parker","year":2018,"stages":"4","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Обновление кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: jnbiefxfoercbitixekoqfadp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      year:
        name: year
        description: ''
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Must not be greater than 255 characters.'
        required: false
        example: poqrwjqqcire
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: iusto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: jnbiefxfoercbitixekoqfadp
      year: 14
      stages: poqrwjqqcire
      color: iusto
      locationId: 5
      userId: 8
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.cup.update.success","cup":{"id":110,"name":"Ms. Desiree Mohr DVM","year":1987,"stages":"7","image":null,"color":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
