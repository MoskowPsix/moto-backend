## Autogenerated by Scribe. DO NOT MODIFY.

name: Auth
description: 'Авторизация пользователей и всё что с ней связано.'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Авторизация пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table. Must be at least 3 characters.'
        required: true
        example: roberts.hardy@example.com
        example: jovanny.jast@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 3 characters.'
        required: true
        example: 'Q''6\T(BL'
        example: 'AnmIUSEzJo,E@4lzk'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: roberts.hardy@example.com
      password: 'Q''6\T(BL'
      email: jovanny.jast@example.net
      password: 'AnmIUSEzJo,E@4lzk'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.login.success","access_token":"2|pGUbN9omlkYG16IH5hv4OiZW7j6cWOfSlx1Q7B2A493ff66b","token_type":"Bearer","user":{"id":2,"name":"Dameon Ledner","email":"hamill.alvah@example.com","email_verified_at":"2025-02-13T11:11:25.000000Z","avatar":null}}'
        content: '{"status":"success","message":"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043b\u0438\u0441\u044c","access_token":"2|7XI3G1n64VR0f13yw2xcWqLaozv5sfvaXZZTR3us0f31290f","token_type":"Bearer","user":{"id":1103,"name":"\u0414\u0430\u043d \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u0438\u0447 \u041a\u043e\u043d\u043e\u043d\u043e\u0432","email":"anna54@example.com","email_verified_at":"2025-02-13T07:07:44.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"success","message":"messages.auth.login.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Регистрация нового пользователя'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
        required: true
        example: gks
        example: z
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gdamore@example.net
        example: ayla41@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 'Wc2XiLfZS#.J>'
        example: 'qQE#*i{iEjb'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The value and <code>password</code> must match.'
        required: true
        example: porro
        example: maxime
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      avatar:
        name: avatar
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: gks
      email: gdamore@example.net
      password: 'Wc2XiLfZS#.J>'
      password_confirmation: porro
      name: z
      email: ayla41@example.com
      password: 'qQE#*i{iEjb'
      password_confirmation: maxime
    fileParameters:
      avatar: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.register.success","access_token":"3|oc6sFGX1RttssGrVPX0XgK4EtqortmCMfoeCLHrSbb5df4f1","token_type":"Bearer","user":{"id":3,"name":"Haleigh Barton","email":"maryse.yost@example.org","email_verified_at":"2025-02-13T11:11:27.000000Z","avatar":null}}'
        content: '{"status":"success","message":"\u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b","access_token":"3|OoWrp7DENvQxAmeppFD5abAdFn6vnSoPloHw1YEz15d42fdb","token_type":"Bearer","user":{"id":1104,"name":"\u041b\u044e\u0431\u043e\u0432\u044c \u0415\u0432\u0433\u0435\u043d\u044c\u0435\u0432\u043d\u0430 \u041a\u0443\u043b\u0430\u0433\u0438\u043d\u0430","email":"mmatveev@example.com","email_verified_at":"2025-02-13T07:07:44.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.auth.register.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Auth
      groupDescription: 'Авторизация пользователей и всё что с ней связано.'
      subgroup: ''
      subgroupDescription: ''
      title: logout
      description: 'Выход пользователя'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.auth.logout.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"success","message":"messages.auth.logout.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
