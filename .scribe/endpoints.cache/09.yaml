## Autogenerated by Scribe. DO NOT MODIFY.

name: Race
description: 'Методы связанные с гонками'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/races
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех гонок по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userIdExists:
        name: userIdExists
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: praesentium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      appointmentUser:
        name: appointmentUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      favouritesUser:
        name: favouritesUser
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commissionUser:
        name: commissionUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      pastRace:
        name: pastRace
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 1
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-05-23T09:55:17'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateEnd:
        name: dateEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-05-23T09:55:17'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusIds:
        name: statusIds
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example:
          - 6
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sortField:
        name: sortField
        description: ''
        required: false
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: laborum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      degreeIds:
        name: degreeIds
        description: 'The <code>id</code> of an existing record in the degrees table.'
        required: true
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      userId: 19
      userIdExists: 15
      paginate: false
      page: praesentium
      limit: 16
      appointmentUser: true
      favouritesUser: false
      commissionUser: true
      trackId: 2
      pastRace: false
      gradeIds:
        - 1
      dateStart: '2025-05-23T09:55:17'
      dateEnd: '2025-05-23T09:55:17'
      locationId: 10
      statusIds:
        - 6
      sortField: quo
      sort: ullam
      name: laborum
      degreeIds:
        - 16
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.race.get.success","races":{"id":375,"name":"Mr. Pierce Littel","desc":"Tempore natus nobis est error. Assumenda provident adipisci quia. Possimus rerum facere necessitatibus aliquid eum. Ut ipsa est dolorum sed omnis eos. Dolor aut iste natus ullam.","is_work":true,"date_start":"2025-05-23T12:08:55.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}},{"status":"success","message":"messages.race.get.success","races":{"id":376,"name":"Mr. Kristopher Rau","desc":"Quos sed libero quis voluptates neque porro. Sunt quae soluta sint vero qui repudiandae ducimus sit. Hic reprehenderit dolorum rerum reiciendis error. Et hic provident sunt fugit est eius quidem.","is_work":false,"date_start":"2025-05-23T01:56:53.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение гонки по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: ''
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      appointmentUser:
        name: appointmentUser
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      favouritesUser:
        name: favouritesUser
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commissionUser:
        name: commissionUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 18
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 6
      appointmentUser: false
      favouritesUser: false
      commissionUser: true
      gradeIds:
        - 18
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.get_for_id.success","race":{"id":377,"name":"Prof. Clay Hintz Jr.","desc":"A omnis ut error debitis ea ducimus odio illo. Laborum non odit inventore pariatur qui fugit fugit. Qui officiis et rem nostrum cumque optio possimus.","is_work":true,"date_start":"2025-05-23T00:44:39.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/races
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание гонки'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
        required: true
        example: gphpiqwwskexclao
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: delectus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: true
        example: '2025-05-23T09:55:18'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      recordStart:
        name: recordStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-05-23T09:55:18'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordEnd:
        name: recordEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-05-23T09:55:18'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      images:
        name: images
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      positionFile:
        name: positionFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resultsFile:
        name: resultsFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 12
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      statusId:
        name: statusId
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cupIds:
        name: cupIds
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example:
          - 3
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: gphpiqwwskexclao
      desc: delectus
      dateStart: '2025-05-23T09:55:18'
      recordStart: '2025-05-23T09:55:18'
      recordEnd: '2025-05-23T09:55:18'
      trackId: 12
      gradeIds:
        - 12
      locationId: itaque
      statusId: 2
      cupIds:
        - 3
    fileParameters:
      images:
        - null
      positionFile: null
      resultsFile: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.create.success","race":{"id":378,"name":"Henriette Reynolds","desc":"Maiores qui magni quam non ea. Omnis perferendis consectetur voluptatum est. Iste dolorem ipsa et neque ut dolore. Officiis omnis dolore aut ullam facere laudantium ea.","is_work":true,"date_start":"2025-05-23T03:45:32.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/update'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование гонки'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
        required: false
        example: mrgxxrlkdrzphsuifoemekgbklhwaouwiesvpfafhcfwcwxvhcsljfsxyrgfuhkcsezcyejjqm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: eius
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-05-23T09:55:18'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordEnd:
        name: recordEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-05-23T09:55:18'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordStart:
        name: recordStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-05-23T09:55:18'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imagesAdd:
        name: imagesAdd
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      imagesDel:
        name: imagesDel
        description: ''
        required: false
        example:
          - harum
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      positionFile:
        name: positionFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resultsFile:
        name: resultsFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 9
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusId:
        name: statusId
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cupIds:
        name: cupIds
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example:
          - 2
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: mrgxxrlkdrzphsuifoemekgbklhwaouwiesvpfafhcfwcwxvhcsljfsxyrgfuhkcsezcyejjqm
      desc: eius
      dateStart: '2025-05-23T09:55:18'
      recordEnd: '2025-05-23T09:55:18'
      recordStart: '2025-05-23T09:55:18'
      trackId: 2
      imagesDel:
        - harum
      gradeIds:
        - 9
      locationId: 8
      statusId: 17
      cupIds:
        - 2
    fileParameters:
      imagesAdd:
        - null
      positionFile: null
      resultsFile: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.update.success","race":{"id":379,"name":"Raymundo Johnson III","desc":"Illo libero facere sit error. Id alias labore pariatur aliquam ea nulla non aut. Qui animi perspiciatis sint ea voluptatibus repellat.","is_work":false,"date_start":"2025-05-23T17:26:56.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/toggle-is-work'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.toggle_is_work.success","race":{"id":380,"name":"Effie Ward","desc":"Nam accusantium quos neque et et harum repellat. Velit enim aliquid ut consequatur numquam sed. Explicabo quia consequatur ab quod et qui voluptatem. Nemo aut ex dolor itaque ea accusamus et.","is_work":false,"date_start":"2025-05-23T17:20:08.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/commission/add'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: addCommission
      description: 'Прикрепить судей к гонке.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      usersIds:
        name: usersIds
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example:
          - 9
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      usersIds:
        - 9
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.commission.add.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.user.add_commission.incorrect_role"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/races/{id}'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: delete
      description: 'Удаление гонки'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.delete.success","race":{"id":382,"name":"Roslyn Waters","desc":"Magni repellendus iste qui. Hic laudantium qui consequatur harum rerum unde. Odit magni pariatur pariatur est velit temporibus accusamus.","is_work":true,"date_start":"2025-05-23T07:19:18.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/add-document'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: addDocument
      description: 'Добавление файла с результатами к гонке комиссии'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      pdfFiles:
        name: pdfFiles
        description: 'Must be a file.'
        required: true
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pdfFilesDel:
        name: pdfFilesDel
        description: ''
        required: false
        example:
          - debitis
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      pdfFilesDel:
        - debitis
    fileParameters:
      pdfFiles:
        - null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.document.success","race":{"id":383,"name":"Trystan Connelly","desc":"Et vel fuga omnis repellat amet. Aut numquam dolor eveniet eius nobis et consequatur quos. Et reprehenderit omnis enim ad. Tempore explicabo consequatur et quaerat reiciendis assumenda.","is_work":false,"date_start":"2025-05-23T13:29:36.000000Z","images":null,"contacts":null,"record_end":null,"record_start":null,"position_file":null,"results_file":null,"pdf_files":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
