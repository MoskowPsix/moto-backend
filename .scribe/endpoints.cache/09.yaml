## Autogenerated by Scribe. DO NOT MODIFY.

name: Race
description: 'Методы связанные с гонками'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/races
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение всех гонок по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      appointmentUser:
        name: appointmentUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      pastRace:
        name: pastRace
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-03-17T09:52:47'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateEnd:
        name: dateEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-03-17T09:52:47'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusIds:
        name: statusIds
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example:
          - 19
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 16
      paginate: false
      page: porro
      limit: 4
      appointmentUser: true
      trackId: 18
      pastRace: true
      gradeIds:
        - 16
      dateStart: '2025-03-17T09:52:47'
      dateEnd: '2025-03-17T09:52:47'
      locationId: 17
      statusIds:
        - 19
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.race.get.success","races":{"id":48,"name":"Cyrus Prohaska","desc":"Cupiditate molestias et quidem sit veniam error. Sunt dolores magni soluta aut sequi assumenda. Sunt ea deserunt in doloribus molestias natus quia.","is_work":false,"date_start":"2025-03-17T07:43:45.000000Z","images":null,"contacts":null,"record_end":null,"position_file":null,"results_file":null}},{"status":"success","message":"messages.race.get.success","races":{"id":49,"name":"Prof. Geovany Daniel IV","desc":"Cupiditate minus repudiandae qui et nesciunt est autem. Iure aut voluptate tenetur expedita hic quisquam. Ipsam et velit ad doloribus.","is_work":false,"date_start":"2025-03-17T06:20:45.000000Z","images":null,"contacts":null,"record_end":null,"position_file":null,"results_file":null}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение гонки по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: ''
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      appointmentUser:
        name: appointmentUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 9
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 18
      appointmentUser: true
      gradeIds:
        - 9
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.get_for_id.success","race":{"id":50,"name":"Ocie Schiller II","desc":"Odio sit aspernatur ipsa voluptas quia officiis. Esse laudantium libero est in. Vero non delectus vel consequatur quae nisi.","is_work":true,"date_start":"2025-03-17T23:37:41.000000Z","images":null,"contacts":null,"record_end":null,"position_file":null,"results_file":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/races
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание гонки'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
        required: true
        example: fcsqtillkchktyoultkqzeapanybowdbeksxwwuoamuiyoicvtfanxlvtzcvogepjdowcdvzfetkiy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: true
        example: '2025-03-17T09:52:47'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      recordEnd:
        name: recordEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-03-17T09:52:47'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      images:
        name: images
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      positionFile:
        name: positionFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resultsFile:
        name: resultsFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 15
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusId:
        name: statusId
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cupIds:
        name: cupIds
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example:
          - 9
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: fcsqtillkchktyoultkqzeapanybowdbeksxwwuoamuiyoicvtfanxlvtzcvogepjdowcdvzfetkiy
      desc: eum
      dateStart: '2025-03-17T09:52:47'
      recordEnd: '2025-03-17T09:52:47'
      trackId: 6
      gradeIds:
        - 15
      locationId: 9
      statusId: 12
      cupIds:
        - 9
    fileParameters:
      images:
        - null
      positionFile: null
      resultsFile: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.create.success","race":{"id":51,"name":"Steve Collins","desc":"Natus modi et nostrum molestiae laboriosam accusamus porro. Voluptatem consequatur tempore quibusdam rem. Reprehenderit fuga in aut quis nemo nulla illo ullam.","is_work":true,"date_start":"2025-03-17T12:55:02.000000Z","images":null,"contacts":null,"record_end":null,"position_file":null,"results_file":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/update'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Редактирование гонки'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters. Must be at least 3 characters.'
        required: false
        example: ytosflxxhnoihrjrkdyfc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: adipisci
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      dateStart:
        name: dateStart
        description: 'Must be a valid date.'
        required: false
        example: '2025-03-17T09:52:48'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      recordEnd:
        name: recordEnd
        description: 'Must be a valid date.'
        required: false
        example: '2025-03-17T09:52:48'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      trackId:
        name: trackId
        description: 'The <code>id</code> of an existing record in the tracks table.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      imagesAdd:
        name: imagesAdd
        description: 'Must be an image.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      imagesDel:
        name: imagesDel
        description: ''
        required: false
        example:
          - assumenda
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      positionFile:
        name: positionFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      resultsFile:
        name: resultsFile
        description: 'Must be a file.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeIds:
        name: gradeIds
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: false
        example:
          - 14
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      statusId:
        name: statusId
        description: 'The <code>id</code> of an existing record in the statuses table.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cupIds:
        name: cupIds
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example:
          - 6
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: ytosflxxhnoihrjrkdyfc
      desc: adipisci
      dateStart: '2025-03-17T09:52:48'
      recordEnd: '2025-03-17T09:52:48'
      trackId: 14
      imagesDel:
        - assumenda
      gradeIds:
        - 14
      locationId: 19
      statusId: 9
      cupIds:
        - 6
    fileParameters:
      imagesAdd:
        - null
      positionFile: null
      resultsFile: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.update.success","race":{"id":52,"name":"Emerson O''Hara","desc":"Omnis cumque doloremque rerum aut ea voluptas expedita culpa. Sequi quia voluptatem in ut et voluptas rerum.","is_work":false,"date_start":"2025-03-17T17:10:48.000000Z","images":null,"contacts":null,"record_end":null,"position_file":null,"results_file":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/races/{id}/toggle-is-work'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: toggleIsWork
      description: 'Переключатель гонки, с рабочего на нерабочий и наоборот.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race.toggle_is_work.success","race":{"id":53,"name":"Ruthie Weimann","desc":"Accusantium provident qui sed doloribus ut accusantium. Harum maiores neque corrupti nobis dolorum et nulla.","is_work":true,"date_start":"2025-03-17T04:34:12.000000Z","images":null,"contacts":null,"record_end":null,"position_file":null,"results_file":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/races/{id}/commission/add'
    metadata:
      groupName: Race
      groupDescription: 'Методы связанные с гонками'
      subgroup: ''
      subgroupDescription: ''
      title: addCommission
      description: 'Прикрепить судей к гонке.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      usersIds:
        name: usersIds
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example:
          - 12
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      usersIds:
        - 12
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.commission.add.success"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.user.add_commission.incorrect_role"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
