## Autogenerated by Scribe. DO NOT MODIFY.

name: Track
description: 'Методы взаимодествия с трассами на которых проходят гонки'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tracks
    metadata:
      groupName: Track
      groupDescription: 'Методы взаимодествия с трассами на которых проходят гонки'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение трасс по фильтрам'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: dolorum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Значение поля value не может быть больше 50.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      userId: 14
      paginate: true
      page: dolorum
      limit: 18
      locationId: 12
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"\u0422\u0440\u0435\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","tracks":{"id":90,"name":"\u041f\u0435\u0447\u043d\u0438\u043a","address":"409265, \u041b\u0438\u043f\u0435\u0446\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c, \u0433\u043e\u0440\u043e\u0434 \u0427\u0435\u0445\u043e\u0432, \u0448\u043e\u0441\u0441\u0435 \u0427\u0435\u0445\u043e\u0432\u0430, 15","images":null,"latitude":0,"longitude":0,"level":{"name":"\u0412\u044b\u0441\u043e\u043a\u0430\u044f","color":"#FD1215"},"desc":"Quia nihil libero reiciendis minus perspiciatis ut. Cumque ipsum mollitia expedita. Voluptates corporis non explicabo. Et consequuntur accusantium quibusdam molestias tenetur praesentium. Non eos id velit. Qui quia nemo quidem et placeat non dolorum. Possimus voluptatem non alias optio omnis eum atque. Sit ut cumque ratione tempora et sed qui facere. Fugiat et ratione pariatur excepturi rerum qui ut et. Velit quod magni commodi quam mollitia excepturi ipsa.","length":837,"turns":76,"free":false,"is_work":true,"spec":null,"contacts":null,"location":{"id":45,"name":"\u041d\u0435\u043d\u0435\u0446\u043a\u0438\u0439","type":"\u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u044b\u0439 \u043e\u043a\u0440\u0443\u0433"},"light":null,"season":null,"schema_img":null,"logo":null,"store":null}},{"status":"success","message":"\u0422\u0440\u0435\u043a\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","tracks":{"id":91,"name":"\u041b\u0435\u0441\u043e\u0440\u0443\u0431","address":"452107, \u041e\u0440\u0435\u043d\u0431\u0443\u0440\u0433\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c, \u0433\u043e\u0440\u043e\u0434 \u0412\u043e\u043b\u043e\u043a\u043e\u043b\u0430\u043c\u0441\u043a, \u043f\u043b. \u0421\u0442\u0430\u043b\u0438\u043d\u0430, 93","images":null,"latitude":0,"longitude":0,"level":{"name":"\u0412\u044b\u0441\u043e\u043a\u0430\u044f","color":"#FD1215"},"desc":"Quaerat nam est veritatis harum earum ut accusamus. Facilis quod quae ut laborum mollitia. Autem aliquam voluptas deleniti et voluptatem impedit quam. Voluptatibus et eum distinctio consequuntur recusandae commodi culpa. Rem id et ex vitae reprehenderit atque. Iusto cupiditate voluptatem quae officia eum ut. Suscipit deserunt quo expedita impedit soluta at. Non rerum consequuntur quasi consequatur. Assumenda voluptas accusantium iste inventore placeat commodi sapiente.","length":812,"turns":99,"free":true,"is_work":true,"spec":null,"contacts":null,"location":{"id":5,"name":"\u0410\u0440\u0445\u0430\u043d\u0433\u0435\u043b\u044c\u0441\u043a\u0430\u044f","type":"\u043e\u0431\u043b\u0430\u0441\u0442\u044c"},"light":null,"season":null,"schema_img":null,"logo":null,"store":null}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tracks/{id}'
    metadata:
      groupName: Track
      groupDescription: 'Методы взаимодествия с трассами на которых проходят гонки'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение трассы по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the track.'
        required: true
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 24
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u0422\u0440\u0435\u043a \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","track":{"id":92,"name":"\u041b\u0438\u043d\u0433\u0432\u0438\u0441\u0442","address":"548250, \u041f\u0441\u043a\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c, \u0433\u043e\u0440\u043e\u0434 \u041e\u0437\u0451\u0440\u044b, \u043d\u0430\u0431. \u0421\u0442\u0430\u043b\u0438\u043d\u0430, 73","images":null,"latitude":0,"longitude":0,"level":{"name":"\u0412\u044b\u0441\u043e\u043a\u0430\u044f","color":"#FD1215"},"desc":"Et eum laudantium consequatur aut nemo. Assumenda dolor rerum sequi et non dolorum voluptatibus. Sapiente vero quia ipsam rerum praesentium. Fugiat ut laudantium eaque non nisi enim sunt. Tenetur inventore aut dicta ut. Earum et voluptatibus voluptas sequi soluta ipsum. Ut quo voluptas ab magni aperiam corporis impedit. Et aspernatur id nihil dolores quo. Sapiente assumenda dolorem enim est. Qui quas nobis iste asperiores aspernatur fugit at.","length":642,"turns":26,"free":false,"is_work":false,"spec":null,"contacts":null,"location":{"id":44,"name":"\u041c\u0443\u0440\u043c\u0430\u043d\u0441\u043a\u0430\u044f","type":"\u043e\u0431\u043b\u0430\u0441\u0442\u044c"},"light":null,"season":null,"schema_img":null,"logo":null,"store":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tracks
    metadata:
      groupName: Track
      groupDescription: 'Методы взаимодествия с трассами на которых проходят гонки'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Метод создания трека'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в поле value должно быть не меньше 3.'
        required: true
        example: hhkabipxyaambwgxusgmqakaxisdmlmqxznbrdsdnubl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'Значение поля value должно быть между -87 и 89.'
        required: true
        example: -86
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Значение поля value должно быть между -180 и 180.'
        required: true
        example: -180
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      images:
        name: images
        description: 'Файл, указанный в поле value, должен быть изображением.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      levelId:
        name: levelId
        description: 'The <code>id</code> of an existing record in the levels table.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      length:
        name: length
        description: ''
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      turns:
        name: turns
        description: ''
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      free:
        name: free
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_work:
        name: is_work
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      contacts:
        name: contacts
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      spec:
        name: spec
        description: ''
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      logo:
        name: logo
        description: 'Файл, указанный в поле value, должен быть изображением.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      light:
        name: light
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      season:
        name: season
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      schemaImg:
        name: schemaImg
        description: 'Файл, указанный в поле value, должен быть изображением.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      storeId:
        name: storeId
        description: 'The <code>id</code> of an existing record in the stores table.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: hhkabipxyaambwgxusgmqakaxisdmlmqxznbrdsdnubl
      address: est
      latitude: -86
      longitude: -180
      levelId: 1
      desc: illo
      length: 5
      turns: 1
      free: false
      is_work: true
      locationId: 3
      light: true
      season: true
      storeId: 9
    fileParameters:
      images:
        - null
      logo: null
      schemaImg: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u0422\u0440\u0435\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d.","track":{"id":93,"name":"\u0413\u0435\u0439\u043c\u0434\u0438\u0437\u0430\u0439\u043d\u0435\u0440","address":"549786, \u042f\u0440\u043e\u0441\u043b\u0430\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c, \u0433\u043e\u0440\u043e\u0434 \u041b\u0443\u0445\u043e\u0432\u0438\u0446\u044b, \u043f\u043b. \u041a\u043e\u0441\u043c\u043e\u043d\u0430\u0432\u0442\u043e\u0432, 27","images":null,"latitude":0,"longitude":0,"level":{"name":"\u0421\u0440\u0435\u0434\u043d\u044f\u044f","color":"#EF7C08"},"desc":"Dolore voluptates et dolor. Minus quis ut omnis omnis dolores. Veniam voluptas vel id tenetur veniam sunt ipsum. Et officia quis expedita sed enim explicabo. Natus nihil aut doloribus voluptatem dolorem explicabo cupiditate. Est consequatur sint est numquam ut. Eligendi ea sed velit qui eum. Nemo fuga incidunt quis soluta architecto. Dolore earum quia amet sint natus tempore. Suscipit explicabo iure voluptas fugiat adipisci.","length":646,"turns":86,"free":true,"is_work":true,"spec":null,"contacts":null,"location":{"id":77,"name":"\u0425\u0430\u043a\u0430\u0441\u0438\u044f","type":"\u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430"},"light":null,"season":null,"schema_img":null,"logo":null,"store":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"status":"error","message":"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0442\u0440\u0435\u043a\u0430."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/tracks/{id}'
    metadata:
      groupName: Track
      groupDescription: 'Методы взаимодествия с трассами на которых проходят гонки'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Метод редактирования трека'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the track.'
        required: true
        example: 24
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 24
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в поле value должно быть не меньше 3.'
        required: true
        example: ehjqlsvjywufgpxuxdwgtxxfkpghjorqmdzmerzojwtnpwvabainqywsodgyndccakpudpqhtljfyuawvhntqd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'Значение поля value должно быть между -87 и 89.'
        required: true
        example: -87
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Значение поля value должно быть между -180 и 180.'
        required: true
        example: -180
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      imagesAdd:
        name: imagesAdd
        description: 'Файл, указанный в поле value, должен быть изображением.'
        required: false
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      imagesDel:
        name: imagesDel
        description: ''
        required: false
        example:
          - voluptatem
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      levelId:
        name: levelId
        description: 'The <code>id</code> of an existing record in the levels table.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      desc:
        name: desc
        description: ''
        required: false
        example: nihil
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      length:
        name: length
        description: ''
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      turns:
        name: turns
        description: ''
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      free:
        name: free
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_work:
        name: is_work
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      contacts:
        name: contacts
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      spec:
        name: spec
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      storeId:
        name: storeId
        description: 'The <code>id</code> of an existing record in the stores table.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: ehjqlsvjywufgpxuxdwgtxxfkpghjorqmdzmerzojwtnpwvabainqywsodgyndccakpudpqhtljfyuawvhntqd
      address: enim
      latitude: -87
      longitude: -180
      imagesDel:
        - voluptatem
      levelId: 8
      desc: nihil
      length: 18
      turns: 15
      free: true
      is_work: true
      locationId: 16
      userId: 15
      storeId: 3
    fileParameters:
      imagesAdd:
        - null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u0422\u0440\u0435\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0451\u043d.","track":{"id":94,"name":"\u0421\u0442\u0438\u043b\u0438\u0441\u0442","address":"285093, \u0422\u0432\u0435\u0440\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c, \u0433\u043e\u0440\u043e\u0434 \u0414\u043e\u0440\u043e\u0445\u043e\u0432\u043e, \u0441\u043f\u0443\u0441\u043a \u0421\u0442\u0430\u043b\u0438\u043d\u0430, 95","images":null,"latitude":0,"longitude":0,"level":{"name":"\u041d\u0438\u0437\u043a\u0430\u044f","color":"#22CA3D"},"desc":"Et minima ratione dolor molestiae. Suscipit nihil aut veritatis et eligendi sit aut in. Dolorem eligendi quia praesentium sapiente omnis doloribus. Sed doloribus aut ut voluptas. Et magni libero ut ad non excepturi. Voluptatem iusto omnis omnis voluptatem quos. Id quibusdam voluptate dolor distinctio suscipit consequatur. Aut dolores amet odio impedit. Vel iusto eligendi esse excepturi. Omnis ut nihil ut eius voluptatem.","length":977,"turns":32,"free":true,"is_work":true,"spec":null,"contacts":null,"location":{"id":10,"name":"\u0411\u0443\u0440\u044f\u0442\u0438\u044f","type":"\u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430"},"light":null,"season":null,"schema_img":null,"logo":null,"store":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"\u0414\u043e\u0441\u0442\u0443\u043f \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"\u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
