## Autogenerated by Scribe. DO NOT MODIFY.

name: RaceResult
description: 'Управление результатами гонок.'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/race/{id}/results'
    metadata:
      groupName: RaceResult
      groupDescription: 'Управление результатами гонок.'
      subgroup: ''
      subgroupDescription: ''
      title: get
      description: 'Получение результатов гонки по фильтрам.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.result_race.get.success","race_results":{"scores":100,"place":10}},{"status":"success","message":"messages.result_race.get.success","race_results":{"scores":100,"place":10}}]'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/race/{id}/results'
    metadata:
      groupName: RaceResult
      groupDescription: 'Управление результатами гонок.'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Сохранение результатов.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the race.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cupId:
        name: cupId
        description: 'The <code>id</code> of an existing record in the cups table.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      commandId:
        name: commandId
        description: 'The <code>id</code> of an existing record in the commands table.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      gradeId:
        name: gradeId
        description: 'The <code>id</code> of an existing record in the grades table.'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      scores:
        name: scores
        description: ''
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      place:
        name: place
        description: ''
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      userId: 2
      cupId: 7
      commandId: 4
      gradeId: 4
      scores: 9
      place: 4
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.race_result.create.success","result":{"scores":100,"place":10}}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"status":"error","message":"messages.error.not_allowed"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
