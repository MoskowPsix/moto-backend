## Autogenerated by Scribe. DO NOT MODIFY.

name: User
description: 'Методы манипуляции пользователем.'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: User
      groupDescription: 'Методы манипуляции пользователем.'
      subgroup: ''
      subgroupDescription: ''
      title: GetUserForToken
      description: 'Получить данные пользователя по токену'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.user.get_user_for_token.success","user":{"id":372,"name":"Delia Goldner","email":"marcos.mitchell@example.com","email_verified_at":"2025-04-14T06:38:46.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: User
      groupDescription: 'Методы манипуляции пользователем.'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получить пользователя по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.user.get_for_id.success","user":{"id":373,"name":"Mr. Alfredo Blanda PhD","avatar":null,"personal":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"status":"error","message":"messages.error.not_found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users/update
    metadata:
      groupName: User
      groupDescription: 'Методы манипуляции пользователем.'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Обновить профиль пользователя'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
        required: false
        example: j
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: lonzo.grant@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      avatar:
        name: avatar
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      number:
        name: number
        description: 'Must be at least 10 characters. Must not be greater than 12 characters.'
        required: false
        example: do
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: j
      email: lonzo.grant@example.org
      number: do
    fileParameters:
      avatar: null
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.user.update.success","user":{"id":374,"name":"Alexandra Abernathy","email":"ihuel@example.org","email_verified_at":"2025-04-14T06:38:46.000000Z","avatar":null}}'
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: '{"status":"success","message":"messages.user.update.error"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users-commissions
    metadata:
      groupName: User
      groupDescription: 'Методы манипуляции пользователем.'
      subgroup: ''
      subgroupDescription: ''
      title: getCommissions
      description: 'Получить список судей'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      paginate:
        name: paginate
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Must not be greater than 50.'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: non
      paginate: false
      page: ipsam
      limit: 12
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"status":"success","message":"messages.user.commision_get.success","users":{"id":375,"name":"Jake Gutmann","avatar":null,"personal":[]}},{"status":"success","message":"messages.user.commision_get.success","users":{"id":376,"name":"Prof. Gwen Schuppe PhD","avatar":null,"personal":[]}}]'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/users
    metadata:
      groupName: User
      groupDescription: 'Методы манипуляции пользователем.'
      subgroup: ''
      subgroupDescription: ''
      title: Delete
      description: 'Удаление аккаунта пользователя'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"messages.user.delete.success"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
