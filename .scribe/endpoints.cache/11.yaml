## Autogenerated by Scribe. DO NOT MODIFY.

name: Cup
description: 'Методы связанные с кубками'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: getForId
      description: 'Получение кубков по id'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      paginate:
        name: paginate
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      limit:
        name: limit
        description: 'Значение поля value не может быть больше 100.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: voluptates
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      paginate: true
      limit: 22
      page: voluptates
      name: voluptatem
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u0443\u0431\u043e\u043a \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u0443\u0441\u043f\u0435\u0448\u043d\u043e.","cup":{"id":9,"name":"\u042f\u043a\u043e\u0432\u043b\u0435\u0432\u0430 \u0415\u0432\u0433\u0435\u043d\u0438\u044f \u0415\u0432\u0433\u0435\u043d\u044c\u0435\u0432\u043d\u0430","year":1986,"stages":"5"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cups
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: create
      description: 'Создание кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: true
        example: mukpptrxpshitgmzfqvuvzbgx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year:
        name: year
        description: ''
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stages:
        name: stages
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: false
        example: sxu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: mukpptrxpshitgmzfqvuvzbgx
      year: 9
      stages: sxu
      locationId: 11
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u0443\u0431\u043e\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d","cup":{"id":11,"name":"\u0411\u0435\u043b\u043e\u0443\u0441\u043e\u0432 \u0410\u043a\u0438\u043c \u0424\u0451\u0434\u043e\u0440\u043e\u0432\u0438\u0447","year":2009,"stages":"1"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/cups/{id}'
    metadata:
      groupName: Cup
      groupDescription: 'Методы связанные с кубками'
      subgroup: ''
      subgroupDescription: ''
      title: update
      description: 'Обновление кубка'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cup.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: false
        example: navlvhgiimbzgkasxpszvrz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      year:
        name: year
        description: ''
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      stages:
        name: stages
        description: 'Количество символов в значении поля value не может превышать 255.'
        required: false
        example: tjwb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      locationId:
        name: locationId
        description: 'The <code>id</code> of an existing record in the locations table.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      userId:
        name: userId
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: navlvhgiimbzgkasxpszvrz
      year: 10
      stages: tjwb
      locationId: 18
      userId: 19
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"success","message":"\u041a\u0443\u0431\u043e\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0451\u043d","cup":{"id":12,"name":"\u0415\u043b\u0435\u043d\u0430 \u0410\u043d\u0434\u0440\u0435\u0435\u0432\u043d\u0430 \u0411\u043e\u0431\u044b\u043b\u0451\u0432\u0430","year":1995,"stages":"5"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
